

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Jun 03 08:15:45 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.20
    71                           ; Generated 12/02/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F1936 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104     0000                     	;# 
   105     0001                     	;# 
   106     0002                     	;# 
   107     0003                     	;# 
   108     0004                     	;# 
   109     0005                     	;# 
   110     0006                     	;# 
   111     0007                     	;# 
   112     0008                     	;# 
   113     0009                     	;# 
   114     000A                     	;# 
   115     000B                     	;# 
   116     000C                     	;# 
   117     000D                     	;# 
   118     000E                     	;# 
   119     0010                     	;# 
   120     0011                     	;# 
   121     0012                     	;# 
   122     0013                     	;# 
   123     0015                     	;# 
   124     0016                     	;# 
   125     0016                     	;# 
   126     0017                     	;# 
   127     0018                     	;# 
   128     0019                     	;# 
   129     001A                     	;# 
   130     001B                     	;# 
   131     001C                     	;# 
   132     001E                     	;# 
   133     001F                     	;# 
   134     008C                     	;# 
   135     008D                     	;# 
   136     008E                     	;# 
   137     0090                     	;# 
   138     0091                     	;# 
   139     0092                     	;# 
   140     0093                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0097                     	;# 
   144     0098                     	;# 
   145     0099                     	;# 
   146     009A                     	;# 
   147     009B                     	;# 
   148     009B                     	;# 
   149     009C                     	;# 
   150     009D                     	;# 
   151     009E                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     0110                     	;# 
   156     0111                     	;# 
   157     0112                     	;# 
   158     0113                     	;# 
   159     0114                     	;# 
   160     0115                     	;# 
   161     0116                     	;# 
   162     0117                     	;# 
   163     0118                     	;# 
   164     0119                     	;# 
   165     011A                     	;# 
   166     011B                     	;# 
   167     011D                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0191                     	;# 
   171     0191                     	;# 
   172     0192                     	;# 
   173     0193                     	;# 
   174     0193                     	;# 
   175     0193                     	;# 
   176     0194                     	;# 
   177     0195                     	;# 
   178     0196                     	;# 
   179     0199                     	;# 
   180     019A                     	;# 
   181     019B                     	;# 
   182     019B                     	;# 
   183     019B                     	;# 
   184     019B                     	;# 
   185     019C                     	;# 
   186     019C                     	;# 
   187     019D                     	;# 
   188     019E                     	;# 
   189     019F                     	;# 
   190     020D                     	;# 
   191     0210                     	;# 
   192     0211                     	;# 
   193     0212                     	;# 
   194     0213                     	;# 
   195     0214                     	;# 
   196     0215                     	;# 
   197     0215                     	;# 
   198     0216                     	;# 
   199     0217                     	;# 
   200     0291                     	;# 
   201     0291                     	;# 
   202     0292                     	;# 
   203     0293                     	;# 
   204     0294                     	;# 
   205     0295                     	;# 
   206     0295                     	;# 
   207     0296                     	;# 
   208     0298                     	;# 
   209     0298                     	;# 
   210     0299                     	;# 
   211     029A                     	;# 
   212     029B                     	;# 
   213     029C                     	;# 
   214     029C                     	;# 
   215     029D                     	;# 
   216     029E                     	;# 
   217     029F                     	;# 
   218     0311                     	;# 
   219     0311                     	;# 
   220     0312                     	;# 
   221     0313                     	;# 
   222     0314                     	;# 
   223     0315                     	;# 
   224     0315                     	;# 
   225     0316                     	;# 
   226     0318                     	;# 
   227     0318                     	;# 
   228     0319                     	;# 
   229     031A                     	;# 
   230     031C                     	;# 
   231     031C                     	;# 
   232     031D                     	;# 
   233     031E                     	;# 
   234     0394                     	;# 
   235     0395                     	;# 
   236     0396                     	;# 
   237     0415                     	;# 
   238     0416                     	;# 
   239     0417                     	;# 
   240     041C                     	;# 
   241     041D                     	;# 
   242     041E                     	;# 
   243     0791                     	;# 
   244     0792                     	;# 
   245     0793                     	;# 
   246     0794                     	;# 
   247     0795                     	;# 
   248     0798                     	;# 
   249     0799                     	;# 
   250     07A0                     	;# 
   251     07A1                     	;# 
   252     07A3                     	;# 
   253     07A4                     	;# 
   254     07A6                     	;# 
   255     07A7                     	;# 
   256     07A9                     	;# 
   257     07AA                     	;# 
   258     0FE4                     	;# 
   259     0FE5                     	;# 
   260     0FE6                     	;# 
   261     0FE7                     	;# 
   262     0FE8                     	;# 
   263     0FE9                     	;# 
   264     0FEA                     	;# 
   265     0FEB                     	;# 
   266     0FED                     	;# 
   267     0FEE                     	;# 
   268     0FEF                     	;# 
   269     0000                     	;# 
   270     0001                     	;# 
   271     0002                     	;# 
   272     0003                     	;# 
   273     0004                     	;# 
   274     0005                     	;# 
   275     0006                     	;# 
   276     0007                     	;# 
   277     0008                     	;# 
   278     0009                     	;# 
   279     000A                     	;# 
   280     000B                     	;# 
   281     000C                     	;# 
   282     000D                     	;# 
   283     000E                     	;# 
   284     0010                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0015                     	;# 
   289     0016                     	;# 
   290     0016                     	;# 
   291     0017                     	;# 
   292     0018                     	;# 
   293     0019                     	;# 
   294     001A                     	;# 
   295     001B                     	;# 
   296     001C                     	;# 
   297     001E                     	;# 
   298     001F                     	;# 
   299     008C                     	;# 
   300     008D                     	;# 
   301     008E                     	;# 
   302     0090                     	;# 
   303     0091                     	;# 
   304     0092                     	;# 
   305     0093                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     010E                     	;# 
   320     0110                     	;# 
   321     0111                     	;# 
   322     0112                     	;# 
   323     0113                     	;# 
   324     0114                     	;# 
   325     0115                     	;# 
   326     0116                     	;# 
   327     0117                     	;# 
   328     0118                     	;# 
   329     0119                     	;# 
   330     011A                     	;# 
   331     011B                     	;# 
   332     011D                     	;# 
   333     018C                     	;# 
   334     018D                     	;# 
   335     0191                     	;# 
   336     0191                     	;# 
   337     0192                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0193                     	;# 
   341     0194                     	;# 
   342     0195                     	;# 
   343     0196                     	;# 
   344     0199                     	;# 
   345     019A                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019B                     	;# 
   350     019C                     	;# 
   351     019C                     	;# 
   352     019D                     	;# 
   353     019E                     	;# 
   354     019F                     	;# 
   355     020D                     	;# 
   356     0210                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0213                     	;# 
   360     0214                     	;# 
   361     0215                     	;# 
   362     0215                     	;# 
   363     0216                     	;# 
   364     0217                     	;# 
   365     0291                     	;# 
   366     0291                     	;# 
   367     0292                     	;# 
   368     0293                     	;# 
   369     0294                     	;# 
   370     0295                     	;# 
   371     0295                     	;# 
   372     0296                     	;# 
   373     0298                     	;# 
   374     0298                     	;# 
   375     0299                     	;# 
   376     029A                     	;# 
   377     029B                     	;# 
   378     029C                     	;# 
   379     029C                     	;# 
   380     029D                     	;# 
   381     029E                     	;# 
   382     029F                     	;# 
   383     0311                     	;# 
   384     0311                     	;# 
   385     0312                     	;# 
   386     0313                     	;# 
   387     0314                     	;# 
   388     0315                     	;# 
   389     0315                     	;# 
   390     0316                     	;# 
   391     0318                     	;# 
   392     0318                     	;# 
   393     0319                     	;# 
   394     031A                     	;# 
   395     031C                     	;# 
   396     031C                     	;# 
   397     031D                     	;# 
   398     031E                     	;# 
   399     0394                     	;# 
   400     0395                     	;# 
   401     0396                     	;# 
   402     0415                     	;# 
   403     0416                     	;# 
   404     0417                     	;# 
   405     041C                     	;# 
   406     041D                     	;# 
   407     041E                     	;# 
   408     0791                     	;# 
   409     0792                     	;# 
   410     0793                     	;# 
   411     0794                     	;# 
   412     0795                     	;# 
   413     0798                     	;# 
   414     0799                     	;# 
   415     07A0                     	;# 
   416     07A1                     	;# 
   417     07A3                     	;# 
   418     07A4                     	;# 
   419     07A6                     	;# 
   420     07A7                     	;# 
   421     07A9                     	;# 
   422     07AA                     	;# 
   423     0FE4                     	;# 
   424     0FE5                     	;# 
   425     0FE6                     	;# 
   426     0FE7                     	;# 
   427     0FE8                     	;# 
   428     0FE9                     	;# 
   429     0FEA                     	;# 
   430     0FEB                     	;# 
   431     0FED                     	;# 
   432     0FEE                     	;# 
   433     0FEF                     	;# 
   434     0000                     	;# 
   435     0001                     	;# 
   436     0002                     	;# 
   437     0003                     	;# 
   438     0004                     	;# 
   439     0005                     	;# 
   440     0006                     	;# 
   441     0007                     	;# 
   442     0008                     	;# 
   443     0009                     	;# 
   444     000A                     	;# 
   445     000B                     	;# 
   446     000C                     	;# 
   447     000D                     	;# 
   448     000E                     	;# 
   449     0010                     	;# 
   450     0011                     	;# 
   451     0012                     	;# 
   452     0013                     	;# 
   453     0015                     	;# 
   454     0016                     	;# 
   455     0016                     	;# 
   456     0017                     	;# 
   457     0018                     	;# 
   458     0019                     	;# 
   459     001A                     	;# 
   460     001B                     	;# 
   461     001C                     	;# 
   462     001E                     	;# 
   463     001F                     	;# 
   464     008C                     	;# 
   465     008D                     	;# 
   466     008E                     	;# 
   467     0090                     	;# 
   468     0091                     	;# 
   469     0092                     	;# 
   470     0093                     	;# 
   471     0095                     	;# 
   472     0096                     	;# 
   473     0097                     	;# 
   474     0098                     	;# 
   475     0099                     	;# 
   476     009A                     	;# 
   477     009B                     	;# 
   478     009B                     	;# 
   479     009C                     	;# 
   480     009D                     	;# 
   481     009E                     	;# 
   482     010C                     	;# 
   483     010D                     	;# 
   484     010E                     	;# 
   485     0110                     	;# 
   486     0111                     	;# 
   487     0112                     	;# 
   488     0113                     	;# 
   489     0114                     	;# 
   490     0115                     	;# 
   491     0116                     	;# 
   492     0117                     	;# 
   493     0118                     	;# 
   494     0119                     	;# 
   495     011A                     	;# 
   496     011B                     	;# 
   497     011D                     	;# 
   498     018C                     	;# 
   499     018D                     	;# 
   500     0191                     	;# 
   501     0191                     	;# 
   502     0192                     	;# 
   503     0193                     	;# 
   504     0193                     	;# 
   505     0193                     	;# 
   506     0194                     	;# 
   507     0195                     	;# 
   508     0196                     	;# 
   509     0199                     	;# 
   510     019A                     	;# 
   511     019B                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019B                     	;# 
   515     019C                     	;# 
   516     019C                     	;# 
   517     019D                     	;# 
   518     019E                     	;# 
   519     019F                     	;# 
   520     020D                     	;# 
   521     0210                     	;# 
   522     0211                     	;# 
   523     0212                     	;# 
   524     0213                     	;# 
   525     0214                     	;# 
   526     0215                     	;# 
   527     0215                     	;# 
   528     0216                     	;# 
   529     0217                     	;# 
   530     0291                     	;# 
   531     0291                     	;# 
   532     0292                     	;# 
   533     0293                     	;# 
   534     0294                     	;# 
   535     0295                     	;# 
   536     0295                     	;# 
   537     0296                     	;# 
   538     0298                     	;# 
   539     0298                     	;# 
   540     0299                     	;# 
   541     029A                     	;# 
   542     029B                     	;# 
   543     029C                     	;# 
   544     029C                     	;# 
   545     029D                     	;# 
   546     029E                     	;# 
   547     029F                     	;# 
   548     0311                     	;# 
   549     0311                     	;# 
   550     0312                     	;# 
   551     0313                     	;# 
   552     0314                     	;# 
   553     0315                     	;# 
   554     0315                     	;# 
   555     0316                     	;# 
   556     0318                     	;# 
   557     0318                     	;# 
   558     0319                     	;# 
   559     031A                     	;# 
   560     031C                     	;# 
   561     031C                     	;# 
   562     031D                     	;# 
   563     031E                     	;# 
   564     0394                     	;# 
   565     0395                     	;# 
   566     0396                     	;# 
   567     0415                     	;# 
   568     0416                     	;# 
   569     0417                     	;# 
   570     041C                     	;# 
   571     041D                     	;# 
   572     041E                     	;# 
   573     0791                     	;# 
   574     0792                     	;# 
   575     0793                     	;# 
   576     0794                     	;# 
   577     0795                     	;# 
   578     0798                     	;# 
   579     0799                     	;# 
   580     07A0                     	;# 
   581     07A1                     	;# 
   582     07A3                     	;# 
   583     07A4                     	;# 
   584     07A6                     	;# 
   585     07A7                     	;# 
   586     07A9                     	;# 
   587     07AA                     	;# 
   588     0FE4                     	;# 
   589     0FE5                     	;# 
   590     0FE6                     	;# 
   591     0FE7                     	;# 
   592     0FE8                     	;# 
   593     0FE9                     	;# 
   594     0FEA                     	;# 
   595     0FEB                     	;# 
   596     0FED                     	;# 
   597     0FEE                     	;# 
   598     0FEF                     	;# 
   599     0000                     	;# 
   600     0001                     	;# 
   601     0002                     	;# 
   602     0003                     	;# 
   603     0004                     	;# 
   604     0005                     	;# 
   605     0006                     	;# 
   606     0007                     	;# 
   607     0008                     	;# 
   608     0009                     	;# 
   609     000A                     	;# 
   610     000B                     	;# 
   611     000C                     	;# 
   612     000D                     	;# 
   613     000E                     	;# 
   614     0010                     	;# 
   615     0011                     	;# 
   616     0012                     	;# 
   617     0013                     	;# 
   618     0015                     	;# 
   619     0016                     	;# 
   620     0016                     	;# 
   621     0017                     	;# 
   622     0018                     	;# 
   623     0019                     	;# 
   624     001A                     	;# 
   625     001B                     	;# 
   626     001C                     	;# 
   627     001E                     	;# 
   628     001F                     	;# 
   629     008C                     	;# 
   630     008D                     	;# 
   631     008E                     	;# 
   632     0090                     	;# 
   633     0091                     	;# 
   634     0092                     	;# 
   635     0093                     	;# 
   636     0095                     	;# 
   637     0096                     	;# 
   638     0097                     	;# 
   639     0098                     	;# 
   640     0099                     	;# 
   641     009A                     	;# 
   642     009B                     	;# 
   643     009B                     	;# 
   644     009C                     	;# 
   645     009D                     	;# 
   646     009E                     	;# 
   647     010C                     	;# 
   648     010D                     	;# 
   649     010E                     	;# 
   650     0110                     	;# 
   651     0111                     	;# 
   652     0112                     	;# 
   653     0113                     	;# 
   654     0114                     	;# 
   655     0115                     	;# 
   656     0116                     	;# 
   657     0117                     	;# 
   658     0118                     	;# 
   659     0119                     	;# 
   660     011A                     	;# 
   661     011B                     	;# 
   662     011D                     	;# 
   663     018C                     	;# 
   664     018D                     	;# 
   665     0191                     	;# 
   666     0191                     	;# 
   667     0192                     	;# 
   668     0193                     	;# 
   669     0193                     	;# 
   670     0193                     	;# 
   671     0194                     	;# 
   672     0195                     	;# 
   673     0196                     	;# 
   674     0199                     	;# 
   675     019A                     	;# 
   676     019B                     	;# 
   677     019B                     	;# 
   678     019B                     	;# 
   679     019B                     	;# 
   680     019C                     	;# 
   681     019C                     	;# 
   682     019D                     	;# 
   683     019E                     	;# 
   684     019F                     	;# 
   685     020D                     	;# 
   686     0210                     	;# 
   687     0211                     	;# 
   688     0212                     	;# 
   689     0213                     	;# 
   690     0214                     	;# 
   691     0215                     	;# 
   692     0215                     	;# 
   693     0216                     	;# 
   694     0217                     	;# 
   695     0291                     	;# 
   696     0291                     	;# 
   697     0292                     	;# 
   698     0293                     	;# 
   699     0294                     	;# 
   700     0295                     	;# 
   701     0295                     	;# 
   702     0296                     	;# 
   703     0298                     	;# 
   704     0298                     	;# 
   705     0299                     	;# 
   706     029A                     	;# 
   707     029B                     	;# 
   708     029C                     	;# 
   709     029C                     	;# 
   710     029D                     	;# 
   711     029E                     	;# 
   712     029F                     	;# 
   713     0311                     	;# 
   714     0311                     	;# 
   715     0312                     	;# 
   716     0313                     	;# 
   717     0314                     	;# 
   718     0315                     	;# 
   719     0315                     	;# 
   720     0316                     	;# 
   721     0318                     	;# 
   722     0318                     	;# 
   723     0319                     	;# 
   724     031A                     	;# 
   725     031C                     	;# 
   726     031C                     	;# 
   727     031D                     	;# 
   728     031E                     	;# 
   729     0394                     	;# 
   730     0395                     	;# 
   731     0396                     	;# 
   732     0415                     	;# 
   733     0416                     	;# 
   734     0417                     	;# 
   735     041C                     	;# 
   736     041D                     	;# 
   737     041E                     	;# 
   738     0791                     	;# 
   739     0792                     	;# 
   740     0793                     	;# 
   741     0794                     	;# 
   742     0795                     	;# 
   743     0798                     	;# 
   744     0799                     	;# 
   745     07A0                     	;# 
   746     07A1                     	;# 
   747     07A3                     	;# 
   748     07A4                     	;# 
   749     07A6                     	;# 
   750     07A7                     	;# 
   751     07A9                     	;# 
   752     07AA                     	;# 
   753     0FE4                     	;# 
   754     0FE5                     	;# 
   755     0FE6                     	;# 
   756     0FE7                     	;# 
   757     0FE8                     	;# 
   758     0FE9                     	;# 
   759     0FEA                     	;# 
   760     0FEB                     	;# 
   761     0FED                     	;# 
   762     0FEE                     	;# 
   763     0FEF                     	;# 
   764     0000                     	;# 
   765     0001                     	;# 
   766     0002                     	;# 
   767     0003                     	;# 
   768     0004                     	;# 
   769     0005                     	;# 
   770     0006                     	;# 
   771     0007                     	;# 
   772     0008                     	;# 
   773     0009                     	;# 
   774     000A                     	;# 
   775     000B                     	;# 
   776     000C                     	;# 
   777     000D                     	;# 
   778     000E                     	;# 
   779     0010                     	;# 
   780     0011                     	;# 
   781     0012                     	;# 
   782     0013                     	;# 
   783     0015                     	;# 
   784     0016                     	;# 
   785     0016                     	;# 
   786     0017                     	;# 
   787     0018                     	;# 
   788     0019                     	;# 
   789     001A                     	;# 
   790     001B                     	;# 
   791     001C                     	;# 
   792     001E                     	;# 
   793     001F                     	;# 
   794     008C                     	;# 
   795     008D                     	;# 
   796     008E                     	;# 
   797     0090                     	;# 
   798     0091                     	;# 
   799     0092                     	;# 
   800     0093                     	;# 
   801     0095                     	;# 
   802     0096                     	;# 
   803     0097                     	;# 
   804     0098                     	;# 
   805     0099                     	;# 
   806     009A                     	;# 
   807     009B                     	;# 
   808     009B                     	;# 
   809     009C                     	;# 
   810     009D                     	;# 
   811     009E                     	;# 
   812     010C                     	;# 
   813     010D                     	;# 
   814     010E                     	;# 
   815     0110                     	;# 
   816     0111                     	;# 
   817     0112                     	;# 
   818     0113                     	;# 
   819     0114                     	;# 
   820     0115                     	;# 
   821     0116                     	;# 
   822     0117                     	;# 
   823     0118                     	;# 
   824     0119                     	;# 
   825     011A                     	;# 
   826     011B                     	;# 
   827     011D                     	;# 
   828     018C                     	;# 
   829     018D                     	;# 
   830     0191                     	;# 
   831     0191                     	;# 
   832     0192                     	;# 
   833     0193                     	;# 
   834     0193                     	;# 
   835     0193                     	;# 
   836     0194                     	;# 
   837     0195                     	;# 
   838     0196                     	;# 
   839     0199                     	;# 
   840     019A                     	;# 
   841     019B                     	;# 
   842     019B                     	;# 
   843     019B                     	;# 
   844     019B                     	;# 
   845     019C                     	;# 
   846     019C                     	;# 
   847     019D                     	;# 
   848     019E                     	;# 
   849     019F                     	;# 
   850     020D                     	;# 
   851     0210                     	;# 
   852     0211                     	;# 
   853     0212                     	;# 
   854     0213                     	;# 
   855     0214                     	;# 
   856     0215                     	;# 
   857     0215                     	;# 
   858     0216                     	;# 
   859     0217                     	;# 
   860     0291                     	;# 
   861     0291                     	;# 
   862     0292                     	;# 
   863     0293                     	;# 
   864     0294                     	;# 
   865     0295                     	;# 
   866     0295                     	;# 
   867     0296                     	;# 
   868     0298                     	;# 
   869     0298                     	;# 
   870     0299                     	;# 
   871     029A                     	;# 
   872     029B                     	;# 
   873     029C                     	;# 
   874     029C                     	;# 
   875     029D                     	;# 
   876     029E                     	;# 
   877     029F                     	;# 
   878     0311                     	;# 
   879     0311                     	;# 
   880     0312                     	;# 
   881     0313                     	;# 
   882     0314                     	;# 
   883     0315                     	;# 
   884     0315                     	;# 
   885     0316                     	;# 
   886     0318                     	;# 
   887     0318                     	;# 
   888     0319                     	;# 
   889     031A                     	;# 
   890     031C                     	;# 
   891     031C                     	;# 
   892     031D                     	;# 
   893     031E                     	;# 
   894     0394                     	;# 
   895     0395                     	;# 
   896     0396                     	;# 
   897     0415                     	;# 
   898     0416                     	;# 
   899     0417                     	;# 
   900     041C                     	;# 
   901     041D                     	;# 
   902     041E                     	;# 
   903     0791                     	;# 
   904     0792                     	;# 
   905     0793                     	;# 
   906     0794                     	;# 
   907     0795                     	;# 
   908     0798                     	;# 
   909     0799                     	;# 
   910     07A0                     	;# 
   911     07A1                     	;# 
   912     07A3                     	;# 
   913     07A4                     	;# 
   914     07A6                     	;# 
   915     07A7                     	;# 
   916     07A9                     	;# 
   917     07AA                     	;# 
   918     0FE4                     	;# 
   919     0FE5                     	;# 
   920     0FE6                     	;# 
   921     0FE7                     	;# 
   922     0FE8                     	;# 
   923     0FE9                     	;# 
   924     0FEA                     	;# 
   925     0FEB                     	;# 
   926     0FED                     	;# 
   927     0FEE                     	;# 
   928     0FEF                     	;# 
   929     0000                     	;# 
   930     0001                     	;# 
   931     0002                     	;# 
   932     0003                     	;# 
   933     0004                     	;# 
   934     0005                     	;# 
   935     0006                     	;# 
   936     0007                     	;# 
   937     0008                     	;# 
   938     0009                     	;# 
   939     000A                     	;# 
   940     000B                     	;# 
   941     000C                     	;# 
   942     000D                     	;# 
   943     000E                     	;# 
   944     0010                     	;# 
   945     0011                     	;# 
   946     0012                     	;# 
   947     0013                     	;# 
   948     0015                     	;# 
   949     0016                     	;# 
   950     0016                     	;# 
   951     0017                     	;# 
   952     0018                     	;# 
   953     0019                     	;# 
   954     001A                     	;# 
   955     001B                     	;# 
   956     001C                     	;# 
   957     001E                     	;# 
   958     001F                     	;# 
   959     008C                     	;# 
   960     008D                     	;# 
   961     008E                     	;# 
   962     0090                     	;# 
   963     0091                     	;# 
   964     0092                     	;# 
   965     0093                     	;# 
   966     0095                     	;# 
   967     0096                     	;# 
   968     0097                     	;# 
   969     0098                     	;# 
   970     0099                     	;# 
   971     009A                     	;# 
   972     009B                     	;# 
   973     009B                     	;# 
   974     009C                     	;# 
   975     009D                     	;# 
   976     009E                     	;# 
   977     010C                     	;# 
   978     010D                     	;# 
   979     010E                     	;# 
   980     0110                     	;# 
   981     0111                     	;# 
   982     0112                     	;# 
   983     0113                     	;# 
   984     0114                     	;# 
   985     0115                     	;# 
   986     0116                     	;# 
   987     0117                     	;# 
   988     0118                     	;# 
   989     0119                     	;# 
   990     011A                     	;# 
   991     011B                     	;# 
   992     011D                     	;# 
   993     018C                     	;# 
   994     018D                     	;# 
   995     0191                     	;# 
   996     0191                     	;# 
   997     0192                     	;# 
   998     0193                     	;# 
   999     0193                     	;# 
  1000     0193                     	;# 
  1001     0194                     	;# 
  1002     0195                     	;# 
  1003     0196                     	;# 
  1004     0199                     	;# 
  1005     019A                     	;# 
  1006     019B                     	;# 
  1007     019B                     	;# 
  1008     019B                     	;# 
  1009     019B                     	;# 
  1010     019C                     	;# 
  1011     019C                     	;# 
  1012     019D                     	;# 
  1013     019E                     	;# 
  1014     019F                     	;# 
  1015     020D                     	;# 
  1016     0210                     	;# 
  1017     0211                     	;# 
  1018     0212                     	;# 
  1019     0213                     	;# 
  1020     0214                     	;# 
  1021     0215                     	;# 
  1022     0215                     	;# 
  1023     0216                     	;# 
  1024     0217                     	;# 
  1025     0291                     	;# 
  1026     0291                     	;# 
  1027     0292                     	;# 
  1028     0293                     	;# 
  1029     0294                     	;# 
  1030     0295                     	;# 
  1031     0295                     	;# 
  1032     0296                     	;# 
  1033     0298                     	;# 
  1034     0298                     	;# 
  1035     0299                     	;# 
  1036     029A                     	;# 
  1037     029B                     	;# 
  1038     029C                     	;# 
  1039     029C                     	;# 
  1040     029D                     	;# 
  1041     029E                     	;# 
  1042     029F                     	;# 
  1043     0311                     	;# 
  1044     0311                     	;# 
  1045     0312                     	;# 
  1046     0313                     	;# 
  1047     0314                     	;# 
  1048     0315                     	;# 
  1049     0315                     	;# 
  1050     0316                     	;# 
  1051     0318                     	;# 
  1052     0318                     	;# 
  1053     0319                     	;# 
  1054     031A                     	;# 
  1055     031C                     	;# 
  1056     031C                     	;# 
  1057     031D                     	;# 
  1058     031E                     	;# 
  1059     0394                     	;# 
  1060     0395                     	;# 
  1061     0396                     	;# 
  1062     0415                     	;# 
  1063     0416                     	;# 
  1064     0417                     	;# 
  1065     041C                     	;# 
  1066     041D                     	;# 
  1067     041E                     	;# 
  1068     0791                     	;# 
  1069     0792                     	;# 
  1070     0793                     	;# 
  1071     0794                     	;# 
  1072     0795                     	;# 
  1073     0798                     	;# 
  1074     0799                     	;# 
  1075     07A0                     	;# 
  1076     07A1                     	;# 
  1077     07A3                     	;# 
  1078     07A4                     	;# 
  1079     07A6                     	;# 
  1080     07A7                     	;# 
  1081     07A9                     	;# 
  1082     07AA                     	;# 
  1083     0FE4                     	;# 
  1084     0FE5                     	;# 
  1085     0FE6                     	;# 
  1086     0FE7                     	;# 
  1087     0FE8                     	;# 
  1088     0FE9                     	;# 
  1089     0FEA                     	;# 
  1090     0FEB                     	;# 
  1091     0FED                     	;# 
  1092     0FEE                     	;# 
  1093     0FEF                     	;# 
  1094     0000                     	;# 
  1095     0001                     	;# 
  1096     0002                     	;# 
  1097     0003                     	;# 
  1098     0004                     	;# 
  1099     0005                     	;# 
  1100     0006                     	;# 
  1101     0007                     	;# 
  1102     0008                     	;# 
  1103     0009                     	;# 
  1104     000A                     	;# 
  1105     000B                     	;# 
  1106     000C                     	;# 
  1107     000D                     	;# 
  1108     000E                     	;# 
  1109     0010                     	;# 
  1110     0011                     	;# 
  1111     0012                     	;# 
  1112     0013                     	;# 
  1113     0015                     	;# 
  1114     0016                     	;# 
  1115     0016                     	;# 
  1116     0017                     	;# 
  1117     0018                     	;# 
  1118     0019                     	;# 
  1119     001A                     	;# 
  1120     001B                     	;# 
  1121     001C                     	;# 
  1122     001E                     	;# 
  1123     001F                     	;# 
  1124     008C                     	;# 
  1125     008D                     	;# 
  1126     008E                     	;# 
  1127     0090                     	;# 
  1128     0091                     	;# 
  1129     0092                     	;# 
  1130     0093                     	;# 
  1131     0095                     	;# 
  1132     0096                     	;# 
  1133     0097                     	;# 
  1134     0098                     	;# 
  1135     0099                     	;# 
  1136     009A                     	;# 
  1137     009B                     	;# 
  1138     009B                     	;# 
  1139     009C                     	;# 
  1140     009D                     	;# 
  1141     009E                     	;# 
  1142     010C                     	;# 
  1143     010D                     	;# 
  1144     010E                     	;# 
  1145     0110                     	;# 
  1146     0111                     	;# 
  1147     0112                     	;# 
  1148     0113                     	;# 
  1149     0114                     	;# 
  1150     0115                     	;# 
  1151     0116                     	;# 
  1152     0117                     	;# 
  1153     0118                     	;# 
  1154     0119                     	;# 
  1155     011A                     	;# 
  1156     011B                     	;# 
  1157     011D                     	;# 
  1158     018C                     	;# 
  1159     018D                     	;# 
  1160     0191                     	;# 
  1161     0191                     	;# 
  1162     0192                     	;# 
  1163     0193                     	;# 
  1164     0193                     	;# 
  1165     0193                     	;# 
  1166     0194                     	;# 
  1167     0195                     	;# 
  1168     0196                     	;# 
  1169     0199                     	;# 
  1170     019A                     	;# 
  1171     019B                     	;# 
  1172     019B                     	;# 
  1173     019B                     	;# 
  1174     019B                     	;# 
  1175     019C                     	;# 
  1176     019C                     	;# 
  1177     019D                     	;# 
  1178     019E                     	;# 
  1179     019F                     	;# 
  1180     020D                     	;# 
  1181     0210                     	;# 
  1182     0211                     	;# 
  1183     0212                     	;# 
  1184     0213                     	;# 
  1185     0214                     	;# 
  1186     0215                     	;# 
  1187     0215                     	;# 
  1188     0216                     	;# 
  1189     0217                     	;# 
  1190     0291                     	;# 
  1191     0291                     	;# 
  1192     0292                     	;# 
  1193     0293                     	;# 
  1194     0294                     	;# 
  1195     0295                     	;# 
  1196     0295                     	;# 
  1197     0296                     	;# 
  1198     0298                     	;# 
  1199     0298                     	;# 
  1200     0299                     	;# 
  1201     029A                     	;# 
  1202     029B                     	;# 
  1203     029C                     	;# 
  1204     029C                     	;# 
  1205     029D                     	;# 
  1206     029E                     	;# 
  1207     029F                     	;# 
  1208     0311                     	;# 
  1209     0311                     	;# 
  1210     0312                     	;# 
  1211     0313                     	;# 
  1212     0314                     	;# 
  1213     0315                     	;# 
  1214     0315                     	;# 
  1215     0316                     	;# 
  1216     0318                     	;# 
  1217     0318                     	;# 
  1218     0319                     	;# 
  1219     031A                     	;# 
  1220     031C                     	;# 
  1221     031C                     	;# 
  1222     031D                     	;# 
  1223     031E                     	;# 
  1224     0394                     	;# 
  1225     0395                     	;# 
  1226     0396                     	;# 
  1227     0415                     	;# 
  1228     0416                     	;# 
  1229     0417                     	;# 
  1230     041C                     	;# 
  1231     041D                     	;# 
  1232     041E                     	;# 
  1233     0791                     	;# 
  1234     0792                     	;# 
  1235     0793                     	;# 
  1236     0794                     	;# 
  1237     0795                     	;# 
  1238     0798                     	;# 
  1239     0799                     	;# 
  1240     07A0                     	;# 
  1241     07A1                     	;# 
  1242     07A3                     	;# 
  1243     07A4                     	;# 
  1244     07A6                     	;# 
  1245     07A7                     	;# 
  1246     07A9                     	;# 
  1247     07AA                     	;# 
  1248     0FE4                     	;# 
  1249     0FE5                     	;# 
  1250     0FE6                     	;# 
  1251     0FE7                     	;# 
  1252     0FE8                     	;# 
  1253     0FE9                     	;# 
  1254     0FEA                     	;# 
  1255     0FEB                     	;# 
  1256     0FED                     	;# 
  1257     0FEE                     	;# 
  1258     0FEF                     	;# 
  1259     0000                     	;# 
  1260     0001                     	;# 
  1261     0002                     	;# 
  1262     0003                     	;# 
  1263     0004                     	;# 
  1264     0005                     	;# 
  1265     0006                     	;# 
  1266     0007                     	;# 
  1267     0008                     	;# 
  1268     0009                     	;# 
  1269     000A                     	;# 
  1270     000B                     	;# 
  1271     000C                     	;# 
  1272     000D                     	;# 
  1273     000E                     	;# 
  1274     0010                     	;# 
  1275     0011                     	;# 
  1276     0012                     	;# 
  1277     0013                     	;# 
  1278     0015                     	;# 
  1279     0016                     	;# 
  1280     0016                     	;# 
  1281     0017                     	;# 
  1282     0018                     	;# 
  1283     0019                     	;# 
  1284     001A                     	;# 
  1285     001B                     	;# 
  1286     001C                     	;# 
  1287     001E                     	;# 
  1288     001F                     	;# 
  1289     008C                     	;# 
  1290     008D                     	;# 
  1291     008E                     	;# 
  1292     0090                     	;# 
  1293     0091                     	;# 
  1294     0092                     	;# 
  1295     0093                     	;# 
  1296     0095                     	;# 
  1297     0096                     	;# 
  1298     0097                     	;# 
  1299     0098                     	;# 
  1300     0099                     	;# 
  1301     009A                     	;# 
  1302     009B                     	;# 
  1303     009B                     	;# 
  1304     009C                     	;# 
  1305     009D                     	;# 
  1306     009E                     	;# 
  1307     010C                     	;# 
  1308     010D                     	;# 
  1309     010E                     	;# 
  1310     0110                     	;# 
  1311     0111                     	;# 
  1312     0112                     	;# 
  1313     0113                     	;# 
  1314     0114                     	;# 
  1315     0115                     	;# 
  1316     0116                     	;# 
  1317     0117                     	;# 
  1318     0118                     	;# 
  1319     0119                     	;# 
  1320     011A                     	;# 
  1321     011B                     	;# 
  1322     011D                     	;# 
  1323     018C                     	;# 
  1324     018D                     	;# 
  1325     0191                     	;# 
  1326     0191                     	;# 
  1327     0192                     	;# 
  1328     0193                     	;# 
  1329     0193                     	;# 
  1330     0193                     	;# 
  1331     0194                     	;# 
  1332     0195                     	;# 
  1333     0196                     	;# 
  1334     0199                     	;# 
  1335     019A                     	;# 
  1336     019B                     	;# 
  1337     019B                     	;# 
  1338     019B                     	;# 
  1339     019B                     	;# 
  1340     019C                     	;# 
  1341     019C                     	;# 
  1342     019D                     	;# 
  1343     019E                     	;# 
  1344     019F                     	;# 
  1345     020D                     	;# 
  1346     0210                     	;# 
  1347     0211                     	;# 
  1348     0212                     	;# 
  1349     0213                     	;# 
  1350     0214                     	;# 
  1351     0215                     	;# 
  1352     0215                     	;# 
  1353     0216                     	;# 
  1354     0217                     	;# 
  1355     0291                     	;# 
  1356     0291                     	;# 
  1357     0292                     	;# 
  1358     0293                     	;# 
  1359     0294                     	;# 
  1360     0295                     	;# 
  1361     0295                     	;# 
  1362     0296                     	;# 
  1363     0298                     	;# 
  1364     0298                     	;# 
  1365     0299                     	;# 
  1366     029A                     	;# 
  1367     029B                     	;# 
  1368     029C                     	;# 
  1369     029C                     	;# 
  1370     029D                     	;# 
  1371     029E                     	;# 
  1372     029F                     	;# 
  1373     0311                     	;# 
  1374     0311                     	;# 
  1375     0312                     	;# 
  1376     0313                     	;# 
  1377     0314                     	;# 
  1378     0315                     	;# 
  1379     0315                     	;# 
  1380     0316                     	;# 
  1381     0318                     	;# 
  1382     0318                     	;# 
  1383     0319                     	;# 
  1384     031A                     	;# 
  1385     031C                     	;# 
  1386     031C                     	;# 
  1387     031D                     	;# 
  1388     031E                     	;# 
  1389     0394                     	;# 
  1390     0395                     	;# 
  1391     0396                     	;# 
  1392     0415                     	;# 
  1393     0416                     	;# 
  1394     0417                     	;# 
  1395     041C                     	;# 
  1396     041D                     	;# 
  1397     041E                     	;# 
  1398     0791                     	;# 
  1399     0792                     	;# 
  1400     0793                     	;# 
  1401     0794                     	;# 
  1402     0795                     	;# 
  1403     0798                     	;# 
  1404     0799                     	;# 
  1405     07A0                     	;# 
  1406     07A1                     	;# 
  1407     07A3                     	;# 
  1408     07A4                     	;# 
  1409     07A6                     	;# 
  1410     07A7                     	;# 
  1411     07A9                     	;# 
  1412     07AA                     	;# 
  1413     0FE4                     	;# 
  1414     0FE5                     	;# 
  1415     0FE6                     	;# 
  1416     0FE7                     	;# 
  1417     0FE8                     	;# 
  1418     0FE9                     	;# 
  1419     0FEA                     	;# 
  1420     0FEB                     	;# 
  1421     0FED                     	;# 
  1422     0FEE                     	;# 
  1423     0FEF                     	;# 
  1424                           
  1425                           	psect	idataBANK0
  1426     06C9                     __pidataBANK0:
  1427                           
  1428                           ;initializer for _LIN_timeout
  1429     06C9  340A               	retlw	10
  1430                           
  1431                           	psect	stringtext1
  1432     066F                     __pstringtext1:
  1433     066F                     _scheduleTable:
  1434     066F  3401               	retlw	1
  1435     0670  3400               	retlw	0
  1436     0671  3408               	retlw	8
  1437     0672  3414               	retlw	20
  1438     0673  341E               	retlw	30
  1439     0674  3442               	retlw	low (_SW_STATE_Data| 0)
  1440     0675                     __end_of_scheduleTable:
  1441     0015                     _TMR0	set	21
  1442     0011                     _PIR1bits	set	17
  1443     000C                     _PORTAbits	set	12
  1444     000B                     _INTCONbits	set	11
  1445     0095                     _OPTION_REG	set	149
  1446     0095                     _OPTION_REGbits	set	149
  1447     008E                     _TRISC	set	142
  1448     008D                     _TRISB	set	141
  1449     008C                     _TRISA	set	140
  1450     0090                     _TRISE	set	144
  1451     0097                     _WDTCON	set	151
  1452     0098                     _OSCTUNE	set	152
  1453     0099                     _OSCCON	set	153
  1454     0091                     _PIE1bits	set	145
  1455     04D6                     _PLLR	set	1238
  1456     011D                     _APFCON	set	285
  1457     010E                     _LATC	set	270
  1458     010D                     _LATB	set	269
  1459     010C                     _LATA	set	268
  1460     0110                     _LATE	set	272
  1461     0116                     _BORCON	set	278
  1462     010D                     _LATBbits	set	269
  1463     018C                     _ANSELA	set	396
  1464     018D                     _ANSELB	set	397
  1465     0199                     _RCREG	set	409
  1466     019A                     _TXREG	set	410
  1467     019C                     _SPBRGH	set	412
  1468     019B                     _SPBRGL	set	411
  1469     019E                     _TXSTA	set	414
  1470     019D                     _RCSTA	set	413
  1471     019F                     _BAUDCON	set	415
  1472     019D                     _RCSTAbits	set	413
  1473     019E                     _TXSTAbits	set	414
  1474     020D                     _WPUB	set	525
  1475     0210                     _WPUE	set	528
  1476                           
  1477                           	psect	cinit
  1478     003A                     start_initialization:	
  1479                           ; #config settings
  1480                           
  1481     003A                     __initialization:
  1482                           
  1483                           ; Initialize objects allocated to BANK0
  1484     003A  3186  26C9  3180   	fcall	__pidataBANK0	;fetch initializer
  1485     003D  00E2               	movwf	__pdataBANK0& (0+127)
  1486                           
  1487                           ; Clear objects allocated to BANK0
  1488     003E  3020               	movlw	low __pbssBANK0
  1489     003F  0084               	movwf	4
  1490     0040  3000               	movlw	high __pbssBANK0
  1491     0041  0085               	movwf	5
  1492     0042  302A               	movlw	42
  1493     0043  3186  2675  3180   	fcall	clear_ram0
  1494                           
  1495                           ; Clear objects allocated to BANK1
  1496     0046  30A0               	movlw	low __pbssBANK1
  1497     0047  0084               	movwf	4
  1498     0048  3000               	movlw	high __pbssBANK1
  1499     0049  0085               	movwf	5
  1500     004A  302F               	movlw	47
  1501     004B  3186  2675  3180   	fcall	clear_ram0
  1502     004E                     end_of_initialization:	
  1503                           ;End of C runtime variable initialization code
  1504                           
  1505     004E                     __end_of__initialization:
  1506     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1507     004F  0020               	movlb	0
  1508     0050  3182  2A0D         	ljmp	_main	;jump to C main() function
  1509                           
  1510                           	psect	bssBANK0
  1511     0020                     __pbssBANK0:
  1512     0020                     _TMR0_InterruptHandler:
  1513     0020                     	ds	2
  1514     0022                     _EUSART_ErrorHandler:
  1515     0022                     	ds	2
  1516     0024                     _EUSART_OverrunErrorHandler:
  1517     0024                     	ds	2
  1518     0026                     _EUSART_FramingErrorHandler:
  1519     0026                     	ds	2
  1520     0028                     _EUSART_RxDefaultInterruptHandler:
  1521     0028                     	ds	2
  1522     002A                     _EUSART_TxDefaultInterruptHandler:
  1523     002A                     	ds	2
  1524     002C                     _schedule:
  1525     002C                     	ds	2
  1526     002E                     _LIN_processData:
  1527     002E                     	ds	2
  1528     0030                     _timer0ReloadVal:
  1529     0030                     	ds	1
  1530     0031                     _eusartRxLastError:
  1531     0031                     	ds	1
  1532     0032                     _eusartRxCount:
  1533     0032                     	ds	1
  1534     0033                     _eusartRxTail:
  1535     0033                     	ds	1
  1536     0034                     _eusartRxHead:
  1537     0034                     	ds	1
  1538     0035                     _eusartTxBufferRemaining:
  1539     0035                     	ds	1
  1540     0036                     _eusartTxTail:
  1541     0036                     	ds	1
  1542     0037                     _eusartTxHead:
  1543     0037                     	ds	1
  1544     0038                     LIN_sendPeriodicTx@scheduleIndex:
  1545     0038                     	ds	1
  1546     0039                     LIN_receivePacket@rxIndex:
  1547     0039                     	ds	1
  1548     003A                     LIN_handler@LIN_state:
  1549     003A                     	ds	1
  1550     003B                     _LIN_periodCallBack:
  1551     003B                     	ds	1
  1552     003C                     _LIN_timerCallBack:
  1553     003C                     	ds	1
  1554     003D                     _LIN_enablePeriodTx:
  1555     003D                     	ds	1
  1556     003E                     _LIN_timerRunning:
  1557     003E                     	ds	1
  1558     003F                     _LIN_period:
  1559     003F                     	ds	1
  1560     0040                     _scheduleLength:
  1561     0040                     	ds	1
  1562     0041                     _LIN_txReady:
  1563     0041                     	ds	1
  1564     0042                     _SW_STATE_Data:
  1565     0042                     	ds	8
  1566                           
  1567                           	psect	dataBANK0
  1568     0062                     __pdataBANK0:
  1569     0062                     _LIN_timeout:
  1570     0062                     	ds	1
  1571                           
  1572                           	psect	bssBANK1
  1573     00A0                     __pbssBANK1:
  1574     00A0                     _eusartRxStatusBuffer:
  1575     00A0                     	ds	8
  1576     00A8                     _eusartRxBuffer:
  1577     00A8                     	ds	8
  1578     00B0                     _eusartTxBuffer:
  1579     00B0                     	ds	8
  1580     00B8                     _LIN_rxPacket:
  1581     00B8                     	ds	12
  1582     00C4                     _LIN_packet:
  1583     00C4                     	ds	11
  1584                           
  1585                           	psect	clrtext
  1586     0675                     clear_ram0:	
  1587                           ;	Called with FSR0 containing the base address, and
  1588                           ;	WREG with the size to clear
  1589                           
  1590     0675  0064               	clrwdt	;clear the watchdog before getting into this loop
  1591     0676                     clrloop0:
  1592     0676  0180               	clrf	0	;clear RAM location pointed to by FSR
  1593     0677  3101               	addfsr 0,1
  1594     0678  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1595     0679  2E76               	goto	clrloop0	;have we reached the end yet?
  1596     067A  3400               	retlw	0	;all done for this memory range, return
  1597                           
  1598                           	psect	cstackBANK1
  1599     00CF                     __pcstackBANK1:
  1600     00CF                     processLIN@tempRxData:
  1601                           
  1602                           ; 8 bytes @ 0x0
  1603     00CF                     	ds	8
  1604     00D7                     processLIN@cmd:
  1605                           
  1606                           ; 1 bytes @ 0x8
  1607     00D7                     	ds	1
  1608                           
  1609                           	psect	cstackCOMMON
  1610     0070                     __pcstackCOMMON:
  1611     0070                     ?_SYSTEM_Initialize:
  1612     0070                     ?_LIN_handler:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0070                     ?_processLIN:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0070                     ?_LIN_getPacket:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0070                     ?_LIN_stopTimer:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0070                     ?_LIN_setTimerHandler:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0070                     ?_LIN_startPeriod:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0070                     ?_LIN_calcParity:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633     0070                     ??_LIN_calcParity:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636     0070                     ?_LIN_disableRx:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0070                     ?_LIN_sendPacket:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0070                     ?_LIN_startTimer:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0070                     ?_LIN_enableRx:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0070                     ?_EUSART_is_rx_ready:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0070                     ?_LIN_receivePacket:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654     0070                     ?_EUSART_Read:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657     0070                     ?_LIN_sendBreak:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660     0070                     ?_EUSART_Write:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0070                     ?_TMR0_WriteTimer:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     0070                     ?_LIN_sendPeriodicTx:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     0070                     ?_EUSART_Receive_ISR:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     0070                     ?_EUSART_Transmit_ISR:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     0070                     ??_EUSART_Transmit_ISR:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0070                     ?_EUSART_DefaultErrorHandler:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0070                     ?_EUSART_RxDataHandler:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0070                     ??_EUSART_RxDataHandler:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0070                     ?_TMR0_ISR:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0070                     ?_PIN_MANAGER_Initialize:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0070                     ?_OSCILLATOR_Initialize:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0070                     ?_WDT_Initialize:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711     0070                     ?_TMR0_Initialize:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0070                     ?_TMR0_DefaultInterruptHandler:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0070                     ??_TMR0_DefaultInterruptHandler:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720     0070                     ?_LIN_Master_Initialize:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723     0070                     ?_LIN_timerHandler:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726     0070                     ?_EUSART_Initialize:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729     0070                     ?_INTERRUPT_InterruptManager:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732     0070                     ?i1_LIN_getChecksum:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735     0070                     ?i1_LIN_stopTimer:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738     0070                     ??i1_LIN_stopTimer:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741     0070                     ?_main:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744     0070                     ?___wmul:	
  1745                           ; 2 bytes @ 0x0
  1746                           
  1747     0070                     ?i1_memcpy:	
  1748                           ; 2 bytes @ 0x0
  1749                           
  1750     0070                     ?i1_memset:	
  1751                           ; 2 bytes @ 0x0
  1752                           
  1753     0070                     i1LIN_getChecksum@pid:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756     0070                     i1memcpy@s1:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759     0070                     ___wmul@multiplier:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762     0070                     i1memset@c:	
  1763                           ; 2 bytes @ 0x0
  1764                           
  1765                           
  1766                           ; 2 bytes @ 0x0
  1767     0070                     	ds	1
  1768     0071                     ??_EUSART_Receive_ISR:
  1769     0071                     ??_EUSART_DefaultErrorHandler:	
  1770                           ; 1 bytes @ 0x1
  1771                           
  1772     0071                     LIN_calcParity@CMD:	
  1773                           ; 1 bytes @ 0x1
  1774                           
  1775     0071                     i1LIN_getChecksum@data:	
  1776                           ; 1 bytes @ 0x1
  1777                           
  1778     0071                     i1memcpy@n:	
  1779                           ; 1 bytes @ 0x1
  1780                           
  1781                           
  1782                           ; 2 bytes @ 0x1
  1783     0071                     	ds	1
  1784     0072                     ??i1_LIN_getChecksum:
  1785     0072                     LIN_calcParity@PID:	
  1786                           ; 1 bytes @ 0x2
  1787                           
  1788     0072                     ___wmul@multiplicand:	
  1789                           ; 1 bytes @ 0x2
  1790                           
  1791     0072                     i1memset@n:	
  1792                           ; 2 bytes @ 0x2
  1793                           
  1794                           
  1795                           ; 2 bytes @ 0x2
  1796     0072                     	ds	1
  1797     0073                     ??i1_memcpy:
  1798                           
  1799                           ; 1 bytes @ 0x3
  1800     0073                     	ds	1
  1801     0074                     ??___wmul:
  1802     0074                     ??i1_memset:	
  1803                           ; 1 bytes @ 0x4
  1804                           
  1805     0074                     i1LIN_getChecksum@length:	
  1806                           ; 1 bytes @ 0x4
  1807                           
  1808     0074                     i1memcpy@d1:	
  1809                           ; 1 bytes @ 0x4
  1810                           
  1811     0074                     ___wmul@product:	
  1812                           ; 1 bytes @ 0x4
  1813                           
  1814                           
  1815                           ; 2 bytes @ 0x4
  1816     0074                     	ds	1
  1817     0075                     i1LIN_getChecksum@i:
  1818     0075                     i1memcpy@tmp:	
  1819                           ; 1 bytes @ 0x5
  1820                           
  1821     0075                     i1memset@dest:	
  1822                           ; 1 bytes @ 0x5
  1823                           
  1824                           
  1825                           ; 1 bytes @ 0x5
  1826     0075                     	ds	1
  1827     0076                     i1memcpy@d:
  1828     0076                     i1memset@p:	
  1829                           ; 1 bytes @ 0x6
  1830                           
  1831     0076                     i1LIN_getChecksum@checksum:	
  1832                           ; 1 bytes @ 0x6
  1833                           
  1834                           
  1835                           ; 2 bytes @ 0x6
  1836     0076                     	ds	1
  1837     0077                     i1memcpy@s:
  1838                           
  1839                           ; 1 bytes @ 0x7
  1840     0077                     	ds	1
  1841     0078                     ?_LIN_queuePacket:
  1842     0078                     LIN_queuePacket@data:	
  1843                           ; 1 bytes @ 0x8
  1844                           
  1845                           
  1846                           ; 1 bytes @ 0x8
  1847     0078                     	ds	1
  1848     0079                     ??_LIN_queuePacket:
  1849                           
  1850                           ; 1 bytes @ 0x9
  1851     0079                     	ds	4
  1852     007D                     ??_LIN_timerHandler:
  1853                           
  1854                           ; 1 bytes @ 0xD
  1855     007D                     	ds	1
  1856     007E                     ??_TMR0_ISR:
  1857     007E                     ??_INTERRUPT_InterruptManager:	
  1858                           ; 1 bytes @ 0xE
  1859                           
  1860                           
  1861                           	psect	cstackBANK0
  1862     004A                     __pcstackBANK0:	
  1863                           ; 1 bytes @ 0xE
  1864                           
  1865     004A                     LIN_queuePacket@cmd:
  1866                           
  1867                           ; 1 bytes @ 0x0
  1868     004A                     	ds	1
  1869     004B                     LIN_queuePacket@i:
  1870                           
  1871                           ; 1 bytes @ 0x1
  1872     004B                     	ds	1
  1873     004C                     LIN_queuePacket@tempSchedule:
  1874                           
  1875                           ; 2 bytes @ 0x2
  1876     004C                     	ds	2
  1877     004E                     ??_LIN_sendPeriodicTx:
  1878                           
  1879                           ; 1 bytes @ 0x4
  1880     004E                     	ds	3
  1881     0051                     LIN_sendPeriodicTx@periodicTx:
  1882                           
  1883                           ; 2 bytes @ 0x7
  1884     0051                     	ds	2
  1885     0053                     ??_LIN_stopTimer:
  1886     0053                     ??_LIN_startPeriod:	
  1887                           ; 1 bytes @ 0x9
  1888                           
  1889     0053                     ?_memset:	
  1890                           ; 1 bytes @ 0x9
  1891                           
  1892     0053                     ?_memcpy:	
  1893                           ; 1 bytes @ 0x9
  1894                           
  1895     0053                     ?_LIN_getChecksum:	
  1896                           ; 1 bytes @ 0x9
  1897                           
  1898     0053                     ??_LIN_disableRx:	
  1899                           ; 1 bytes @ 0x9
  1900                           
  1901     0053                     ??_LIN_enableRx:	
  1902                           ; 1 bytes @ 0x9
  1903                           
  1904     0053                     ??_EUSART_is_rx_ready:	
  1905                           ; 1 bytes @ 0x9
  1906                           
  1907     0053                     ??_EUSART_Read:	
  1908                           ; 1 bytes @ 0x9
  1909                           
  1910     0053                     ??_LIN_sendBreak:	
  1911                           ; 1 bytes @ 0x9
  1912                           
  1913     0053                     ??_EUSART_Write:	
  1914                           ; 1 bytes @ 0x9
  1915                           
  1916     0053                     ??_TMR0_WriteTimer:	
  1917                           ; 1 bytes @ 0x9
  1918                           
  1919     0053                     ?_TMR0_SetInterruptHandler:	
  1920                           ; 1 bytes @ 0x9
  1921                           
  1922     0053                     ?_EUSART_SetRxInterruptHandler:	
  1923                           ; 1 bytes @ 0x9
  1924                           
  1925     0053                     ?_EUSART_SetTxInterruptHandler:	
  1926                           ; 1 bytes @ 0x9
  1927                           
  1928     0053                     ?_EUSART_SetFramingErrorHandler:	
  1929                           ; 1 bytes @ 0x9
  1930                           
  1931     0053                     ?_EUSART_SetOverrunErrorHandler:	
  1932                           ; 1 bytes @ 0x9
  1933                           
  1934     0053                     ?_EUSART_SetErrorHandler:	
  1935                           ; 1 bytes @ 0x9
  1936                           
  1937     0053                     ??_PIN_MANAGER_Initialize:	
  1938                           ; 1 bytes @ 0x9
  1939                           
  1940     0053                     ??_OSCILLATOR_Initialize:	
  1941                           ; 1 bytes @ 0x9
  1942                           
  1943     0053                     ??_WDT_Initialize:	
  1944                           ; 1 bytes @ 0x9
  1945                           
  1946     0053                     LIN_getChecksum@pid:	
  1947                           ; 1 bytes @ 0x9
  1948                           
  1949     0053                     TMR0_WriteTimer@timerVal:	
  1950                           ; 1 bytes @ 0x9
  1951                           
  1952     0053                     memcpy@s1:	
  1953                           ; 1 bytes @ 0x9
  1954                           
  1955     0053                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1956                           ; 1 bytes @ 0x9
  1957                           
  1958     0053                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1959                           ; 2 bytes @ 0x9
  1960                           
  1961     0053                     EUSART_SetErrorHandler@interruptHandler:	
  1962                           ; 2 bytes @ 0x9
  1963                           
  1964     0053                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1965                           ; 2 bytes @ 0x9
  1966                           
  1967     0053                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1968                           ; 2 bytes @ 0x9
  1969                           
  1970     0053                     TMR0_SetInterruptHandler@InterruptHandler:	
  1971                           ; 2 bytes @ 0x9
  1972                           
  1973     0053                     memset@c:	
  1974                           ; 2 bytes @ 0x9
  1975                           
  1976                           
  1977                           ; 2 bytes @ 0x9
  1978     0053                     	ds	1
  1979     0054                     ??_LIN_startTimer:
  1980     0054                     LIN_getChecksum@data:	
  1981                           ; 1 bytes @ 0xA
  1982                           
  1983     0054                     LIN_startTimer@timeout:	
  1984                           ; 1 bytes @ 0xA
  1985                           
  1986     0054                     EUSART_Read@readValue:	
  1987                           ; 1 bytes @ 0xA
  1988                           
  1989     0054                     EUSART_Write@txData:	
  1990                           ; 1 bytes @ 0xA
  1991                           
  1992     0054                     memcpy@n:	
  1993                           ; 1 bytes @ 0xA
  1994                           
  1995                           
  1996                           ; 2 bytes @ 0xA
  1997     0054                     	ds	1
  1998     0055                     ?_LIN_init:
  1999     0055                     ??_LIN_setTimerHandler:	
  2000                           ; 1 bytes @ 0xB
  2001                           
  2002     0055                     ??_LIN_getChecksum:	
  2003                           ; 1 bytes @ 0xB
  2004                           
  2005     0055                     ??_LIN_sendPacket:	
  2006                           ; 1 bytes @ 0xB
  2007                           
  2008     0055                     ??_TMR0_SetInterruptHandler:	
  2009                           ; 1 bytes @ 0xB
  2010                           
  2011     0055                     ??_EUSART_SetRxInterruptHandler:	
  2012                           ; 1 bytes @ 0xB
  2013                           
  2014     0055                     ??_EUSART_SetTxInterruptHandler:	
  2015                           ; 1 bytes @ 0xB
  2016                           
  2017     0055                     ??_EUSART_SetFramingErrorHandler:	
  2018                           ; 1 bytes @ 0xB
  2019                           
  2020     0055                     ??_EUSART_SetOverrunErrorHandler:	
  2021                           ; 1 bytes @ 0xB
  2022                           
  2023     0055                     ??_EUSART_SetErrorHandler:	
  2024                           ; 1 bytes @ 0xB
  2025                           
  2026     0055                     ??_TMR0_Initialize:	
  2027                           ; 1 bytes @ 0xB
  2028                           
  2029     0055                     ??_EUSART_Initialize:	
  2030                           ; 1 bytes @ 0xB
  2031                           
  2032     0055                     LIN_init@table:	
  2033                           ; 1 bytes @ 0xB
  2034                           
  2035     0055                     memset@n:	
  2036                           ; 2 bytes @ 0xB
  2037                           
  2038                           
  2039                           ; 2 bytes @ 0xB
  2040     0055                     	ds	1
  2041     0056                     ??_memcpy:
  2042     0056                     LIN_sendPacket@i:	
  2043                           ; 1 bytes @ 0xC
  2044                           
  2045                           
  2046                           ; 1 bytes @ 0xC
  2047     0056                     	ds	1
  2048     0057                     ??_memset:
  2049     0057                     LIN_getChecksum@length:	
  2050                           ; 1 bytes @ 0xD
  2051                           
  2052     0057                     memcpy@tmp:	
  2053                           ; 1 bytes @ 0xD
  2054                           
  2055     0057                     LIN_init@processData:	
  2056                           ; 1 bytes @ 0xD
  2057                           
  2058                           
  2059                           ; 2 bytes @ 0xD
  2060     0057                     	ds	1
  2061     0058                     LIN_getChecksum@i:
  2062     0058                     memcpy@d:	
  2063                           ; 1 bytes @ 0xE
  2064                           
  2065     0058                     memset@p:	
  2066                           ; 1 bytes @ 0xE
  2067                           
  2068                           
  2069                           ; 1 bytes @ 0xE
  2070     0058                     	ds	1
  2071     0059                     ??_LIN_init:
  2072     0059                     LIN_init@tableLength:	
  2073                           ; 1 bytes @ 0xF
  2074                           
  2075     0059                     memcpy@s:	
  2076                           ; 1 bytes @ 0xF
  2077                           
  2078     0059                     memset@dest:	
  2079                           ; 1 bytes @ 0xF
  2080                           
  2081     0059                     LIN_getChecksum@checksum:	
  2082                           ; 1 bytes @ 0xF
  2083                           
  2084                           
  2085                           ; 2 bytes @ 0xF
  2086     0059                     	ds	1
  2087     005A                     ??_SYSTEM_Initialize:
  2088     005A                     ??_LIN_Master_Initialize:	
  2089                           ; 1 bytes @ 0x10
  2090                           
  2091     005A                     memcpy@d1:	
  2092                           ; 1 bytes @ 0x10
  2093                           
  2094                           
  2095                           ; 1 bytes @ 0x10
  2096     005A                     	ds	1
  2097     005B                     ??_LIN_getPacket:
  2098     005B                     ??_LIN_receivePacket:	
  2099                           ; 1 bytes @ 0x11
  2100                           
  2101     005B                     LIN_getPacket@data:	
  2102                           ; 1 bytes @ 0x11
  2103                           
  2104                           
  2105                           ; 1 bytes @ 0x11
  2106     005B                     	ds	1
  2107     005C                     LIN_getPacket@cmd:
  2108                           
  2109                           ; 1 bytes @ 0x12
  2110     005C                     	ds	1
  2111     005D                     ??_processLIN:
  2112                           
  2113                           ; 1 bytes @ 0x13
  2114     005D                     	ds	2
  2115     005F                     ??_LIN_handler:
  2116                           
  2117                           ; 1 bytes @ 0x15
  2118     005F                     	ds	2
  2119     0061                     ??_main:
  2120                           
  2121                           ; 1 bytes @ 0x17
  2122     0061                     	ds	1
  2123                           
  2124                           	psect	maintext
  2125     020D                     __pmaintext:	
  2126 ;;
  2127 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2128 ;;
  2129 ;; *************** function _main *****************
  2130 ;; Defined at:
  2131 ;;		line 64 in file "C:\yiming\work\FR682_TXV01.X\main.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2   18[None  ] int 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : B1F/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2145 ;;      Params:         0       0       0       0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0
  2147 ;;      Temps:          0       1       0       0       0       0       0       0
  2148 ;;      Totals:         0       1       0       0       0       0       0       0
  2149 ;;Total ram usage:        1 bytes
  2150 ;; Hardware stack levels required when called: 11
  2151 ;; This function calls:
  2152 ;;		_LIN_handler
  2153 ;;		_SYSTEM_Initialize
  2154 ;; This function is called by:
  2155 ;;		Startup code after reset
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159     020D                     _main:	
  2160                           ;psect for function _main
  2161                           
  2162     020D                     l2526:	
  2163                           ;incstack = 0
  2164                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2165                           
  2166                           
  2167                           ;C:\yiming\work\FR682_TXV01.X\main.c: 67:   SYSTEM_Initialize();
  2168     020D  3186  2613  3182   	fcall	_SYSTEM_Initialize
  2169     0210                     l2528:
  2170                           
  2171                           ;C:\yiming\work\FR682_TXV01.X\main.c: 73:   (INTCONbits.GIE = 1);
  2172     0210  178B               	bsf	11,7	;volatile
  2173     0211                     l2530:
  2174                           
  2175                           ;C:\yiming\work\FR682_TXV01.X\main.c: 76:   (INTCONbits.PEIE = 1);
  2176     0211  170B               	bsf	11,6	;volatile
  2177     0212                     l2532:
  2178                           
  2179                           ;C:\yiming\work\FR682_TXV01.X\main.c: 84:   SW_STATE_Data[0] = 0x24;
  2180     0212  3024               	movlw	36
  2181     0213  0020               	movlb	0	; select bank0
  2182     0214  00C2               	movwf	_SW_STATE_Data
  2183     0215                     l2534:
  2184                           
  2185                           ;C:\yiming\work\FR682_TXV01.X\main.c: 85:   SW_STATE_Data[1] = 0x08;
  2186     0215  3008               	movlw	8
  2187     0216  00C3               	movwf	_SW_STATE_Data+1
  2188     0217                     l2536:
  2189                           
  2190                           ;C:\yiming\work\FR682_TXV01.X\main.c: 86:   SW_STATE_Data[2] = 0x2C;
  2191     0217  302C               	movlw	44
  2192     0218  00C4               	movwf	_SW_STATE_Data+2
  2193     0219                     l2538:
  2194                           
  2195                           ;C:\yiming\work\FR682_TXV01.X\main.c: 87:   SW_STATE_Data[3] = 0x00;
  2196     0219  01C5               	clrf	_SW_STATE_Data+3
  2197     021A                     l2540:
  2198                           
  2199                           ;C:\yiming\work\FR682_TXV01.X\main.c: 88:   SW_STATE_Data[4] = 0x14;
  2200     021A  3014               	movlw	20
  2201     021B  00C6               	movwf	_SW_STATE_Data+4
  2202     021C                     l2542:
  2203                           
  2204                           ;C:\yiming\work\FR682_TXV01.X\main.c: 89:   SW_STATE_Data[5] = 0x00;
  2205     021C  01C7               	clrf	_SW_STATE_Data+5
  2206     021D                     l2544:
  2207                           
  2208                           ;C:\yiming\work\FR682_TXV01.X\main.c: 90:   SW_STATE_Data[6] = 0xEE;
  2209     021D  30EE               	movlw	238
  2210     021E  00C8               	movwf	_SW_STATE_Data+6
  2211     021F                     l2546:
  2212                           
  2213                           ;C:\yiming\work\FR682_TXV01.X\main.c: 91:   SW_STATE_Data[7] = 0xBE;
  2214     021F  30BE               	movlw	190
  2215     0220  00C9               	movwf	_SW_STATE_Data+7
  2216     0221                     l2548:
  2217                           
  2218                           ;C:\yiming\work\FR682_TXV01.X\main.c: 93:   ((SW_STATE_Data[5]) |= (1 << (1)));
  2219     0221  14C7               	bsf	_SW_STATE_Data+5,1
  2220     0222                     l2550:
  2221                           
  2222                           ;C:\yiming\work\FR682_TXV01.X\main.c: 94:   ((SW_STATE_Data[5]) &= (~(1 << (1))));
  2223     0222  30FD               	movlw	253
  2224     0223  00E1               	movwf	??_main
  2225     0224  0861               	movf	??_main,w
  2226     0225  05C7               	andwf	_SW_STATE_Data+5,f
  2227     0226                     l2552:
  2228                           
  2229                           ;C:\yiming\work\FR682_TXV01.X\main.c: 97:   {;C:\yiming\work\FR682_TXV01.X\main.c: 99:  
      +                             LIN_handler();
  2230     0226  3182  2287  3182   	fcall	_LIN_handler
  2231     0229                     l2554:
  2232                           
  2233                           ;C:\yiming\work\FR682_TXV01.X\main.c: 102:     if (PORTAbits.RA0 == 0)
  2234     0229  0020               	movlb	0	; select bank0
  2235     022A  180C               	btfsc	12,0	;volatile
  2236     022B  2A2D               	goto	u1971
  2237     022C  2A2E               	goto	u1970
  2238     022D                     u1971:
  2239     022D  2A33               	goto	l24
  2240     022E                     u1970:
  2241     022E                     l21:	
  2242                           ;C:\yiming\work\FR682_TXV01.X\main.c: 103:     {;C:\yiming\work\FR682_TXV01.X\main.c: 10
      +                          4:       do { LATBbits.LATB5 = 1; } while(0);
  2243                           
  2244     022E  0022               	movlb	2	; select bank2
  2245     022F  168D               	bsf	13,5	;volatile
  2246     0230                     l22:
  2247                           
  2248                           ;C:\yiming\work\FR682_TXV01.X\main.c: 105:       ((SW_STATE_Data[5]) |= (1 << (5)));
  2249     0230  0020               	movlb	0	; select bank0
  2250     0231  16C7               	bsf	_SW_STATE_Data+5,5
  2251                           
  2252                           ;C:\yiming\work\FR682_TXV01.X\main.c: 106:     }
  2253     0232  2A3A               	goto	l2558
  2254     0233                     l24:	
  2255                           ;C:\yiming\work\FR682_TXV01.X\main.c: 108:     {;C:\yiming\work\FR682_TXV01.X\main.c: 10
      +                          9:       do { LATBbits.LATB5 = 0; } while(0);
  2256                           
  2257     0233  0022               	movlb	2	; select bank2
  2258     0234  128D               	bcf	13,5	;volatile
  2259     0235                     l2556:
  2260                           
  2261                           ;C:\yiming\work\FR682_TXV01.X\main.c: 110:       ((SW_STATE_Data[5]) &= (~(1 << (5))));
  2262     0235  30DF               	movlw	223
  2263     0236  0020               	movlb	0	; select bank0
  2264     0237  00E1               	movwf	??_main
  2265     0238  0861               	movf	??_main,w
  2266     0239  05C7               	andwf	_SW_STATE_Data+5,f
  2267     023A                     l2558:
  2268                           
  2269                           ;C:\yiming\work\FR682_TXV01.X\main.c: 113:     if (PORTAbits.RA1 == 0)
  2270     023A  188C               	btfsc	12,1	;volatile
  2271     023B  2A3D               	goto	u1981
  2272     023C  2A3E               	goto	u1980
  2273     023D                     u1981:
  2274     023D  2A43               	goto	l30
  2275     023E                     u1980:
  2276     023E                     l27:	
  2277                           ;C:\yiming\work\FR682_TXV01.X\main.c: 114:     {;C:\yiming\work\FR682_TXV01.X\main.c: 11
      +                          5:       do { LATBbits.LATB4 = 1; } while(0);
  2278                           
  2279     023E  0022               	movlb	2	; select bank2
  2280     023F  160D               	bsf	13,4	;volatile
  2281     0240                     l28:
  2282                           
  2283                           ;C:\yiming\work\FR682_TXV01.X\main.c: 116:       ((SW_STATE_Data[2]) |= (1 << (1)));
  2284     0240  0020               	movlb	0	; select bank0
  2285     0241  14C4               	bsf	_SW_STATE_Data+2,1
  2286                           
  2287                           ;C:\yiming\work\FR682_TXV01.X\main.c: 117:     }
  2288     0242  2A4A               	goto	l2562
  2289     0243                     l30:	
  2290                           ;C:\yiming\work\FR682_TXV01.X\main.c: 119:     {;C:\yiming\work\FR682_TXV01.X\main.c: 12
      +                          0:       do { LATBbits.LATB4 = 0; } while(0);
  2291                           
  2292     0243  0022               	movlb	2	; select bank2
  2293     0244  120D               	bcf	13,4	;volatile
  2294     0245                     l2560:
  2295                           
  2296                           ;C:\yiming\work\FR682_TXV01.X\main.c: 121:       ((SW_STATE_Data[2]) &= (~(1 << (1))));
  2297     0245  30FD               	movlw	253
  2298     0246  0020               	movlb	0	; select bank0
  2299     0247  00E1               	movwf	??_main
  2300     0248  0861               	movf	??_main,w
  2301     0249  05C4               	andwf	_SW_STATE_Data+2,f
  2302     024A                     l2562:
  2303                           
  2304                           ;C:\yiming\work\FR682_TXV01.X\main.c: 124:     if (PORTAbits.RA2 == 0)
  2305     024A  190C               	btfsc	12,2	;volatile
  2306     024B  2A4D               	goto	u1991
  2307     024C  2A4E               	goto	u1990
  2308     024D                     u1991:
  2309     024D  2A53               	goto	l36
  2310     024E                     u1990:
  2311     024E                     l33:	
  2312                           ;C:\yiming\work\FR682_TXV01.X\main.c: 125:     {;C:\yiming\work\FR682_TXV01.X\main.c: 12
      +                          6:       do { LATBbits.LATB3 = 1; } while(0);
  2313                           
  2314     024E  0022               	movlb	2	; select bank2
  2315     024F  158D               	bsf	13,3	;volatile
  2316     0250                     l34:
  2317                           
  2318                           ;C:\yiming\work\FR682_TXV01.X\main.c: 127:       ((SW_STATE_Data[2]) |= (1 << (0)));
  2319     0250  0020               	movlb	0	; select bank0
  2320     0251  1444               	bsf	_SW_STATE_Data+2,0
  2321                           
  2322                           ;C:\yiming\work\FR682_TXV01.X\main.c: 128:     }
  2323     0252  2A5A               	goto	l2566
  2324     0253                     l36:	
  2325                           ;C:\yiming\work\FR682_TXV01.X\main.c: 130:     {;C:\yiming\work\FR682_TXV01.X\main.c: 13
      +                          1:       do { LATBbits.LATB3 = 0; } while(0);
  2326                           
  2327     0253  0022               	movlb	2	; select bank2
  2328     0254  118D               	bcf	13,3	;volatile
  2329     0255                     l2564:
  2330                           
  2331                           ;C:\yiming\work\FR682_TXV01.X\main.c: 132:       ((SW_STATE_Data[2]) &= (~(1 << (0))));
  2332     0255  30FE               	movlw	254
  2333     0256  0020               	movlb	0	; select bank0
  2334     0257  00E1               	movwf	??_main
  2335     0258  0861               	movf	??_main,w
  2336     0259  05C4               	andwf	_SW_STATE_Data+2,f
  2337     025A                     l2566:
  2338                           
  2339                           ;C:\yiming\work\FR682_TXV01.X\main.c: 135:     if (PORTAbits.RA3 == 0)
  2340     025A  198C               	btfsc	12,3	;volatile
  2341     025B  2A5D               	goto	u2001
  2342     025C  2A5E               	goto	u2000
  2343     025D                     u2001:
  2344     025D  2A64               	goto	l42
  2345     025E                     u2000:
  2346     025E                     l39:	
  2347                           ;C:\yiming\work\FR682_TXV01.X\main.c: 136:     {;C:\yiming\work\FR682_TXV01.X\main.c: 13
      +                          7:       do { LATBbits.LATB2 = 1; } while(0);
  2348                           
  2349     025E  0022               	movlb	2	; select bank2
  2350     025F  150D               	bsf	13,2	;volatile
  2351     0260                     l40:
  2352                           
  2353                           ;C:\yiming\work\FR682_TXV01.X\main.c: 138:       ((SW_STATE_Data[1]) |= (1 << (6)));
  2354     0260  0020               	movlb	0	; select bank0
  2355     0261  1743               	bsf	_SW_STATE_Data+1,6
  2356                           
  2357                           ;C:\yiming\work\FR682_TXV01.X\main.c: 139:       ((SW_STATE_Data[1]) |= (1 << (7)));
  2358     0262  17C3               	bsf	_SW_STATE_Data+1,7
  2359                           
  2360                           ;C:\yiming\work\FR682_TXV01.X\main.c: 140:     }
  2361     0263  2A6F               	goto	l2570
  2362     0264                     l42:	
  2363                           ;C:\yiming\work\FR682_TXV01.X\main.c: 142:     {;C:\yiming\work\FR682_TXV01.X\main.c: 14
      +                          3:       do { LATBbits.LATB2 = 0; } while(0);
  2364                           
  2365     0264  0022               	movlb	2	; select bank2
  2366     0265  110D               	bcf	13,2	;volatile
  2367     0266                     l2568:
  2368                           
  2369                           ;C:\yiming\work\FR682_TXV01.X\main.c: 144:       ((SW_STATE_Data[1]) &= (~(1 << (6))));
  2370     0266  30BF               	movlw	191
  2371     0267  0020               	movlb	0	; select bank0
  2372     0268  00E1               	movwf	??_main
  2373     0269  0861               	movf	??_main,w
  2374     026A  05C3               	andwf	_SW_STATE_Data+1,f
  2375                           
  2376                           ;C:\yiming\work\FR682_TXV01.X\main.c: 145:       ((SW_STATE_Data[1]) &= (~(1 << (7))));
  2377     026B  307F               	movlw	127
  2378     026C  00E1               	movwf	??_main
  2379     026D  0861               	movf	??_main,w
  2380     026E  05C3               	andwf	_SW_STATE_Data+1,f
  2381     026F                     l2570:
  2382                           
  2383                           ;C:\yiming\work\FR682_TXV01.X\main.c: 148:     if (PORTAbits.RA4 == 0)
  2384     026F  1A0C               	btfsc	12,4	;volatile
  2385     0270  2A72               	goto	u2011
  2386     0271  2A73               	goto	u2010
  2387     0272                     u2011:
  2388     0272  2A79               	goto	l48
  2389     0273                     u2010:
  2390     0273                     l45:	
  2391                           ;C:\yiming\work\FR682_TXV01.X\main.c: 149:    {;C:\yiming\work\FR682_TXV01.X\main.c: 150
      +                          :       do { LATBbits.LATB1 = 1; } while(0);
  2392                           
  2393     0273  0022               	movlb	2	; select bank2
  2394     0274  148D               	bsf	13,1	;volatile
  2395     0275                     l46:
  2396                           
  2397                           ;C:\yiming\work\FR682_TXV01.X\main.c: 151:       ((SW_STATE_Data[1]) |= (1 << (4)));
  2398     0275  0020               	movlb	0	; select bank0
  2399     0276  1643               	bsf	_SW_STATE_Data+1,4
  2400                           
  2401                           ;C:\yiming\work\FR682_TXV01.X\main.c: 152:       ((SW_STATE_Data[1]) |= (1 << (5)));
  2402     0277  16C3               	bsf	_SW_STATE_Data+1,5
  2403                           
  2404                           ;C:\yiming\work\FR682_TXV01.X\main.c: 153:     }
  2405     0278  2A26               	goto	l2552
  2406     0279                     l48:	
  2407                           ;C:\yiming\work\FR682_TXV01.X\main.c: 155:     {;C:\yiming\work\FR682_TXV01.X\main.c: 15
      +                          6:       do { LATBbits.LATB1 = 0; } while(0);
  2408                           
  2409     0279  0022               	movlb	2	; select bank2
  2410     027A  108D               	bcf	13,1	;volatile
  2411     027B                     l2572:
  2412                           
  2413                           ;C:\yiming\work\FR682_TXV01.X\main.c: 157:       ((SW_STATE_Data[1]) &= (~(1 << (4))));
  2414     027B  30EF               	movlw	239
  2415     027C  0020               	movlb	0	; select bank0
  2416     027D  00E1               	movwf	??_main
  2417     027E  0861               	movf	??_main,w
  2418     027F  05C3               	andwf	_SW_STATE_Data+1,f
  2419                           
  2420                           ;C:\yiming\work\FR682_TXV01.X\main.c: 158:       ((SW_STATE_Data[1]) &= (~(1 << (5))));
  2421     0280  30DF               	movlw	223
  2422     0281  00E1               	movwf	??_main
  2423     0282  0861               	movf	??_main,w
  2424     0283  05C3               	andwf	_SW_STATE_Data+1,f
  2425     0284  2A26               	goto	l2552
  2426     0285  3180  2838         	ljmp	start
  2427     0287                     __end_of_main:
  2428                           
  2429                           	psect	text1
  2430     0613                     __ptext1:	
  2431 ;; *************** function _SYSTEM_Initialize *****************
  2432 ;; Defined at:
  2433 ;;		line 50 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2447 ;;      Params:         0       0       0       0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 10
  2454 ;; This function calls:
  2455 ;;		_EUSART_Initialize
  2456 ;;		_LIN_Master_Initialize
  2457 ;;		_OSCILLATOR_Initialize
  2458 ;;		_PIN_MANAGER_Initialize
  2459 ;;		_TMR0_Initialize
  2460 ;;		_WDT_Initialize
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466     0613                     _SYSTEM_Initialize:	
  2467                           ;psect for function _SYSTEM_Initialize
  2468                           
  2469     0613                     l2468:	
  2470                           ;incstack = 0
  2471                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2472                           
  2473                           
  2474                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 53:     PIN_MANAGER_Initialize(
      +                          );
  2475     0613  3185  2587  3186   	fcall	_PIN_MANAGER_Initialize
  2476                           
  2477                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 54:     OSCILLATOR_Initialize()
      +                          ;
  2478     0616  3186  2651  3186   	fcall	_OSCILLATOR_Initialize
  2479                           
  2480                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 55:     WDT_Initialize();
  2481     0619  3186  26AE  3186   	fcall	_WDT_Initialize
  2482                           
  2483                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 56:     TMR0_Initialize();
  2484     061C  3185  25FF  3186   	fcall	_TMR0_Initialize
  2485                           
  2486                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 57:     EUSART_Initialize();
  2487     061F  3182  22FD  3186   	fcall	_EUSART_Initialize
  2488                           
  2489                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 58:     LIN_Master_Initialize()
      +                          ;
  2490     0622  3186  2636  3186   	fcall	_LIN_Master_Initialize
  2491     0625                     l447:
  2492     0625  0008               	return
  2493     0626                     __end_of_SYSTEM_Initialize:
  2494                           
  2495                           	psect	text2
  2496     06AE                     __ptext2:	
  2497 ;; *************** function _WDT_Initialize *****************
  2498 ;; Defined at:
  2499 ;;		line 75 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2513 ;;      Params:         0       0       0       0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0
  2516 ;;      Totals:         0       0       0       0       0       0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 6
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_SYSTEM_Initialize
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527     06AE                     _WDT_Initialize:	
  2528                           ;psect for function _WDT_Initialize
  2529                           
  2530     06AE                     l2138:	
  2531                           ;incstack = 0
  2532                           ; Regs used in _WDT_Initialize: [wreg]
  2533                           
  2534                           
  2535                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 78:     WDTCON = 0x12;
  2536     06AE  3012               	movlw	18
  2537     06AF  0021               	movlb	1	; select bank1
  2538     06B0  0097               	movwf	23	;volatile
  2539     06B1                     l456:
  2540     06B1  0008               	return
  2541     06B2                     __end_of_WDT_Initialize:
  2542                           
  2543                           	psect	text3
  2544     05FF                     __ptext3:	
  2545 ;; *************** function _TMR0_Initialize *****************
  2546 ;; Defined at:
  2547 ;;		line 64 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2561 ;;      Params:         0       0       0       0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0
  2564 ;;      Totals:         0       0       0       0       0       0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 7
  2568 ;; This function calls:
  2569 ;;		_TMR0_SetInterruptHandler
  2570 ;; This function is called by:
  2571 ;;		_SYSTEM_Initialize
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575     05FF                     _TMR0_Initialize:	
  2576                           ;psect for function _TMR0_Initialize
  2577                           
  2578     05FF                     l2140:	
  2579                           ;incstack = 0
  2580                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2581                           
  2582                           
  2583                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 69:     OPTION_REG = (uint8_t)
      +                          ((OPTION_REG & 0xC0) | (0xD4 & 0x3F));
  2584     05FF  0021               	movlb	1	; select bank1
  2585     0600  0815               	movf	21,w	;volatile
  2586     0601  39C0               	andlw	192
  2587     0602  3814               	iorlw	20
  2588     0603  0095               	movwf	21	;volatile
  2589     0604                     l2142:
  2590                           
  2591                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 72:     TMR0 = 0x06;
  2592     0604  3006               	movlw	6
  2593     0605  0020               	movlb	0	; select bank0
  2594     0606  0095               	movwf	21	;volatile
  2595     0607                     l2144:
  2596                           
  2597                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 75:     timer0ReloadVal= 6;
  2598     0607  3006               	movlw	6
  2599     0608  00B0               	movwf	_timer0ReloadVal	;volatile
  2600     0609                     l2146:
  2601                           
  2602                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2603     0609  110B               	bcf	11,2	;volatile
  2604     060A                     l2148:
  2605                           
  2606                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2607     060A  168B               	bsf	11,5	;volatile
  2608     060B                     l2150:
  2609                           
  2610                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 84:     TMR0_SetInterruptHandl
      +                          er(TMR0_DefaultInterruptHandler);
  2611     060B  30CA               	movlw	low _TMR0_DefaultInterruptHandler
  2612     060C  00D3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2613     060D  3006               	movlw	high _TMR0_DefaultInterruptHandler
  2614     060E  00D4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2615     060F  3186  267B  3185   	fcall	_TMR0_SetInterruptHandler
  2616     0612                     l507:
  2617     0612  0008               	return
  2618     0613                     __end_of_TMR0_Initialize:
  2619                           
  2620                           	psect	text4
  2621     0587                     __ptext4:	
  2622 ;; *************** function _PIN_MANAGER_Initialize *****************
  2623 ;; Defined at:
  2624 ;;		line 55 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  1    wreg      void 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2638 ;;      Params:         0       0       0       0       0       0       0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0
  2640 ;;      Temps:          0       0       0       0       0       0       0       0
  2641 ;;      Totals:         0       0       0       0       0       0       0       0
  2642 ;;Total ram usage:        0 bytes
  2643 ;; Hardware stack levels used: 1
  2644 ;; Hardware stack levels required when called: 6
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		_SYSTEM_Initialize
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652     0587                     _PIN_MANAGER_Initialize:	
  2653                           ;psect for function _PIN_MANAGER_Initialize
  2654                           
  2655     0587                     l2112:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2658                           
  2659                           
  2660                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 60:     LATE = 0x00;
  2661     0587  0022               	movlb	2	; select bank2
  2662     0588  0190               	clrf	16	;volatile
  2663                           
  2664                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 61:     LATA = 0x00;
  2665     0589  018C               	clrf	12	;volatile
  2666                           
  2667                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 62:     LATB = 0x00;
  2668     058A  018D               	clrf	13	;volatile
  2669                           
  2670                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 63:     LATC = 0x00;
  2671     058B  018E               	clrf	14	;volatile
  2672     058C                     l2114:
  2673                           
  2674                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 68:     TRISE = 0x08;
  2675     058C  3008               	movlw	8
  2676     058D  0021               	movlb	1	; select bank1
  2677     058E  0090               	movwf	16	;volatile
  2678     058F                     l2116:
  2679                           
  2680                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 69:     TRISA = 0xFF;
  2681     058F  30FF               	movlw	255
  2682     0590  008C               	movwf	12	;volatile
  2683     0591                     l2118:
  2684                           
  2685                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 70:     TRISB = 0xC0;
  2686     0591  30C0               	movlw	192
  2687     0592  008D               	movwf	13	;volatile
  2688     0593                     l2120:
  2689                           
  2690                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 71:     TRISC = 0xBF;
  2691     0593  30BF               	movlw	191
  2692     0594  008E               	movwf	14	;volatile
  2693                           
  2694                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 76:     ANSELB = 0x00;
  2695     0595  0023               	movlb	3	; select bank3
  2696     0596  018D               	clrf	13	;volatile
  2697     0597                     l2122:
  2698                           
  2699                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 77:     ANSELA = 0x20;
  2700     0597  3020               	movlw	32
  2701     0598  008C               	movwf	12	;volatile
  2702     0599                     l2124:
  2703                           
  2704                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 82:     WPUE = 0x00;
  2705     0599  0024               	movlb	4	; select bank4
  2706     059A  0190               	clrf	16	;volatile
  2707     059B                     l2126:
  2708                           
  2709                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 83:     WPUB = 0x00;
  2710     059B  018D               	clrf	13	;volatile
  2711     059C                     l2128:
  2712                           
  2713                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 84:     OPTION_REGbits.
      +                          nWPUEN = 1;
  2714     059C  0021               	movlb	1	; select bank1
  2715     059D  1795               	bsf	21,7	;volatile
  2716     059E                     l2130:
  2717                           
  2718                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\pin_manager.c: 90:     APFCON = 0x00;
  2719     059E  0022               	movlb	2	; select bank2
  2720     059F  019D               	clrf	29	;volatile
  2721     05A0                     l487:
  2722     05A0  0008               	return
  2723     05A1                     __end_of_PIN_MANAGER_Initialize:
  2724                           
  2725                           	psect	text5
  2726     0651                     __ptext5:	
  2727 ;; *************** function _OSCILLATOR_Initialize *****************
  2728 ;; Defined at:
  2729 ;;		line 61 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2743 ;;      Params:         0       0       0       0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 6
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_SYSTEM_Initialize
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757     0651                     _OSCILLATOR_Initialize:	
  2758                           ;psect for function _OSCILLATOR_Initialize
  2759                           
  2760     0651                     l2132:	
  2761                           ;incstack = 0
  2762                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2763                           
  2764                           
  2765                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 64:     OSCCON = 0x70;
  2766     0651  3070               	movlw	112
  2767     0652  0021               	movlb	1	; select bank1
  2768     0653  0099               	movwf	25	;volatile
  2769     0654                     l2134:
  2770                           
  2771                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 66:     OSCTUNE = 0x00;
  2772     0654  0198               	clrf	24	;volatile
  2773     0655                     l2136:
  2774                           
  2775                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 68:     BORCON = 0x00;
  2776     0655  0022               	movlb	2	; select bank2
  2777     0656  0196               	clrf	22	;volatile
  2778     0657                     l450:	
  2779                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 71:     {;C:\yiming\work\FR682_
      +                          TXV01.X\mcc_generated_files\mcc.c: 72:     }
  2780                           
  2781                           
  2782                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\mcc.c: 70:     while(PLLR == 0)
  2783     0657  0021               	movlb	1	; select bank1
  2784     0658  1F1A               	btfss	26,6	;volatile
  2785     0659  2E5B               	goto	u1491
  2786     065A  2E5C               	goto	u1490
  2787     065B                     u1491:
  2788     065B  2E57               	goto	l450
  2789     065C                     u1490:
  2790     065C                     l453:
  2791     065C  0008               	return
  2792     065D                     __end_of_OSCILLATOR_Initialize:
  2793                           
  2794                           	psect	text6
  2795     0636                     __ptext6:	
  2796 ;; *************** function _LIN_Master_Initialize *****************
  2797 ;; Defined at:
  2798 ;;		line 43 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_app.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2812 ;;      Params:         0       0       0       0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0
  2815 ;;      Totals:         0       0       0       0       0       0       0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 9
  2819 ;; This function calls:
  2820 ;;		_LIN_init
  2821 ;; This function is called by:
  2822 ;;		_SYSTEM_Initialize
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826     0636                     _LIN_Master_Initialize:	
  2827                           ;psect for function _LIN_Master_Initialize
  2828                           
  2829     0636                     l2444:	
  2830                           ;incstack = 0
  2831                           ; Regs used in _LIN_Master_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2832                           
  2833                           
  2834                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_app.c: 45:     LIN_init
      +                          ((sizeof(scheduleTable)/sizeof(lin_cmd_packet_t)), scheduleTable, processLIN);
  2835     0636  306F               	movlw	low (_scheduleTable| (0+32768))
  2836     0637  0020               	movlb	0	; select bank0
  2837     0638  00D5               	movwf	LIN_init@table
  2838     0639  3086               	movlw	high (_scheduleTable| (0+32768))
  2839     063A  00D6               	movwf	LIN_init@table+1
  2840     063B  30EA               	movlw	low _processLIN
  2841     063C  00D7               	movwf	LIN_init@processData
  2842     063D  3005               	movlw	high _processLIN
  2843     063E  00D8               	movwf	LIN_init@processData+1
  2844     063F  3001               	movlw	1
  2845     0640  3185  25D4  3186   	fcall	_LIN_init
  2846     0643                     l65:
  2847     0643  0008               	return
  2848     0644                     __end_of_LIN_Master_Initialize:
  2849                           
  2850                           	psect	text7
  2851     05D4                     __ptext7:	
  2852 ;; *************** function _LIN_init *****************
  2853 ;; Defined at:
  2854 ;;		line 60 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  tableLength     1    wreg     unsigned char 
  2857 ;;  table           2   11[BANK0 ] const PTR const struct .
  2858 ;;		 -> scheduleTable(6), 
  2859 ;;  processData     2   13[BANK0 ] PTR FTN()void 
  2860 ;;		 -> processLIN(1), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  tableLength     1   15[BANK0 ] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2872 ;;      Params:         0       4       0       0       0       0       0       0
  2873 ;;      Locals:         0       1       0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0
  2875 ;;      Totals:         0       5       0       0       0       0       0       0
  2876 ;;Total ram usage:        5 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 8
  2879 ;; This function calls:
  2880 ;;		_LIN_setTimerHandler
  2881 ;;		_LIN_startPeriod
  2882 ;;		_LIN_stopTimer
  2883 ;; This function is called by:
  2884 ;;		_LIN_Master_Initialize
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888     05D4                     _LIN_init:	
  2889                           ;psect for function _LIN_init
  2890                           
  2891                           
  2892                           ;incstack = 0
  2893                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2894                           ;LIN_init@tableLength stored from wreg
  2895     05D4  0020               	movlb	0	; select bank0
  2896     05D5  00D9               	movwf	LIN_init@tableLength
  2897     05D6                     l2410:
  2898                           
  2899                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 61:     sched
      +                          ule = table;
  2900     05D6  0856               	movf	LIN_init@table+1,w
  2901     05D7  00AD               	movwf	_schedule+1
  2902     05D8  0855               	movf	LIN_init@table,w
  2903     05D9  00AC               	movwf	_schedule
  2904                           
  2905                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 62:     sched
      +                          uleLength = tableLength;
  2906     05DA  0859               	movf	LIN_init@tableLength,w
  2907     05DB  00C0               	movwf	_scheduleLength
  2908                           
  2909                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 63:     LIN_p
      +                          rocessData = processData;
  2910     05DC  0858               	movf	LIN_init@processData+1,w
  2911     05DD  00AF               	movwf	_LIN_processData+1
  2912     05DE  0857               	movf	LIN_init@processData,w
  2913     05DF  00AE               	movwf	_LIN_processData
  2914     05E0                     l2412:
  2915                           
  2916                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 64:     LIN_s
      +                          topTimer();
  2917     05E0  3186  26B2  3185   	fcall	_LIN_stopTimer
  2918                           
  2919                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 65:     LIN_s
      +                          etTimerHandler();
  2920     05E3  3186  265D  3185   	fcall	_LIN_setTimerHandler
  2921     05E6                     l2414:
  2922                           
  2923                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 67:     LIN_s
      +                          tartPeriod();
  2924     05E6  3186  26B6  3185   	fcall	_LIN_startPeriod
  2925     05E9                     l145:
  2926     05E9  0008               	return
  2927     05EA                     __end_of_LIN_init:
  2928                           
  2929                           	psect	text8
  2930     06B2                     __ptext8:	
  2931 ;; *************** function _LIN_stopTimer *****************
  2932 ;; Defined at:
  2933 ;;		line 270 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		status,2
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2947 ;;      Params:         0       0       0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 6
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_LIN_init
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961     06B2                     _LIN_stopTimer:	
  2962                           ;psect for function _LIN_stopTimer
  2963                           
  2964     06B2                     l1806:	
  2965                           ;incstack = 0
  2966                           ; Regs used in _LIN_stopTimer: [status,2]
  2967                           
  2968                           
  2969                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 272:     LIN_
      +                          timerCallBack = 0;
  2970     06B2  0020               	movlb	0	; select bank0
  2971     06B3  01BC               	clrf	_LIN_timerCallBack	;volatile
  2972                           
  2973                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 273:     LIN_
      +                          timerRunning = 0;
  2974     06B4  01BE               	clrf	_LIN_timerRunning
  2975     06B5                     l221:
  2976     06B5  0008               	return
  2977     06B6                     __end_of_LIN_stopTimer:
  2978                           
  2979                           	psect	text9
  2980     06B6                     __ptext9:	
  2981 ;; *************** function _LIN_startPeriod *****************
  2982 ;; Defined at:
  2983 ;;		line 276 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		None
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2997 ;;      Params:         0       0       0       0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 6
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_LIN_init
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     06B6                     _LIN_startPeriod:	
  3012                           ;psect for function _LIN_startPeriod
  3013                           
  3014     06B6                     l1810:	
  3015                           ;incstack = 0
  3016                           ; Regs used in _LIN_startPeriod: []
  3017                           
  3018                           
  3019                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 277:     LIN_
      +                          enablePeriodTx = 1;
  3020     06B6  0020               	movlb	0	; select bank0
  3021     06B7  01BD               	clrf	_LIN_enablePeriodTx
  3022     06B8  0ABD               	incf	_LIN_enablePeriodTx,f
  3023     06B9                     l224:
  3024     06B9  0008               	return
  3025     06BA                     __end_of_LIN_startPeriod:
  3026                           
  3027                           	psect	text10
  3028     065D                     __ptext10:	
  3029 ;; *************** function _LIN_setTimerHandler *****************
  3030 ;; Defined at:
  3031 ;;		line 266 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3045 ;;      Params:         0       0       0       0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 7
  3052 ;; This function calls:
  3053 ;;		_TMR0_SetInterruptHandler
  3054 ;; This function is called by:
  3055 ;;		_LIN_init
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059     065D                     _LIN_setTimerHandler:	
  3060                           ;psect for function _LIN_setTimerHandler
  3061                           
  3062     065D                     l2358:	
  3063                           ;incstack = 0
  3064                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  3065                           
  3066                           
  3067                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 267:     TMR0
      +                          _SetInterruptHandler(LIN_timerHandler);
  3068     065D  3099               	movlw	low _LIN_timerHandler
  3069     065E  0020               	movlb	0	; select bank0
  3070     065F  00D3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3071     0660  3004               	movlw	high _LIN_timerHandler
  3072     0661  00D4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3073     0662  3186  267B  3186   	fcall	_TMR0_SetInterruptHandler
  3074     0665                     l218:
  3075     0665  0008               	return
  3076     0666                     __end_of_LIN_setTimerHandler:
  3077                           
  3078                           	psect	text11
  3079     067B                     __ptext11:	
  3080 ;; *************** function _TMR0_SetInterruptHandler *****************
  3081 ;; Defined at:
  3082 ;;		line 125 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  InterruptHan    2    9[BANK0 ] PTR FTN()void 
  3085 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3097 ;;      Params:         0       2       0       0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0
  3100 ;;      Totals:         0       2       0       0       0       0       0       0
  3101 ;;Total ram usage:        2 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 6
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_LIN_setTimerHandler
  3108 ;;		_TMR0_Initialize
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     067B                     _TMR0_SetInterruptHandler:	
  3113                           ;psect for function _TMR0_SetInterruptHandler
  3114                           
  3115     067B                     l1768:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3118                           
  3119                           
  3120                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 126:     TMR0_InterruptHandler
      +                           = InterruptHandler;
  3121     067B  0020               	movlb	0	; select bank0
  3122     067C  0854               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3123     067D  00A1               	movwf	_TMR0_InterruptHandler+1
  3124     067E  0853               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3125     067F  00A0               	movwf	_TMR0_InterruptHandler
  3126     0680                     l523:
  3127     0680  0008               	return
  3128     0681                     __end_of_TMR0_SetInterruptHandler:
  3129                           
  3130                           	psect	text12
  3131     02FD                     __ptext12:	
  3132 ;; *************** function _EUSART_Initialize *****************
  3133 ;; Defined at:
  3134 ;;		line 88 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, pclath, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3148 ;;      Params:         0       0       0       0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 7
  3155 ;; This function calls:
  3156 ;;		_EUSART_SetErrorHandler
  3157 ;;		_EUSART_SetFramingErrorHandler
  3158 ;;		_EUSART_SetOverrunErrorHandler
  3159 ;;		_EUSART_SetRxInterruptHandler
  3160 ;;		_EUSART_SetTxInterruptHandler
  3161 ;; This function is called by:
  3162 ;;		_SYSTEM_Initialize
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166     02FD                     _EUSART_Initialize:	
  3167                           ;psect for function _EUSART_Initialize
  3168                           
  3169     02FD                     l2076:	
  3170                           ;incstack = 0
  3171                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3172                           
  3173                           
  3174                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 91:     PIE1bits.RCIE = 0;
  3175     02FD  0021               	movlb	1	; select bank1
  3176     02FE  1291               	bcf	17,5	;volatile
  3177     02FF                     l2078:
  3178                           
  3179                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 92:     EUSART_SetRxInterrup
      +                          tHandler(EUSART_Receive_ISR);
  3180     02FF  3040               	movlw	low _EUSART_Receive_ISR
  3181     0300  0020               	movlb	0	; select bank0
  3182     0301  00D3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3183     0302  3003               	movlw	high _EUSART_Receive_ISR
  3184     0303  00D4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3185     0304  3186  2687  3182   	fcall	_EUSART_SetRxInterruptHandler
  3186     0307                     l2080:
  3187                           
  3188                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 93:     PIE1bits.TXIE = 0;
  3189     0307  0021               	movlb	1	; select bank1
  3190     0308  1211               	bcf	17,4	;volatile
  3191                           
  3192                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 94:     EUSART_SetTxInterrup
      +                          tHandler(EUSART_Transmit_ISR);
  3193     0309  300B               	movlw	low _EUSART_Transmit_ISR
  3194     030A  0020               	movlb	0	; select bank0
  3195     030B  00D3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3196     030C  3005               	movlw	high _EUSART_Transmit_ISR
  3197     030D  00D4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3198     030E  3186  2681  3182   	fcall	_EUSART_SetTxInterruptHandler
  3199     0311                     l2082:
  3200                           
  3201                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 98:     BAUDCON = 0x18;
  3202     0311  3018               	movlw	24
  3203     0312  0023               	movlb	3	; select bank3
  3204     0313  009F               	movwf	31	;volatile
  3205     0314                     l2084:
  3206                           
  3207                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 101:     RCSTA = 0x90;
  3208     0314  3090               	movlw	144
  3209     0315  009D               	movwf	29	;volatile
  3210     0316                     l2086:
  3211                           
  3212                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 104:     TXSTA = 0x24;
  3213     0316  3024               	movlw	36
  3214     0317  009E               	movwf	30	;volatile
  3215     0318                     l2088:
  3216                           
  3217                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 107:     SPBRGL = 0xFF;
  3218     0318  30FF               	movlw	255
  3219     0319  009B               	movwf	27	;volatile
  3220     031A                     l2090:
  3221                           
  3222                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 110:     SPBRGH = 0x02;
  3223     031A  3002               	movlw	2
  3224     031B  009C               	movwf	28	;volatile
  3225     031C                     l2092:
  3226                           
  3227                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 113:     EUSART_SetFramingEr
      +                          rorHandler(EUSART_DefaultFramingErrorHandler);
  3228     031C  30CB               	movlw	low _EUSART_DefaultFramingErrorHandler
  3229     031D  0020               	movlb	0	; select bank0
  3230     031E  00D3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3231     031F  3006               	movlw	high _EUSART_DefaultFramingErrorHandler
  3232     0320  00D4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3233     0321  3186  2693  3182   	fcall	_EUSART_SetFramingErrorHandler
  3234     0324                     l2094:
  3235                           
  3236                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 114:     EUSART_SetOverrunEr
      +                          rorHandler(EUSART_DefaultOverrunErrorHandler);
  3237     0324  30BE               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3238     0325  0020               	movlb	0	; select bank0
  3239     0326  00D3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3240     0327  3006               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3241     0328  00D4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3242     0329  3186  268D  3182   	fcall	_EUSART_SetOverrunErrorHandler
  3243     032C                     l2096:
  3244                           
  3245                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 115:     EUSART_SetErrorHand
      +                          ler(EUSART_DefaultErrorHandler);
  3246     032C  30C2               	movlw	low _EUSART_DefaultErrorHandler
  3247     032D  0020               	movlb	0	; select bank0
  3248     032E  00D3               	movwf	EUSART_SetErrorHandler@interruptHandler
  3249     032F  3006               	movlw	high _EUSART_DefaultErrorHandler
  3250     0330  00D4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3251     0331  3186  2699  3182   	fcall	_EUSART_SetErrorHandler
  3252     0334                     l2098:
  3253                           
  3254                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 117:     eusartRxLastError.s
      +                          tatus = 0;
  3255     0334  0020               	movlb	0	; select bank0
  3256     0335  01B1               	clrf	_eusartRxLastError	;volatile
  3257     0336                     l2100:
  3258                           
  3259                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 120:     eusartTxHead = 0;
  3260     0336  01B7               	clrf	_eusartTxHead	;volatile
  3261     0337                     l2102:
  3262                           
  3263                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 121:     eusartTxTail = 0;
  3264     0337  01B6               	clrf	_eusartTxTail	;volatile
  3265     0338                     l2104:
  3266                           
  3267                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 122:     eusartTxBufferRemai
      +                          ning = sizeof(eusartTxBuffer);
  3268     0338  3008               	movlw	8
  3269     0339  00B5               	movwf	_eusartTxBufferRemaining	;volatile
  3270                           
  3271                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 124:     eusartRxHead = 0;
  3272     033A  01B4               	clrf	_eusartRxHead	;volatile
  3273                           
  3274                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 125:     eusartRxTail = 0;
  3275     033B  01B3               	clrf	_eusartRxTail	;volatile
  3276                           
  3277                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 126:     eusartRxCount = 0;
  3278     033C  01B2               	clrf	_eusartRxCount	;volatile
  3279     033D                     l2106:
  3280                           
  3281                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 129:     PIE1bits.RCIE = 1;
  3282     033D  0021               	movlb	1	; select bank1
  3283     033E  1691               	bsf	17,5	;volatile
  3284     033F                     l320:
  3285     033F  0008               	return
  3286     0340                     __end_of_EUSART_Initialize:
  3287                           
  3288                           	psect	text13
  3289     0681                     __ptext13:	
  3290 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3291 ;; Defined at:
  3292 ;;		line 276 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3295 ;;		 -> EUSART_Transmit_ISR(1), 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3307 ;;      Params:         0       2       0       0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0
  3310 ;;      Totals:         0       2       0       0       0       0       0       0
  3311 ;;Total ram usage:        2 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 6
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_EUSART_Initialize
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321     0681                     _EUSART_SetTxInterruptHandler:	
  3322                           ;psect for function _EUSART_SetTxInterruptHandler
  3323                           
  3324     0681                     l1976:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3327                           
  3328                           
  3329                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 277:     EUSART_TxDefaultInt
      +                          erruptHandler = interruptHandler;
  3330     0681  0020               	movlb	0	; select bank0
  3331     0682  0854               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3332     0683  00AB               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3333     0684  0853               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3334     0685  00AA               	movwf	_EUSART_TxDefaultInterruptHandler
  3335     0686                     l386:
  3336     0686  0008               	return
  3337     0687                     __end_of_EUSART_SetTxInterruptHandler:
  3338                           
  3339                           	psect	text14
  3340     0687                     __ptext14:	
  3341 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3342 ;; Defined at:
  3343 ;;		line 280 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3346 ;;		 -> EUSART_Receive_ISR(1), 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3358 ;;      Params:         0       2       0       0       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0
  3361 ;;      Totals:         0       2       0       0       0       0       0       0
  3362 ;;Total ram usage:        2 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 6
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_EUSART_Initialize
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372     0687                     _EUSART_SetRxInterruptHandler:	
  3373                           ;psect for function _EUSART_SetRxInterruptHandler
  3374                           
  3375     0687                     l1974:	
  3376                           ;incstack = 0
  3377                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3378                           
  3379                           
  3380                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 281:     EUSART_RxDefaultInt
      +                          erruptHandler = interruptHandler;
  3381     0687  0020               	movlb	0	; select bank0
  3382     0688  0854               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3383     0689  00A9               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3384     068A  0853               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3385     068B  00A8               	movwf	_EUSART_RxDefaultInterruptHandler
  3386     068C                     l389:
  3387     068C  0008               	return
  3388     068D                     __end_of_EUSART_SetRxInterruptHandler:
  3389                           
  3390                           	psect	text15
  3391     068D                     __ptext15:	
  3392 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3393 ;; Defined at:
  3394 ;;		line 268 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3397 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3409 ;;      Params:         0       2       0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0
  3412 ;;      Totals:         0       2       0       0       0       0       0       0
  3413 ;;Total ram usage:        2 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 6
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_EUSART_Initialize
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423     068D                     _EUSART_SetOverrunErrorHandler:	
  3424                           ;psect for function _EUSART_SetOverrunErrorHandler
  3425                           
  3426     068D                     l1980:	
  3427                           ;incstack = 0
  3428                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3429                           
  3430                           
  3431                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 269:     EUSART_OverrunError
      +                          Handler = interruptHandler;
  3432     068D  0020               	movlb	0	; select bank0
  3433     068E  0854               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3434     068F  00A5               	movwf	_EUSART_OverrunErrorHandler+1
  3435     0690  0853               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3436     0691  00A4               	movwf	_EUSART_OverrunErrorHandler
  3437     0692                     l380:
  3438     0692  0008               	return
  3439     0693                     __end_of_EUSART_SetOverrunErrorHandler:
  3440                           
  3441                           	psect	text16
  3442     0693                     __ptext16:	
  3443 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3444 ;; Defined at:
  3445 ;;		line 264 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3448 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3460 ;;      Params:         0       2       0       0       0       0       0       0
  3461 ;;      Locals:         0       0       0       0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0       0
  3463 ;;      Totals:         0       2       0       0       0       0       0       0
  3464 ;;Total ram usage:        2 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 6
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_EUSART_Initialize
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474     0693                     _EUSART_SetFramingErrorHandler:	
  3475                           ;psect for function _EUSART_SetFramingErrorHandler
  3476                           
  3477     0693                     l1978:	
  3478                           ;incstack = 0
  3479                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3480                           
  3481                           
  3482                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 265:     EUSART_FramingError
      +                          Handler = interruptHandler;
  3483     0693  0020               	movlb	0	; select bank0
  3484     0694  0854               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3485     0695  00A7               	movwf	_EUSART_FramingErrorHandler+1
  3486     0696  0853               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3487     0697  00A6               	movwf	_EUSART_FramingErrorHandler
  3488     0698                     l377:
  3489     0698  0008               	return
  3490     0699                     __end_of_EUSART_SetFramingErrorHandler:
  3491                           
  3492                           	psect	text17
  3493     0699                     __ptext17:	
  3494 ;; *************** function _EUSART_SetErrorHandler *****************
  3495 ;; Defined at:
  3496 ;;		line 272 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3499 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;		None
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3511 ;;      Params:         0       2       0       0       0       0       0       0
  3512 ;;      Locals:         0       0       0       0       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0       0       0       0
  3514 ;;      Totals:         0       2       0       0       0       0       0       0
  3515 ;;Total ram usage:        2 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 6
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_EUSART_Initialize
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525     0699                     _EUSART_SetErrorHandler:	
  3526                           ;psect for function _EUSART_SetErrorHandler
  3527                           
  3528     0699                     l1982:	
  3529                           ;incstack = 0
  3530                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3531                           
  3532                           
  3533                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 273:     EUSART_ErrorHandler
      +                           = interruptHandler;
  3534     0699  0020               	movlb	0	; select bank0
  3535     069A  0854               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3536     069B  00A3               	movwf	_EUSART_ErrorHandler+1
  3537     069C  0853               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3538     069D  00A2               	movwf	_EUSART_ErrorHandler
  3539     069E                     l383:
  3540     069E  0008               	return
  3541     069F                     __end_of_EUSART_SetErrorHandler:
  3542                           
  3543                           	psect	text18
  3544     0287                     __ptext18:	
  3545 ;; *************** function _LIN_handler *****************
  3546 ;; Defined at:
  3547 ;;		line 109 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      enum E3266
  3554 ;; Registers used:
  3555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3561 ;;      Params:         0       0       0       0       0       0       0       0
  3562 ;;      Locals:         0       0       0       0       0       0       0       0
  3563 ;;      Temps:          0       2       0       0       0       0       0       0
  3564 ;;      Totals:         0       2       0       0       0       0       0       0
  3565 ;;Total ram usage:        2 bytes
  3566 ;; Hardware stack levels used: 1
  3567 ;; Hardware stack levels required when called: 9
  3568 ;; This function calls:
  3569 ;;		NULL
  3570 ;;		_EUSART_is_rx_ready
  3571 ;;		_LIN_disableRx
  3572 ;;		_LIN_enableRx
  3573 ;;		_LIN_receivePacket
  3574 ;;		_LIN_sendPacket
  3575 ;;		_LIN_startTimer
  3576 ;;		_memset
  3577 ;;		_processLIN
  3578 ;; This function is called by:
  3579 ;;		_main
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583     0287                     _LIN_handler:	
  3584                           ;psect for function _LIN_handler
  3585                           
  3586     0287                     l2470:	
  3587                           ;incstack = 0
  3588                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3589                           
  3590                           
  3591                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 110:     stat
      +                          ic lin_state_t LIN_state = LIN_IDLE;;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LI
      +                          NDrivers\lin_master.c: 113:     switch(LIN_state){
  3592     0287  2AE5               	goto	l2512
  3593     0288                     l2472:
  3594                           
  3595                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 115:         
      +                              if(LIN_txReady == 1){
  3596     0288  0341               	decf	_LIN_txReady,w
  3597     0289  1D03               	btfss	3,2
  3598     028A  2A8C               	goto	u1891
  3599     028B  2A8D               	goto	u1890
  3600     028C                     u1891:
  3601     028C  2AFC               	goto	l177
  3602     028D                     u1890:
  3603     028D                     l2474:
  3604                           
  3605                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 116:         
      +                                  LIN_txReady = 0;
  3606     028D  01C1               	clrf	_LIN_txReady
  3607     028E                     l2476:
  3608                           
  3609                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 117:         
      +                                  LIN_disableRx();
  3610     028E  3186  26A9  3182   	fcall	_LIN_disableRx
  3611     0291                     l2478:
  3612                           
  3613                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 119:         
      +                                  LIN_sendPacket();
  3614     0291  3183  237A  3182   	fcall	_LIN_sendPacket
  3615     0294                     l2480:
  3616                           
  3617                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 120:         
      +                                  LIN_state = LIN_TX_IP;
  3618     0294  0020               	movlb	0	; select bank0
  3619     0295  01BA               	clrf	LIN_handler@LIN_state
  3620     0296  0ABA               	incf	LIN_handler@LIN_state,f
  3621                           
  3622                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 121:         
      +                              } else {
  3623     0297  2AFC               	goto	l177
  3624     0298                     l166:	
  3625                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 125:         
      +                          case LIN_TX_IP:
  3626                           
  3627                           
  3628                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 127:         
      +                              if(PIE1bits.TXIE == 0){
  3629     0298  0021               	movlb	1	; select bank1
  3630     0299  1A11               	btfsc	17,4	;volatile
  3631     029A  2A9C               	goto	u1901
  3632     029B  2A9D               	goto	u1900
  3633     029C                     u1901:
  3634     029C  2AFC               	goto	l177
  3635     029D                     u1900:
  3636     029D                     l2482:
  3637                           
  3638                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 128:         
      +                                  if(TXSTAbits.TRMT == 1){
  3639     029D  0023               	movlb	3	; select bank3
  3640     029E  1C9E               	btfss	30,1	;volatile
  3641     029F  2AA1               	goto	u1911
  3642     02A0  2AA2               	goto	u1910
  3643     02A1                     u1911:
  3644     02A1  2AFC               	goto	l177
  3645     02A2                     u1910:
  3646     02A2                     l2484:
  3647                           
  3648                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 130:         
      +                                      if(LIN_rxPacket.rxLength > 0){
  3649     02A2  0021               	movlb	1	; select bank1
  3650     02A3  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  3651     02A4  1903               	btfsc	3,2
  3652     02A5  2AA7               	goto	u1921
  3653     02A6  2AA8               	goto	u1920
  3654     02A7                     u1921:
  3655     02A7  2AB3               	goto	l2490
  3656     02A8                     u1920:
  3657     02A8                     l2486:
  3658                           
  3659                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 132:         
      +                                          LIN_startTimer(LIN_rxPacket.timeout);
  3660     02A8  0843               	movf	(_LIN_rxPacket^(0+128)+11),w
  3661     02A9  3186  2644  3182   	fcall	_LIN_startTimer
  3662     02AC                     l2488:
  3663                           
  3664                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 133:         
      +                                          LIN_enableRx();
  3665     02AC  3186  26A4  3182   	fcall	_LIN_enableRx
  3666                           
  3667                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 134:         
      +                                          LIN_state = LIN_RX_IP;
  3668     02AF  3002               	movlw	2
  3669     02B0  0020               	movlb	0	; select bank0
  3670     02B1  00BA               	movwf	LIN_handler@LIN_state
  3671                           
  3672                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 135:         
      +                                      } else {
  3673     02B2  2AFC               	goto	l177
  3674     02B3                     l2490:
  3675                           
  3676                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 136:         
      +                                          LIN_state = LIN_IDLE;
  3677     02B3  0020               	movlb	0	; select bank0
  3678     02B4  01BA               	clrf	LIN_handler@LIN_state
  3679     02B5  2AFC               	goto	l177
  3680     02B6                     l2492:
  3681                           
  3682                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 143:         
      +                              if(LIN_timerRunning == 0){
  3683     02B6  083E               	movf	_LIN_timerRunning,w
  3684     02B7  1D03               	btfss	3,2
  3685     02B8  2ABA               	goto	u1931
  3686     02B9  2ABB               	goto	u1930
  3687     02BA                     u1931:
  3688     02BA  2AC8               	goto	l2498
  3689     02BB                     u1930:
  3690     02BB                     l2494:
  3691                           
  3692                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 145:         
      +                                  LIN_state = LIN_IDLE;
  3693     02BB  01BA               	clrf	LIN_handler@LIN_state
  3694     02BC                     l2496:
  3695                           
  3696                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 146:         
      +                                  memset(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3697     02BC  3000               	movlw	0
  3698     02BD  00D3               	movwf	memset@c
  3699     02BE  00D4               	movwf	memset@c+1
  3700     02BF  300C               	movlw	12
  3701     02C0  00D5               	movwf	memset@n
  3702     02C1  3000               	movlw	0
  3703     02C2  00D6               	movwf	memset@n+1
  3704     02C3  30B8               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3705     02C4  3185  256C  3182   	fcall	_memset
  3706                           
  3707                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 147:         
      +                              } else if(EUSART_is_rx_ready()){
  3708     02C7  2AFC               	goto	l177
  3709     02C8                     l2498:
  3710     02C8  3186  2666  3182   	fcall	_EUSART_is_rx_ready
  3711     02CB  3A00               	xorlw	0
  3712     02CC  1903               	skipnz
  3713     02CD  2ACF               	goto	u1941
  3714     02CE  2AD0               	goto	u1940
  3715     02CF                     u1941:
  3716     02CF  2AFC               	goto	l177
  3717     02D0                     u1940:
  3718     02D0                     l2500:
  3719                           
  3720                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 148:         
      +                                  if(LIN_receivePacket() == 1){
  3721     02D0  3183  23AE  3182   	fcall	_LIN_receivePacket
  3722     02D3  3A01               	xorlw	1
  3723     02D4  1D03               	skipz
  3724     02D5  2AD7               	goto	u1951
  3725     02D6  2AD8               	goto	u1950
  3726     02D7                     u1951:
  3727     02D7  2AFC               	goto	l177
  3728     02D8                     u1950:
  3729     02D8                     l2502:
  3730                           
  3731                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 150:         
      +                                      LIN_disableRx();
  3732     02D8  3186  26A9  3182   	fcall	_LIN_disableRx
  3733     02DB                     l2504:
  3734                           
  3735                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 151:         
      +                                      LIN_state = LIN_RX_RDY;
  3736     02DB  3003               	movlw	3
  3737     02DC  0020               	movlb	0	; select bank0
  3738     02DD  00BA               	movwf	LIN_handler@LIN_state
  3739     02DE  2AFC               	goto	l177
  3740     02DF                     l2506:
  3741                           
  3742                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 157:         
      +                              LIN_processData();
  3743     02DF  082F               	movf	_LIN_processData+1,w
  3744     02E0  008A               	movwf	10
  3745     02E1  082E               	movf	_LIN_processData,w
  3746     02E2  000A               	callw
  3747     02E3  3182               	pagesel	$
  3748     02E4  2AB3               	goto	l2490
  3749     02E5                     l2512:
  3750     02E5  0020               	movlb	0	; select bank0
  3751     02E6  083A               	movf	LIN_handler@LIN_state,w
  3752     02E7  00DF               	movwf	??_LIN_handler
  3753     02E8  01E0               	clrf	??_LIN_handler+1
  3754                           
  3755                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3756                           ; Switch size 1, requested type "simple"
  3757                           ; Number of cases is 1, Range of values is 0 to 0
  3758                           ; switch strategies available:
  3759                           ; Name         Instructions Cycles
  3760                           ; simple_byte            4     3 (average)
  3761                           ; direct_byte            8     6 (fixed)
  3762                           ; jumptable            260     6 (fixed)
  3763                           ;	Chosen strategy is simple_byte
  3764     02E9  0860               	movf	??_LIN_handler+1,w
  3765     02EA  3A00               	xorlw	0	; case 0
  3766     02EB  1903               	skipnz
  3767     02EC  2AEE               	goto	l2630
  3768     02ED  2AFC               	goto	l177
  3769     02EE                     l2630:
  3770                           
  3771                           ; Switch size 1, requested type "simple"
  3772                           ; Number of cases is 4, Range of values is 0 to 3
  3773                           ; switch strategies available:
  3774                           ; Name         Instructions Cycles
  3775                           ; simple_byte           13     7 (average)
  3776                           ; direct_byte           14     6 (fixed)
  3777                           ; jumptable            260     6 (fixed)
  3778                           ;	Chosen strategy is simple_byte
  3779     02EE  085F               	movf	??_LIN_handler,w
  3780     02EF  3A00               	xorlw	0	; case 0
  3781     02F0  1903               	skipnz
  3782     02F1  2A88               	goto	l2472
  3783     02F2  3A01               	xorlw	1	; case 1
  3784     02F3  1903               	skipnz
  3785     02F4  2A98               	goto	l166
  3786     02F5  3A03               	xorlw	3	; case 2
  3787     02F6  1903               	skipnz
  3788     02F7  2AB6               	goto	l2492
  3789     02F8  3A01               	xorlw	1	; case 3
  3790     02F9  1903               	skipnz
  3791     02FA  2ADF               	goto	l2506
  3792     02FB  2AFC               	goto	l177
  3793     02FC                     l177:
  3794     02FC  0008               	return
  3795     02FD                     __end_of_LIN_handler:
  3796                           
  3797                           	psect	text19
  3798     05EA                     __ptext19:	
  3799 ;; *************** function _processLIN *****************
  3800 ;; Defined at:
  3801 ;;		line 49 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_app.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  tempRxData      8    0[BANK1 ] unsigned char [8]
  3806 ;;  cmd             1    8[BANK1 ] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3816 ;;      Params:         0       0       0       0       0       0       0       0
  3817 ;;      Locals:         0       0       9       0       0       0       0       0
  3818 ;;      Temps:          0       2       0       0       0       0       0       0
  3819 ;;      Totals:         0       2       9       0       0       0       0       0
  3820 ;;Total ram usage:       11 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 8
  3823 ;; This function calls:
  3824 ;;		_LIN_getPacket
  3825 ;; This function is called by:
  3826 ;;		_LIN_Master_Initialize
  3827 ;;		_LIN_handler
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831     05EA                     _processLIN:	
  3832                           ;psect for function _processLIN
  3833                           
  3834     05EA                     l2446:	
  3835                           ;incstack = 0
  3836                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3837                           
  3838                           
  3839                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_app.c: 50:     uint8_t 
      +                          tempRxData[8];;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_app.c: 51
      +                          :     uint8_t cmd;;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_app.c
      +                          : 53:     cmd = LIN_getPacket(tempRxData);
  3840     05EA  30CF               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3841     05EB  3185  252D  3185   	fcall	_LIN_getPacket
  3842     05EE  0021               	movlb	1	; select bank1
  3843     05EF  00D7               	movwf	processLIN@cmd^(0+128)
  3844     05F0                     l2450:	
  3845                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_app.c: 54:     switch(c
      +                          md){
  3846                           
  3847     05F0  0857               	movf	processLIN@cmd^(0+128),w
  3848     05F1  0020               	movlb	0	; select bank0
  3849     05F2  00DD               	movwf	??_processLIN
  3850     05F3  01DE               	clrf	??_processLIN+1
  3851                           
  3852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3853                           ; Switch size 1, requested type "simple"
  3854                           ; Number of cases is 1, Range of values is 0 to 0
  3855                           ; switch strategies available:
  3856                           ; Name         Instructions Cycles
  3857                           ; simple_byte            4     3 (average)
  3858                           ; direct_byte            8     6 (fixed)
  3859                           ; jumptable            260     6 (fixed)
  3860                           ;	Chosen strategy is simple_byte
  3861     05F4  085E               	movf	??_processLIN+1,w
  3862     05F5  3A00               	xorlw	0	; case 0
  3863     05F6  1903               	skipnz
  3864     05F7  2DF9               	goto	l2632
  3865     05F8  2DFE               	goto	l72
  3866     05F9                     l2632:
  3867                           
  3868                           ; Switch size 1, requested type "simple"
  3869                           ; Number of cases is 1, Range of values is 1 to 1
  3870                           ; switch strategies available:
  3871                           ; Name         Instructions Cycles
  3872                           ; simple_byte            4     3 (average)
  3873                           ; direct_byte           11     9 (fixed)
  3874                           ; jumptable            263     9 (fixed)
  3875                           ;	Chosen strategy is simple_byte
  3876     05F9  085D               	movf	??_processLIN,w
  3877     05FA  3A01               	xorlw	1	; case 1
  3878     05FB  1903               	skipnz
  3879     05FC  2DFE               	goto	l72
  3880     05FD  2DFE               	goto	l72
  3881     05FE                     l72:
  3882     05FE  0008               	return
  3883     05FF                     __end_of_processLIN:
  3884                           
  3885                           	psect	text20
  3886     052D                     __ptext20:	
  3887 ;; *************** function _LIN_getPacket *****************
  3888 ;; Defined at:
  3889 ;;		line 203 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  data            1    wreg     PTR unsigned char 
  3892 ;;		 -> processLIN@tempRxData(8), 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  data            1   17[BANK0 ] PTR unsigned char 
  3895 ;;		 -> processLIN@tempRxData(8), 
  3896 ;;  cmd             1   18[BANK0 ] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      unsigned char 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3906 ;;      Params:         0       0       0       0       0       0       0       0
  3907 ;;      Locals:         0       2       0       0       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0       0
  3909 ;;      Totals:         0       2       0       0       0       0       0       0
  3910 ;;Total ram usage:        2 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 7
  3913 ;; This function calls:
  3914 ;;		_memcpy
  3915 ;;		_memset
  3916 ;; This function is called by:
  3917 ;;		_processLIN
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921     052D                     _LIN_getPacket:	
  3922                           ;psect for function _LIN_getPacket
  3923                           
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3927                           ;LIN_getPacket@data stored from wreg
  3928     052D  0020               	movlb	0	; select bank0
  3929     052E  00DB               	movwf	LIN_getPacket@data
  3930     052F                     l2416:
  3931                           
  3932                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 204:     uint
      +                          8_t cmd = LIN_rxPacket.cmd & 0x3F;
  3933     052F  0021               	movlb	1	; select bank1
  3934     0530  0838               	movf	_LIN_rxPacket^(0+128),w
  3935     0531  393F               	andlw	63
  3936     0532  0020               	movlb	0	; select bank0
  3937     0533  00DC               	movwf	LIN_getPacket@cmd
  3938     0534                     l2418:
  3939                           
  3940                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 206:     memc
      +                          py(data, LIN_rxPacket.data, sizeof(LIN_rxPacket.data));
  3941     0534  30BA               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  3942     0535  00D3               	movwf	memcpy@s1
  3943     0536  3008               	movlw	8
  3944     0537  00D4               	movwf	memcpy@n
  3945     0538  3000               	movlw	0
  3946     0539  00D5               	movwf	memcpy@n+1
  3947     053A  085B               	movf	LIN_getPacket@data,w
  3948     053B  3184  24C0  3185   	fcall	_memcpy
  3949     053E                     l2420:
  3950                           
  3951                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 207:     mems
      +                          et(LIN_rxPacket.rawPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3952     053E  3000               	movlw	0
  3953     053F  0020               	movlb	0	; select bank0
  3954     0540  00D3               	movwf	memset@c
  3955     0541  00D4               	movwf	memset@c+1
  3956     0542  300C               	movlw	12
  3957     0543  00D5               	movwf	memset@n
  3958     0544  3000               	movlw	0
  3959     0545  00D6               	movwf	memset@n+1
  3960     0546  30B8               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3961     0547  3185  256C  3185   	fcall	_memset
  3962     054A                     l2422:
  3963                           
  3964                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 209:     retu
      +                          rn cmd;
  3965     054A  0020               	movlb	0	; select bank0
  3966     054B  085C               	movf	LIN_getPacket@cmd,w
  3967     054C                     l195:
  3968     054C  0008               	return
  3969     054D                     __end_of_LIN_getPacket:
  3970                           
  3971                           	psect	text21
  3972     056C                     __ptext21:	
  3973 ;; *************** function _memset *****************
  3974 ;; Defined at:
  3975 ;;		line 3 in file "c:\PROGRA~1\MICROC~1\xc8\v2.45\pic\sources\c99\common\memset.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  dest            1    wreg     PTR void 
  3978 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3979 ;;  c               2    9[BANK0 ] int 
  3980 ;;  n               2   11[BANK0 ] unsigned int 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;  dest            1   15[BANK0 ] PTR void 
  3983 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3984 ;;  p               1   14[BANK0 ] PTR unsigned char 
  3985 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      PTR void 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3995 ;;      Params:         0       4       0       0       0       0       0       0
  3996 ;;      Locals:         0       2       0       0       0       0       0       0
  3997 ;;      Temps:          0       1       0       0       0       0       0       0
  3998 ;;      Totals:         0       7       0       0       0       0       0       0
  3999 ;;Total ram usage:        7 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 6
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_LIN_handler
  4006 ;;		_LIN_getPacket
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010     056C                     _memset:	
  4011                           ;psect for function _memset
  4012                           
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4016                           ;memset@dest stored from wreg
  4017     056C  0020               	movlb	0	; select bank0
  4018     056D  00D9               	movwf	memset@dest
  4019     056E                     l2394:
  4020     056E  0859               	movf	memset@dest,w
  4021     056F  00D8               	movwf	memset@p
  4022     0570  2D7A               	goto	l2400
  4023     0571                     l2396:
  4024     0571  0858               	movf	memset@p,w
  4025     0572  0086               	movwf	6
  4026     0573  0187               	clrf	7
  4027     0574  0853               	movf	memset@c,w
  4028     0575  0081               	movwf	1
  4029     0576                     l2398:
  4030     0576  3001               	movlw	1
  4031     0577  00D7               	movwf	??_memset
  4032     0578  0857               	movf	??_memset,w
  4033     0579  07D8               	addwf	memset@p,f
  4034     057A                     l2400:
  4035     057A  3001               	movlw	1
  4036     057B  02D5               	subwf	memset@n,f
  4037     057C  3000               	movlw	0
  4038     057D  3BD6               	subwfb	memset@n+1,f
  4039     057E  0A55               	incf	memset@n,w
  4040     057F  1D03               	skipz
  4041     0580  2D85               	goto	u1801
  4042     0581  0A56               	incf	memset@n+1,w
  4043     0582  1D03               	btfss	3,2
  4044     0583  2D85               	goto	u1801
  4045     0584  2D86               	goto	u1800
  4046     0585                     u1801:
  4047     0585  2D71               	goto	l2396
  4048     0586                     u1800:
  4049     0586                     l1144:
  4050     0586  0008               	return
  4051     0587                     __end_of_memset:
  4052                           
  4053                           	psect	text22
  4054     04C0                     __ptext22:	
  4055 ;; *************** function _memcpy *****************
  4056 ;; Defined at:
  4057 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  d1              1    wreg     PTR void 
  4060 ;;		 -> LIN_packet(11), processLIN@tempRxData(8), 
  4061 ;;  s1              1    9[BANK0 ] PTR const void 
  4062 ;;		 -> LIN_rxPacket$data(8), LIN_rxPacket(12), SW_STATE_Data(8), 
  4063 ;;  n               2   10[BANK0 ] unsigned int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  d1              1   16[BANK0 ] PTR void 
  4066 ;;		 -> LIN_packet(11), processLIN@tempRxData(8), 
  4067 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  4068 ;;		 -> LIN_rxPacket$data(8), LIN_rxPacket(12), SW_STATE_Data(8), 
  4069 ;;  d               1   14[BANK0 ] PTR unsigned char 
  4070 ;;		 -> LIN_packet(11), processLIN@tempRxData(8), 
  4071 ;;  tmp             1   13[BANK0 ] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      PTR void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4081 ;;      Params:         0       3       0       0       0       0       0       0
  4082 ;;      Locals:         0       4       0       0       0       0       0       0
  4083 ;;      Temps:          0       1       0       0       0       0       0       0
  4084 ;;      Totals:         0       8       0       0       0       0       0       0
  4085 ;;Total ram usage:        8 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 6
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_LIN_getPacket
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095     04C0                     _memcpy:	
  4096                           ;psect for function _memcpy
  4097                           
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4101                           ;memcpy@d1 stored from wreg
  4102     04C0  0020               	movlb	0	; select bank0
  4103     04C1  00DA               	movwf	memcpy@d1
  4104     04C2                     l2402:
  4105     04C2  0853               	movf	memcpy@s1,w
  4106     04C3  00D9               	movwf	memcpy@s
  4107     04C4  085A               	movf	memcpy@d1,w
  4108     04C5  00D8               	movwf	memcpy@d
  4109     04C6  2CD9               	goto	l1135
  4110     04C7                     l2404:
  4111     04C7  0859               	movf	memcpy@s,w
  4112     04C8  0086               	movwf	6
  4113     04C9  0187               	clrf	7
  4114     04CA  0801               	movf	1,w
  4115     04CB  00D7               	movwf	memcpy@tmp
  4116     04CC                     l2406:
  4117     04CC  3001               	movlw	1
  4118     04CD  00D6               	movwf	??_memcpy
  4119     04CE  0856               	movf	??_memcpy,w
  4120     04CF  07D9               	addwf	memcpy@s,f
  4121     04D0                     l2408:
  4122     04D0  0858               	movf	memcpy@d,w
  4123     04D1  0086               	movwf	6
  4124     04D2  0187               	clrf	7
  4125     04D3  0857               	movf	memcpy@tmp,w
  4126     04D4  0081               	movwf	1
  4127     04D5  3001               	movlw	1
  4128     04D6  00D6               	movwf	??_memcpy
  4129     04D7  0856               	movf	??_memcpy,w
  4130     04D8  07D8               	addwf	memcpy@d,f
  4131     04D9                     l1135:
  4132     04D9  3001               	movlw	1
  4133     04DA  02D4               	subwf	memcpy@n,f
  4134     04DB  3000               	movlw	0
  4135     04DC  3BD5               	subwfb	memcpy@n+1,f
  4136     04DD  0A54               	incf	memcpy@n,w
  4137     04DE  1D03               	skipz
  4138     04DF  2CE4               	goto	u1811
  4139     04E0  0A55               	incf	memcpy@n+1,w
  4140     04E1  1D03               	btfss	3,2
  4141     04E2  2CE4               	goto	u1811
  4142     04E3  2CE5               	goto	u1810
  4143     04E4                     u1811:
  4144     04E4  2CC7               	goto	l2404
  4145     04E5                     u1810:
  4146     04E5                     l1138:
  4147     04E5  0008               	return
  4148     04E6                     __end_of_memcpy:
  4149                           
  4150                           	psect	text23
  4151     0644                     __ptext23:	
  4152 ;; *************** function _LIN_startTimer *****************
  4153 ;; Defined at:
  4154 ;;		line 243 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  timeout         1    wreg     unsigned char 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  timeout         1   10[BANK0 ] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4168 ;;      Params:         0       0       0       0       0       0       0       0
  4169 ;;      Locals:         0       1       0       0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0
  4171 ;;      Totals:         0       1       0       0       0       0       0       0
  4172 ;;Total ram usage:        1 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 7
  4175 ;; This function calls:
  4176 ;;		_TMR0_WriteTimer
  4177 ;; This function is called by:
  4178 ;;		_LIN_handler
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182     0644                     _LIN_startTimer:	
  4183                           ;psect for function _LIN_startTimer
  4184                           
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  4188                           ;LIN_startTimer@timeout stored from wreg
  4189     0644  0020               	movlb	0	; select bank0
  4190     0645  00D4               	movwf	LIN_startTimer@timeout
  4191     0646                     l2030:
  4192                           
  4193                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 244:     LIN_
      +                          timeout = timeout;
  4194     0646  0854               	movf	LIN_startTimer@timeout,w
  4195     0647  00E2               	movwf	_LIN_timeout
  4196     0648                     l2032:
  4197                           
  4198                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 245:     TMR0
      +                          _WriteTimer(0);
  4199     0648  3000               	movlw	0
  4200     0649  3186  269F  3186   	fcall	_TMR0_WriteTimer
  4201     064C                     l2034:
  4202                           
  4203                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 246:     __no
      +                          p();
  4204     064C  0000               	nop
  4205     064D                     l2036:
  4206                           
  4207                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 247:     LIN_
      +                          timerRunning = 1;
  4208     064D  0020               	movlb	0	; select bank0
  4209     064E  01BE               	clrf	_LIN_timerRunning
  4210     064F  0ABE               	incf	_LIN_timerRunning,f
  4211     0650                     l208:
  4212     0650  0008               	return
  4213     0651                     __end_of_LIN_startTimer:
  4214                           
  4215                           	psect	text24
  4216     069F                     __ptext24:	
  4217 ;; *************** function _TMR0_WriteTimer *****************
  4218 ;; Defined at:
  4219 ;;		line 96 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  timerVal        1    wreg     unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  timerVal        1    9[BANK0 ] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4233 ;;      Params:         0       0       0       0       0       0       0       0
  4234 ;;      Locals:         0       1       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0
  4236 ;;      Totals:         0       1       0       0       0       0       0       0
  4237 ;;Total ram usage:        1 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 6
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_LIN_startTimer
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     069F                     _TMR0_WriteTimer:	
  4248                           ;psect for function _TMR0_WriteTimer
  4249                           
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in _TMR0_WriteTimer: [wreg]
  4253                           ;TMR0_WriteTimer@timerVal stored from wreg
  4254     069F  0020               	movlb	0	; select bank0
  4255     06A0  00D3               	movwf	TMR0_WriteTimer@timerVal
  4256     06A1                     l1954:
  4257                           
  4258                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 96: void TMR0_WriteTimer(uint8
      +                          _t timerVal);C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 97: {;C:\yiming\wo
      +                          rk\FR682_TXV01.X\mcc_generated_files\tmr0.c: 99:     TMR0 = timerVal;
  4259     06A1  0853               	movf	TMR0_WriteTimer@timerVal,w
  4260     06A2  0095               	movwf	21	;volatile
  4261     06A3                     l513:
  4262     06A3  0008               	return
  4263     06A4                     __end_of_TMR0_WriteTimer:
  4264                           
  4265                           	psect	text25
  4266     037A                     __ptext25:	
  4267 ;; *************** function _LIN_sendPacket *****************
  4268 ;; Defined at:
  4269 ;;		line 182 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  i               1   12[BANK0 ] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4283 ;;      Params:         0       0       0       0       0       0       0       0
  4284 ;;      Locals:         0       1       0       0       0       0       0       0
  4285 ;;      Temps:          0       1       0       0       0       0       0       0
  4286 ;;      Totals:         0       2       0       0       0       0       0       0
  4287 ;;Total ram usage:        2 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 7
  4290 ;; This function calls:
  4291 ;;		_EUSART_Write
  4292 ;;		_LIN_sendBreak
  4293 ;; This function is called by:
  4294 ;;		_LIN_handler
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298     037A                     _LIN_sendPacket:	
  4299                           ;psect for function _LIN_sendPacket
  4300                           
  4301     037A                     l2010:	
  4302                           ;incstack = 0
  4303                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4304                           
  4305                           
  4306                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 185:     LIN_
      +                          sendBreak();
  4307     037A  3186  26C6  3183   	fcall	_LIN_sendBreak
  4308     037D                     l2012:
  4309                           
  4310                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 186:     EUSA
      +                          RT_Write(0x00);
  4311     037D  3000               	movlw	0
  4312     037E  3184  2449  3183   	fcall	_EUSART_Write
  4313     0381                     l2014:
  4314                           
  4315                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 188:     EUSA
      +                          RT_Write(0x55);
  4316     0381  3055               	movlw	85
  4317     0382  3184  2449  3183   	fcall	_EUSART_Write
  4318     0385                     l2016:
  4319                           
  4320                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 190:     EUSA
      +                          RT_Write(LIN_packet.PID);
  4321     0385  0021               	movlb	1	; select bank1
  4322     0386  0844               	movf	_LIN_packet^(0+128),w
  4323     0387  3184  2449  3183   	fcall	_EUSART_Write
  4324     038A                     l2018:
  4325                           
  4326                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 192:     if(L
      +                          IN_rxPacket.rxLength == 0){
  4327     038A  0021               	movlb	1	; select bank1
  4328     038B  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  4329     038C  1D03               	btfss	3,2
  4330     038D  2B8F               	goto	u1391
  4331     038E  2B90               	goto	u1390
  4332     038F                     u1391:
  4333     038F  2BAD               	goto	l192
  4334     0390                     u1390:
  4335     0390                     l2020:
  4336                           
  4337                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 195:         
      +                          for(uint8_t i = 0; i < LIN_packet.length; i++){
  4338     0390  0020               	movlb	0	; select bank0
  4339     0391  01D6               	clrf	LIN_sendPacket@i
  4340     0392  2BA0               	goto	l2026
  4341     0393                     l2022:
  4342                           
  4343                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 196:         
      +                              EUSART_Write(LIN_packet.data[i]);
  4344     0393  0856               	movf	LIN_sendPacket@i,w
  4345     0394  3EC5               	addlw	(low ((_LIN_packet| 0+1)))& (0+255)
  4346     0395  0086               	movwf	6
  4347     0396  0187               	clrf	7
  4348     0397  0801               	movf	1,w
  4349     0398  3184  2449  3183   	fcall	_EUSART_Write
  4350     039B                     l2024:
  4351                           
  4352                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 197:         
      +                          }
  4353     039B  3001               	movlw	1
  4354     039C  0020               	movlb	0	; select bank0
  4355     039D  00D5               	movwf	??_LIN_sendPacket
  4356     039E  0855               	movf	??_LIN_sendPacket,w
  4357     039F  07D6               	addwf	LIN_sendPacket@i,f
  4358     03A0                     l2026:
  4359     03A0  0021               	movlb	1	; select bank1
  4360     03A1  084E               	movf	(_LIN_packet^(0+128)+10),w
  4361     03A2  0020               	movlb	0	; select bank0
  4362     03A3  0256               	subwf	LIN_sendPacket@i,w
  4363     03A4  1C03               	skipc
  4364     03A5  2BA7               	goto	u1401
  4365     03A6  2BA8               	goto	u1400
  4366     03A7                     u1401:
  4367     03A7  2B93               	goto	l2022
  4368     03A8                     u1400:
  4369     03A8                     l2028:
  4370                           
  4371                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 199:         
      +                          EUSART_Write(LIN_packet.checksum);
  4372     03A8  0021               	movlb	1	; select bank1
  4373     03A9  084D               	movf	(_LIN_packet^(0+128)+9),w
  4374     03AA  3184  2449  3183   	fcall	_EUSART_Write
  4375     03AD                     l192:
  4376     03AD  0008               	return
  4377     03AE                     __end_of_LIN_sendPacket:
  4378                           
  4379                           	psect	text26
  4380     06C6                     __ptext26:	
  4381 ;; *************** function _LIN_sendBreak *****************
  4382 ;; Defined at:
  4383 ;;		line 296 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		None
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4397 ;;      Params:         0       0       0       0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0
  4400 ;;      Totals:         0       0       0       0       0       0       0       0
  4401 ;;Total ram usage:        0 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 6
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_LIN_sendPacket
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411     06C6                     _LIN_sendBreak:	
  4412                           ;psect for function _LIN_sendBreak
  4413                           
  4414     06C6                     l1934:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _LIN_sendBreak: []
  4417                           
  4418                           
  4419                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 297:     TXST
      +                          Abits.SENDB = 1;
  4420     06C6  0023               	movlb	3	; select bank3
  4421     06C7  159E               	bsf	30,3	;volatile
  4422     06C8                     l236:
  4423     06C8  0008               	return
  4424     06C9                     __end_of_LIN_sendBreak:
  4425                           
  4426                           	psect	text27
  4427     0449                     __ptext27:	
  4428 ;; *************** function _EUSART_Write *****************
  4429 ;; Defined at:
  4430 ;;		line 173 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  txData          1    wreg     unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  txData          1   10[BANK0 ] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4444 ;;      Params:         0       0       0       0       0       0       0       0
  4445 ;;      Locals:         0       1       0       0       0       0       0       0
  4446 ;;      Temps:          0       1       0       0       0       0       0       0
  4447 ;;      Totals:         0       2       0       0       0       0       0       0
  4448 ;;Total ram usage:        2 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 6
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_LIN_sendPacket
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458     0449                     _EUSART_Write:	
  4459                           ;psect for function _EUSART_Write
  4460                           
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4464                           ;EUSART_Write@txData stored from wreg
  4465     0449  0020               	movlb	0	; select bank0
  4466     044A  00D4               	movwf	EUSART_Write@txData
  4467     044B                     l1936:
  4468     044B                     l1938:	
  4469                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 173: void EUSART_Write(uint8
      +                          _t txData);C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 174: {;C:\yiming\w
      +                          ork\FR682_TXV01.X\mcc_generated_files\eusart.c: 175:     while(0 == eusartTxBufferRemain
      +                          ing)
  4470                           
  4471                           
  4472                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 175:     while(0 == eusartTx
      +                          BufferRemaining)
  4473     044B  0835               	movf	_eusartTxBufferRemaining,w	;volatile
  4474     044C  1903               	btfsc	3,2
  4475     044D  2C4F               	goto	u1321
  4476     044E  2C50               	goto	u1320
  4477     044F                     u1321:
  4478     044F  2C4B               	goto	l1938
  4479     0450                     u1320:
  4480     0450                     l344:
  4481                           
  4482                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 179:     if(0 == PIE1bits.TX
      +                          IE)
  4483     0450  0021               	movlb	1	; select bank1
  4484     0451  1A11               	btfsc	17,4	;volatile
  4485     0452  2C54               	goto	u1331
  4486     0453  2C55               	goto	u1330
  4487     0454                     u1331:
  4488     0454  2C5A               	goto	l345
  4489     0455                     u1330:
  4490     0455                     l1940:
  4491                           
  4492                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 180:     {;C:\yiming\work\FR
      +                          682_TXV01.X\mcc_generated_files\eusart.c: 181:         TXREG = txData;
  4493     0455  0020               	movlb	0	; select bank0
  4494     0456  0854               	movf	EUSART_Write@txData,w
  4495     0457  0023               	movlb	3	; select bank3
  4496     0458  009A               	movwf	26	;volatile
  4497                           
  4498                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 182:     }
  4499     0459  2C6F               	goto	l1952
  4500     045A                     l345:	
  4501                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 183:     else
  4502                           
  4503                           
  4504                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 184:     {;C:\yiming\work\FR
      +                          682_TXV01.X\mcc_generated_files\eusart.c: 185:         PIE1bits.TXIE = 0;
  4505     045A  1211               	bcf	17,4	;volatile
  4506     045B                     l1942:
  4507                           
  4508                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 186:         eusartTxBuffer[
      +                          eusartTxHead++] = txData;
  4509     045B  0020               	movlb	0	; select bank0
  4510     045C  0837               	movf	_eusartTxHead,w
  4511     045D  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4512     045E  0086               	movwf	6
  4513     045F  0187               	clrf	7
  4514     0460  0854               	movf	EUSART_Write@txData,w
  4515     0461  0081               	movwf	1
  4516     0462                     l1944:
  4517     0462  3001               	movlw	1
  4518     0463  00D3               	movwf	??_EUSART_Write
  4519     0464  0853               	movf	??_EUSART_Write,w
  4520     0465  07B7               	addwf	_eusartTxHead,f	;volatile
  4521     0466                     l1946:
  4522                           
  4523                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 187:         if(sizeof(eusar
      +                          tTxBuffer) <= eusartTxHead)
  4524     0466  3008               	movlw	8
  4525     0467  0237               	subwf	_eusartTxHead,w	;volatile
  4526     0468  1C03               	skipc
  4527     0469  2C6B               	goto	u1341
  4528     046A  2C6C               	goto	u1340
  4529     046B                     u1341:
  4530     046B  2C6D               	goto	l1950
  4531     046C                     u1340:
  4532     046C                     l1948:
  4533                           
  4534                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 188:         {;C:\yiming\wor
      +                          k\FR682_TXV01.X\mcc_generated_files\eusart.c: 189:             eusartTxHead = 0;
  4535     046C  01B7               	clrf	_eusartTxHead	;volatile
  4536     046D                     l1950:
  4537                           
  4538                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 191:         eusartTxBufferR
      +                          emaining--;
  4539     046D  3001               	movlw	1
  4540     046E  02B5               	subwf	_eusartTxBufferRemaining,f	;volatile
  4541     046F                     l1952:
  4542                           
  4543                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 193:     PIE1bits.TXIE = 1;
  4544     046F  0021               	movlb	1	; select bank1
  4545     0470  1611               	bsf	17,4	;volatile
  4546     0471                     l348:
  4547     0471  0008               	return
  4548     0472                     __end_of_EUSART_Write:
  4549                           
  4550                           	psect	text28
  4551     03AE                     __ptext28:	
  4552 ;; *************** function _LIN_receivePacket *****************
  4553 ;; Defined at:
  4554 ;;		line 164 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      _Bool 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4568 ;;      Params:         0       0       0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0
  4570 ;;      Temps:          0       1       0       0       0       0       0       0
  4571 ;;      Totals:         0       1       0       0       0       0       0       0
  4572 ;;Total ram usage:        1 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 7
  4575 ;; This function calls:
  4576 ;;		_EUSART_Read
  4577 ;;		_LIN_getChecksum
  4578 ;; This function is called by:
  4579 ;;		_LIN_handler
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583     03AE                     _LIN_receivePacket:	
  4584                           ;psect for function _LIN_receivePacket
  4585                           
  4586     03AE                     l2044:	
  4587                           ;incstack = 0
  4588                           ; Regs used in _LIN_receivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4589                           
  4590                           
  4591                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 165:     stat
      +                          ic uint8_t rxIndex = 0;;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_
      +                          master.c: 167:     if(rxIndex < LIN_rxPacket.rxLength){
  4592     03AE  0021               	movlb	1	; select bank1
  4593     03AF  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  4594     03B0  0020               	movlb	0	; select bank0
  4595     03B1  0239               	subwf	LIN_receivePacket@rxIndex,w
  4596     03B2  1803               	skipnc
  4597     03B3  2BB5               	goto	u1431
  4598     03B4  2BB6               	goto	u1430
  4599     03B5                     u1431:
  4600     03B5  2BC7               	goto	l2052
  4601     03B6                     u1430:
  4602     03B6                     l2046:
  4603                           
  4604                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 169:         
      +                          LIN_rxPacket.data[rxIndex++] = EUSART_Read();
  4605     03B6  3184  2472  3183   	fcall	_EUSART_Read
  4606     03B9  0020               	movlb	0	; select bank0
  4607     03BA  00DB               	movwf	??_LIN_receivePacket
  4608     03BB  0839               	movf	LIN_receivePacket@rxIndex,w
  4609     03BC  3EBA               	addlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  4610     03BD  0086               	movwf	6
  4611     03BE  0187               	clrf	7
  4612     03BF  085B               	movf	??_LIN_receivePacket,w
  4613     03C0  0081               	movwf	1
  4614     03C1                     l2048:
  4615     03C1  3001               	movlw	1
  4616     03C2  00DB               	movwf	??_LIN_receivePacket
  4617     03C3  085B               	movf	??_LIN_receivePacket,w
  4618     03C4  07B9               	addwf	LIN_receivePacket@rxIndex,f
  4619     03C5                     l2050:
  4620                           
  4621                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 170:         
      +                          __nop();
  4622     03C5  0000               	nop
  4623                           
  4624                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 171:     } el
      +                          se {
  4625     03C6  2BE0               	goto	l2060
  4626     03C7                     l2052:
  4627                           
  4628                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 172:         
      +                          rxIndex = 0;
  4629     03C7  01B9               	clrf	LIN_receivePacket@rxIndex
  4630     03C8                     l2054:
  4631                           
  4632                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 174:         
      +                          if(EUSART_Read() == LIN_getChecksum(LIN_rxPacket.rxLength, LIN_packet.PID, LIN_rxPacket.
      +                          data))
  4633     03C8  0021               	movlb	1	; select bank1
  4634     03C9  0844               	movf	_LIN_packet^(0+128),w
  4635     03CA  0020               	movlb	0	; select bank0
  4636     03CB  00D3               	movwf	LIN_getChecksum@pid
  4637     03CC  30BA               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  4638     03CD  00D4               	movwf	LIN_getChecksum@data
  4639     03CE  0021               	movlb	1	; select bank1
  4640     03CF  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  4641     03D0  3183  23E2  3183   	fcall	_LIN_getChecksum
  4642     03D3  0020               	movlb	0	; select bank0
  4643     03D4  00DB               	movwf	??_LIN_receivePacket
  4644     03D5  3184  2472  3183   	fcall	_EUSART_Read
  4645     03D8  0020               	movlb	0	; select bank0
  4646     03D9  065B               	xorwf	??_LIN_receivePacket,w
  4647     03DA  1D03               	skipz
  4648     03DB  2BDD               	goto	u1441
  4649     03DC  2BDE               	goto	u1440
  4650     03DD                     u1441:
  4651     03DD  2BE0               	goto	l2060
  4652     03DE                     u1440:
  4653     03DE                     l2056:
  4654                           
  4655                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 175:         
      +                              return 1;
  4656     03DE  3001               	movlw	1
  4657     03DF  2BE1               	goto	l185
  4658     03E0                     l2060:
  4659                           
  4660                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 179:     retu
      +                          rn 0;
  4661     03E0  3000               	movlw	0
  4662     03E1                     l185:
  4663     03E1  0008               	return
  4664     03E2                     __end_of_LIN_receivePacket:
  4665                           
  4666                           	psect	text29
  4667     03E2                     __ptext29:	
  4668 ;; *************** function _LIN_getChecksum *****************
  4669 ;; Defined at:
  4670 ;;		line 230 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  length          1    wreg     unsigned char 
  4673 ;;  pid             1    9[BANK0 ] unsigned char 
  4674 ;;  data            1   10[BANK0 ] PTR unsigned char 
  4675 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  length          1   13[BANK0 ] unsigned char 
  4678 ;;  i               1   14[BANK0 ] unsigned char 
  4679 ;;  checksum        2   15[BANK0 ] unsigned short 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4689 ;;      Params:         0       2       0       0       0       0       0       0
  4690 ;;      Locals:         0       4       0       0       0       0       0       0
  4691 ;;      Temps:          0       2       0       0       0       0       0       0
  4692 ;;      Totals:         0       8       0       0       0       0       0       0
  4693 ;;Total ram usage:        8 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 6
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_LIN_receivePacket
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703     03E2                     _LIN_getChecksum:	
  4704                           ;psect for function _LIN_getChecksum
  4705                           
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4709                           ;LIN_getChecksum@length stored from wreg
  4710     03E2  0020               	movlb	0	; select bank0
  4711     03E3  00D7               	movwf	LIN_getChecksum@length
  4712     03E4                     l1892:
  4713                           
  4714                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 231:     uint
      +                          16_t checksum = pid;
  4715     03E4  0853               	movf	LIN_getChecksum@pid,w
  4716     03E5  00D5               	movwf	??_LIN_getChecksum
  4717     03E6  01D6               	clrf	??_LIN_getChecksum+1
  4718     03E7  0855               	movf	??_LIN_getChecksum,w
  4719     03E8  00D9               	movwf	LIN_getChecksum@checksum
  4720     03E9  0856               	movf	??_LIN_getChecksum+1,w
  4721     03EA  00DA               	movwf	LIN_getChecksum@checksum+1
  4722     03EB                     l1894:
  4723                           
  4724                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 233:     for 
      +                          (uint8_t i = 0; i < length; i++){
  4725     03EB  01D8               	clrf	LIN_getChecksum@i
  4726     03EC  2C0C               	goto	l1906
  4727     03ED                     l1896:
  4728                           
  4729                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 234:         
      +                          checksum = checksum + *data++;
  4730     03ED  0854               	movf	LIN_getChecksum@data,w
  4731     03EE  0086               	movwf	6
  4732     03EF  0187               	clrf	7
  4733     03F0  0801               	movf	1,w
  4734     03F1  0759               	addwf	LIN_getChecksum@checksum,w
  4735     03F2  00D9               	movwf	LIN_getChecksum@checksum
  4736     03F3  085A               	movf	LIN_getChecksum@checksum+1,w
  4737     03F4  1803               	skipnc
  4738     03F5  0A5A               	incf	LIN_getChecksum@checksum+1,w
  4739     03F6  00DA               	movwf	LIN_getChecksum@checksum+1
  4740     03F7                     l1898:
  4741     03F7  3001               	movlw	1
  4742     03F8  00D5               	movwf	??_LIN_getChecksum
  4743     03F9  0855               	movf	??_LIN_getChecksum,w
  4744     03FA  07D4               	addwf	LIN_getChecksum@data,f
  4745     03FB                     l1900:
  4746                           
  4747                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 235:         
      +                          if(checksum > 0xFF)
  4748     03FB  3001               	movlw	1
  4749     03FC  025A               	subwf	LIN_getChecksum@checksum+1,w
  4750     03FD  3000               	movlw	0
  4751     03FE  1903               	skipnz
  4752     03FF  0259               	subwf	LIN_getChecksum@checksum,w
  4753     0400  1C03               	skipc
  4754     0401  2C03               	goto	u1281
  4755     0402  2C04               	goto	u1280
  4756     0403                     u1281:
  4757     0403  2C08               	goto	l1904
  4758     0404                     u1280:
  4759     0404                     l1902:
  4760                           
  4761                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 236:         
      +                              checksum -= 0xFF;
  4762     0404  30FF               	movlw	255
  4763     0405  02D9               	subwf	LIN_getChecksum@checksum,f
  4764     0406  3000               	movlw	0
  4765     0407  3BDA               	subwfb	LIN_getChecksum@checksum+1,f
  4766     0408                     l1904:
  4767                           
  4768                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 237:     }
  4769     0408  3001               	movlw	1
  4770     0409  00D5               	movwf	??_LIN_getChecksum
  4771     040A  0855               	movf	??_LIN_getChecksum,w
  4772     040B  07D8               	addwf	LIN_getChecksum@i,f
  4773     040C                     l1906:
  4774     040C  0857               	movf	LIN_getChecksum@length,w
  4775     040D  0258               	subwf	LIN_getChecksum@i,w
  4776     040E  1C03               	skipc
  4777     040F  2C11               	goto	u1291
  4778     0410  2C12               	goto	u1290
  4779     0411                     u1291:
  4780     0411  2BED               	goto	l1896
  4781     0412                     u1290:
  4782     0412                     l204:
  4783                           
  4784                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 238:     chec
      +                          ksum = ~checksum;
  4785     0412  09D9               	comf	LIN_getChecksum@checksum,f
  4786     0413  09DA               	comf	LIN_getChecksum@checksum+1,f
  4787     0414                     l1908:
  4788                           
  4789                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 240:     retu
      +                          rn (uint8_t)checksum;
  4790     0414  0859               	movf	LIN_getChecksum@checksum,w
  4791     0415                     l205:
  4792     0415  0008               	return
  4793     0416                     __end_of_LIN_getChecksum:
  4794                           
  4795                           	psect	text30
  4796     0472                     __ptext30:	
  4797 ;; *************** function _EUSART_Read *****************
  4798 ;; Defined at:
  4799 ;;		line 151 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  readValue       1   10[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4813 ;;      Params:         0       0       0       0       0       0       0       0
  4814 ;;      Locals:         0       1       0       0       0       0       0       0
  4815 ;;      Temps:          0       1       0       0       0       0       0       0
  4816 ;;      Totals:         0       2       0       0       0       0       0       0
  4817 ;;Total ram usage:        2 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 6
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_LIN_receivePacket
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827     0472                     _EUSART_Read:	
  4828                           ;psect for function _EUSART_Read
  4829                           
  4830     0472                     l1912:	
  4831                           ;incstack = 0
  4832                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4833                           
  4834     0472                     l1914:	
  4835                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 155:     while(0 == eusartRx
      +                          Count)
  4836                           
  4837                           
  4838                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 155:     while(0 == eusartRx
      +                          Count)
  4839     0472  0020               	movlb	0	; select bank0
  4840     0473  0832               	movf	_eusartRxCount,w	;volatile
  4841     0474  1903               	btfsc	3,2
  4842     0475  2C77               	goto	u1301
  4843     0476  2C78               	goto	u1300
  4844     0477                     u1301:
  4845     0477  2C72               	goto	l1914
  4846     0478                     u1300:
  4847     0478                     l1916:
  4848                           
  4849                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 159:     eusartRxLastError =
      +                           eusartRxStatusBuffer[eusartRxTail];
  4850     0478  0833               	movf	_eusartRxTail,w	;volatile
  4851     0479  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4852     047A  0086               	movwf	6
  4853     047B  0187               	clrf	7
  4854     047C  0801               	movf	1,w
  4855     047D  00B1               	movwf	_eusartRxLastError	;volatile
  4856                           
  4857                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 161:     readValue = eusartR
      +                          xBuffer[eusartRxTail++];
  4858     047E  0833               	movf	_eusartRxTail,w
  4859     047F  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4860     0480  0086               	movwf	6
  4861     0481  0187               	clrf	7
  4862     0482  0801               	movf	1,w
  4863     0483  00D4               	movwf	EUSART_Read@readValue
  4864     0484                     l1918:
  4865     0484  3001               	movlw	1
  4866     0485  00D3               	movwf	??_EUSART_Read
  4867     0486  0853               	movf	??_EUSART_Read,w
  4868     0487  07B3               	addwf	_eusartRxTail,f	;volatile
  4869     0488                     l1920:
  4870                           
  4871                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 162:     if(sizeof(eusartRxB
      +                          uffer) <= eusartRxTail)
  4872     0488  3008               	movlw	8
  4873     0489  0233               	subwf	_eusartRxTail,w	;volatile
  4874     048A  1C03               	skipc
  4875     048B  2C8D               	goto	u1311
  4876     048C  2C8E               	goto	u1310
  4877     048D                     u1311:
  4878     048D  2C8F               	goto	l1924
  4879     048E                     u1310:
  4880     048E                     l1922:
  4881                           
  4882                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 163:     {;C:\yiming\work\FR
      +                          682_TXV01.X\mcc_generated_files\eusart.c: 164:         eusartRxTail = 0;
  4883     048E  01B3               	clrf	_eusartRxTail	;volatile
  4884     048F                     l1924:
  4885                           
  4886                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 166:     PIE1bits.RCIE = 0;
  4887     048F  0021               	movlb	1	; select bank1
  4888     0490  1291               	bcf	17,5	;volatile
  4889     0491                     l1926:
  4890                           
  4891                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 167:     eusartRxCount--;
  4892     0491  3001               	movlw	1
  4893     0492  0020               	movlb	0	; select bank0
  4894     0493  02B2               	subwf	_eusartRxCount,f	;volatile
  4895     0494                     l1928:
  4896                           
  4897                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 168:     PIE1bits.RCIE = 1;
  4898     0494  0021               	movlb	1	; select bank1
  4899     0495  1691               	bsf	17,5	;volatile
  4900     0496                     l1930:
  4901                           
  4902                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 170:     return readValue;
  4903     0496  0020               	movlb	0	; select bank0
  4904     0497  0854               	movf	EUSART_Read@readValue,w
  4905     0498                     l339:
  4906     0498  0008               	return
  4907     0499                     __end_of_EUSART_Read:
  4908                           
  4909                           	psect	text31
  4910     06A4                     __ptext31:	
  4911 ;; *************** function _LIN_enableRx *****************
  4912 ;; Defined at:
  4913 ;;		line 286 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		None
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4927 ;;      Params:         0       0       0       0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 6
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_LIN_handler
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941     06A4                     _LIN_enableRx:	
  4942                           ;psect for function _LIN_enableRx
  4943                           
  4944     06A4                     l2038:	
  4945                           ;incstack = 0
  4946                           ; Regs used in _LIN_enableRx: []
  4947                           
  4948                           
  4949                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 287:     RCST
      +                          Abits.CREN = 1;
  4950     06A4  0023               	movlb	3	; select bank3
  4951     06A5  161D               	bsf	29,4	;volatile
  4952                           
  4953                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 288:     PIE1
      +                          bits.RCIE = 1;
  4954     06A6  0021               	movlb	1	; select bank1
  4955     06A7  1691               	bsf	17,5	;volatile
  4956     06A8                     l230:
  4957     06A8  0008               	return
  4958     06A9                     __end_of_LIN_enableRx:
  4959                           
  4960                           	psect	text32
  4961     06A9                     __ptext32:	
  4962 ;; *************** function _LIN_disableRx *****************
  4963 ;; Defined at:
  4964 ;;		line 291 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		None
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4978 ;;      Params:         0       0       0       0       0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0       0
  4981 ;;      Totals:         0       0       0       0       0       0       0       0
  4982 ;;Total ram usage:        0 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 6
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_LIN_handler
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992     06A9                     _LIN_disableRx:	
  4993                           ;psect for function _LIN_disableRx
  4994                           
  4995     06A9                     l2008:	
  4996                           ;incstack = 0
  4997                           ; Regs used in _LIN_disableRx: []
  4998                           
  4999                           
  5000                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 292:     RCST
      +                          Abits.CREN = 0;
  5001     06A9  0023               	movlb	3	; select bank3
  5002     06AA  121D               	bcf	29,4	;volatile
  5003                           
  5004                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 293:     PIE1
      +                          bits.RCIE = 0;
  5005     06AB  0021               	movlb	1	; select bank1
  5006     06AC  1291               	bcf	17,5	;volatile
  5007     06AD                     l233:
  5008     06AD  0008               	return
  5009     06AE                     __end_of_LIN_disableRx:
  5010                           
  5011                           	psect	text33
  5012     0666                     __ptext33:	
  5013 ;; *************** function _EUSART_is_rx_ready *****************
  5014 ;; Defined at:
  5015 ;;		line 137 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      _Bool 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5029 ;;      Params:         0       0       0       0       0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; Hardware stack levels required when called: 6
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_LIN_handler
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043     0666                     _EUSART_is_rx_ready:	
  5044                           ;psect for function _EUSART_is_rx_ready
  5045                           
  5046     0666                     l2040:	
  5047                           ;incstack = 0
  5048                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5049                           
  5050                           
  5051                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 139:     return (eusartRxCou
      +                          nt ? 1 : 0);
  5052     0666  0020               	movlb	0	; select bank0
  5053     0667  0832               	movf	_eusartRxCount,w	;volatile
  5054     0668  1D03               	btfss	3,2
  5055     0669  2E6B               	goto	u1411
  5056     066A  2E6D               	goto	u1410
  5057     066B                     u1411:
  5058     066B  3001               	movlw	1
  5059     066C  2E6E               	goto	u1420
  5060     066D                     u1410:
  5061     066D  3000               	movlw	0
  5062     066E                     u1420:
  5063     066E                     l326:
  5064     066E  0008               	return
  5065     066F                     __end_of_EUSART_is_rx_ready:
  5066                           
  5067                           	psect	intentry
  5068     0004                     __pintentry:	
  5069 ;; *************** function _INTERRUPT_InterruptManager *****************
  5070 ;; Defined at:
  5071 ;;		line 52 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5085 ;;      Params:         0       0       0       0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 5
  5092 ;; This function calls:
  5093 ;;		NULL
  5094 ;;		_EUSART_Receive_ISR
  5095 ;;		_EUSART_Transmit_ISR
  5096 ;;		_TMR0_ISR
  5097 ;; This function is called by:
  5098 ;;		Interrupt level 1
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102     0004                     _INTERRUPT_InterruptManager:
  5103                           
  5104                           ;incstack = 0
  5105     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5106                           
  5107                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5108     0005  3180               	pagesel	$
  5109     0006                     i1l2574:
  5110                           
  5111                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 55:     if(INTCON
      +                          bits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5112     0006  1E8B               	btfss	11,5	;volatile
  5113     0007  2809               	goto	u202_21
  5114     0008  280A               	goto	u202_20
  5115     0009                     u202_21:
  5116     0009  2812               	goto	i1l410
  5117     000A                     u202_20:
  5118     000A                     i1l2576:
  5119     000A  1D0B               	btfss	11,2	;volatile
  5120     000B  280D               	goto	u203_21
  5121     000C  280E               	goto	u203_20
  5122     000D                     u203_21:
  5123     000D  2812               	goto	i1l410
  5124     000E                     u203_20:
  5125     000E                     i1l2578:
  5126                           
  5127                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 56:     {;C:\yimi
      +                          ng\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 57:         TMR0_ISR();
  5128     000E  3186  2626  3180   	fcall	_TMR0_ISR
  5129                           
  5130                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 58:     }
  5131     0011  2836               	goto	i1l418
  5132     0012                     i1l410:	
  5133                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 59:     else if(I
      +                          NTCONbits.PEIE == 1)
  5134                           
  5135     0012  1F0B               	btfss	11,6	;volatile
  5136     0013  2815               	goto	u204_21
  5137     0014  2816               	goto	u204_20
  5138     0015                     u204_21:
  5139     0015  2836               	goto	i1l418
  5140     0016                     u204_20:
  5141     0016                     i1l2580:
  5142                           
  5143                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 60:     {;C:\yimi
      +                          ng\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 61:         if(PIE1bits.T
      +                          XIE == 1 && PIR1bits.TXIF == 1)
  5144     0016  0021               	movlb	1	; select bank1
  5145     0017  1E11               	btfss	17,4	;volatile
  5146     0018  281A               	goto	u205_21
  5147     0019  281B               	goto	u205_20
  5148     001A                     u205_21:
  5149     001A  2826               	goto	i1l413
  5150     001B                     u205_20:
  5151     001B                     i1l2582:
  5152     001B  0020               	movlb	0	; select bank0
  5153     001C  1E11               	btfss	17,4	;volatile
  5154     001D  281F               	goto	u206_21
  5155     001E  2820               	goto	u206_20
  5156     001F                     u206_21:
  5157     001F  2826               	goto	i1l413
  5158     0020                     u206_20:
  5159     0020                     i1l2584:
  5160                           
  5161                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 62:         {;C:\
      +                          yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 63:             EUSAR
      +                          T_TxDefaultInterruptHandler();
  5162     0020  082B               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5163     0021  008A               	movwf	10
  5164     0022  082A               	movf	_EUSART_TxDefaultInterruptHandler,w
  5165     0023  000A               	callw
  5166     0024  3180               	pagesel	$
  5167                           
  5168                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 64:         }
  5169     0025  2836               	goto	i1l418
  5170     0026                     i1l413:	
  5171                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 65:         else 
      +                          if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  5172                           
  5173     0026  0021               	movlb	1	; select bank1
  5174     0027  1E91               	btfss	17,5	;volatile
  5175     0028  282A               	goto	u207_21
  5176     0029  282B               	goto	u207_20
  5177     002A                     u207_21:
  5178     002A  2836               	goto	i1l417
  5179     002B                     u207_20:
  5180     002B                     i1l2586:
  5181     002B  0020               	movlb	0	; select bank0
  5182     002C  1E91               	btfss	17,5	;volatile
  5183     002D  282F               	goto	u208_21
  5184     002E  2830               	goto	u208_20
  5185     002F                     u208_21:
  5186     002F  2836               	goto	i1l417
  5187     0030                     u208_20:
  5188     0030                     i1l2588:
  5189                           
  5190                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 66:         {;C:\
      +                          yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 67:             EUSAR
      +                          T_RxDefaultInterruptHandler();
  5191     0030  0829               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5192     0031  008A               	movwf	10
  5193     0032  0828               	movf	_EUSART_RxDefaultInterruptHandler,w
  5194     0033  000A               	callw
  5195     0034  3180               	pagesel	$
  5196                           
  5197                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 68:         }
  5198     0035  2836               	goto	i1l418
  5199     0036                     i1l417:	
  5200                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 75:     {;C:\yimi
      +                          ng\work\FR682_TXV01.X\mcc_generated_files\interrupt_manager.c: 77:     }
  5201                           
  5202     0036                     i1l418:
  5203     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5204     0037  0009               	retfie
  5205     0038                     __end_of_INTERRUPT_InterruptManager:
  5206                           
  5207                           	psect	text35
  5208     0626                     __ptext35:	
  5209 ;; *************** function _TMR0_ISR *****************
  5210 ;; Defined at:
  5211 ;;		line 108 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;		None
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  1    wreg      void 
  5218 ;; Registers used:
  5219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5225 ;;      Params:         0       0       0       0       0       0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0       0       0       0
  5228 ;;      Totals:         0       0       0       0       0       0       0       0
  5229 ;;Total ram usage:        0 bytes
  5230 ;; Hardware stack levels used: 1
  5231 ;; Hardware stack levels required when called: 4
  5232 ;; This function calls:
  5233 ;;		NULL
  5234 ;;		_LIN_timerHandler
  5235 ;;		_TMR0_DefaultInterruptHandler
  5236 ;; This function is called by:
  5237 ;;		_INTERRUPT_InterruptManager
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241     0626                     _TMR0_ISR:	
  5242                           ;psect for function _TMR0_ISR
  5243                           
  5244     0626                     i1l2518:	
  5245                           ;incstack = 0
  5246                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5247                           
  5248                           
  5249                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 112:     INTCONbits.TMR0IF = 0
      +                          ;
  5250     0626  110B               	bcf	11,2	;volatile
  5251     0627                     i1l2520:
  5252                           
  5253                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 114:     TMR0 = timer0ReloadVa
      +                          l;
  5254     0627  0020               	movlb	0	; select bank0
  5255     0628  0830               	movf	_timer0ReloadVal,w	;volatile
  5256     0629  0095               	movwf	21	;volatile
  5257     062A                     i1l2522:
  5258                           
  5259                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 116:     if(TMR0_InterruptHand
      +                          ler)
  5260     062A  0820               	movf	_TMR0_InterruptHandler,w
  5261     062B  0421               	iorwf	_TMR0_InterruptHandler+1,w
  5262     062C  1903               	btfsc	3,2
  5263     062D  2E2F               	goto	u196_21
  5264     062E  2E30               	goto	u196_20
  5265     062F                     u196_21:
  5266     062F  2E35               	goto	i1l520
  5267     0630                     u196_20:
  5268     0630                     i1l2524:
  5269                           
  5270                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c: 117:     {;C:\yiming\work\FR68
      +                          2_TXV01.X\mcc_generated_files\tmr0.c: 118:         TMR0_InterruptHandler();
  5271     0630  0821               	movf	_TMR0_InterruptHandler+1,w
  5272     0631  008A               	movwf	10
  5273     0632  0820               	movf	_TMR0_InterruptHandler,w
  5274     0633  000A               	callw
  5275     0634  3186               	pagesel	$
  5276     0635                     i1l520:
  5277     0635  0008               	return
  5278     0636                     __end_of_TMR0_ISR:
  5279                           
  5280                           	psect	text36
  5281     0499                     __ptext36:	
  5282 ;; *************** function _LIN_timerHandler *****************
  5283 ;; Defined at:
  5284 ;;		line 250 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5298 ;;      Params:         0       0       0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0
  5300 ;;      Temps:          1       0       0       0       0       0       0       0
  5301 ;;      Totals:         1       0       0       0       0       0       0       0
  5302 ;;Total ram usage:        1 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; Hardware stack levels required when called: 3
  5305 ;; This function calls:
  5306 ;;		_LIN_sendPeriodicTx
  5307 ;;		i1_LIN_stopTimer
  5308 ;; This function is called by:
  5309 ;;		_LIN_setTimerHandler
  5310 ;;		_TMR0_ISR
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314     0499                     _LIN_timerHandler:	
  5315                           ;psect for function _LIN_timerHandler
  5316                           
  5317     0499                     i1l2456:	
  5318                           ;incstack = 0
  5319                           ; Regs used in _LIN_timerHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5320                           
  5321                           
  5322                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 252:     if(L
      +                          IN_timerRunning == 1){
  5323     0499  0020               	movlb	0	; select bank0
  5324     049A  033E               	decf	_LIN_timerRunning,w
  5325     049B  1D03               	btfss	3,2
  5326     049C  2C9E               	goto	u185_21
  5327     049D  2C9F               	goto	u185_20
  5328     049E                     u185_21:
  5329     049E  2CAC               	goto	i1l2462
  5330     049F                     u185_20:
  5331     049F                     i1l2458:
  5332                           
  5333                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 253:         
      +                          if (++LIN_timerCallBack >= LIN_timeout){
  5334     049F  3001               	movlw	1
  5335     04A0  00FD               	movwf	??_LIN_timerHandler
  5336     04A1  087D               	movf	??_LIN_timerHandler,w
  5337     04A2  07BC               	addwf	_LIN_timerCallBack,f	;volatile
  5338     04A3  0862               	movf	_LIN_timeout,w
  5339     04A4  023C               	subwf	_LIN_timerCallBack,w	;volatile
  5340     04A5  1C03               	skipc
  5341     04A6  2CA8               	goto	u186_21
  5342     04A7  2CA9               	goto	u186_20
  5343     04A8                     u186_21:
  5344     04A8  2CAC               	goto	i1l2462
  5345     04A9                     u186_20:
  5346     04A9                     i1l2460:
  5347                           
  5348                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 255:         
      +                              LIN_stopTimer();
  5349     04A9  3186  26BA  3184   	fcall	i1_LIN_stopTimer
  5350     04AC                     i1l2462:
  5351                           
  5352                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 258:     if(L
      +                          IN_enablePeriodTx == 1){
  5353     04AC  0020               	movlb	0	; select bank0
  5354     04AD  033D               	decf	_LIN_enablePeriodTx,w
  5355     04AE  1D03               	btfss	3,2
  5356     04AF  2CB1               	goto	u187_21
  5357     04B0  2CB2               	goto	u187_20
  5358     04B1                     u187_21:
  5359     04B1  2CBF               	goto	i1l215
  5360     04B2                     u187_20:
  5361     04B2                     i1l2464:
  5362                           
  5363                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 259:         
      +                          if(++LIN_periodCallBack >= LIN_period){
  5364     04B2  3001               	movlw	1
  5365     04B3  00FD               	movwf	??_LIN_timerHandler
  5366     04B4  087D               	movf	??_LIN_timerHandler,w
  5367     04B5  07BB               	addwf	_LIN_periodCallBack,f	;volatile
  5368     04B6  083F               	movf	_LIN_period,w
  5369     04B7  023B               	subwf	_LIN_periodCallBack,w	;volatile
  5370     04B8  1C03               	skipc
  5371     04B9  2CBB               	goto	u188_21
  5372     04BA  2CBC               	goto	u188_20
  5373     04BB                     u188_21:
  5374     04BB  2CBF               	goto	i1l215
  5375     04BC                     u188_20:
  5376     04BC                     i1l2466:
  5377                           
  5378                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 260:         
      +                              LIN_sendPeriodicTx();
  5379     04BC  3181  2192  3184   	fcall	_LIN_sendPeriodicTx
  5380     04BF                     i1l215:
  5381     04BF  0008               	return
  5382     04C0                     __end_of_LIN_timerHandler:
  5383                           
  5384                           	psect	text37
  5385     06CA                     __ptext37:	
  5386 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5387 ;; Defined at:
  5388 ;;		line 129 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\tmr0.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		None
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5402 ;;      Params:         0       0       0       0       0       0       0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_TMR0_Initialize
  5412 ;;		_TMR0_ISR
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416     06CA                     _TMR0_DefaultInterruptHandler:	
  5417                           ;psect for function _TMR0_DefaultInterruptHandler
  5418                           
  5419     06CA                     i1l526:	
  5420                           ;incstack = 0
  5421                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5422                           
  5423     06CA  0008               	return
  5424     06CB                     __end_of_TMR0_DefaultInterruptHandler:
  5425                           
  5426                           	psect	text38
  5427     06BA                     __ptext38:	
  5428 ;; *************** function i1_LIN_stopTimer *****************
  5429 ;; Defined at:
  5430 ;;		line 270 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;		None
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		status,2
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5444 ;;      Params:         0       0       0       0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0
  5447 ;;      Totals:         0       0       0       0       0       0       0       0
  5448 ;;Total ram usage:        0 bytes
  5449 ;; Hardware stack levels used: 1
  5450 ;; This function calls:
  5451 ;;		Nothing
  5452 ;; This function is called by:
  5453 ;;		_LIN_timerHandler
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457     06BA                     i1_LIN_stopTimer:	
  5458                           ;psect for function i1_LIN_stopTimer
  5459                           
  5460     06BA                     i1l1994:	
  5461                           ;incstack = 0
  5462                           ; Regs used in i1_LIN_stopTimer: [status,2]
  5463                           
  5464                           
  5465                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 272:     LIN_
      +                          timerCallBack = 0;
  5466     06BA  0020               	movlb	0	; select bank0
  5467     06BB  01BC               	clrf	_LIN_timerCallBack	;volatile
  5468                           
  5469                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 273:     LIN_
      +                          timerRunning = 0;
  5470     06BC  01BE               	clrf	_LIN_timerRunning
  5471     06BD                     i1l221:
  5472     06BD  0008               	return
  5473     06BE                     __end_ofi1_LIN_stopTimer:
  5474                           
  5475                           	psect	text39
  5476     0192                     __ptext39:	
  5477 ;; *************** function _LIN_sendPeriodicTx *****************
  5478 ;; Defined at:
  5479 ;;		line 300 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  periodicTx      2    7[BANK0 ] PTR const struct .
  5484 ;;		 -> NULL(0), scheduleTable(6), 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5494 ;;      Params:         0       0       0       0       0       0       0       0
  5495 ;;      Locals:         0       2       0       0       0       0       0       0
  5496 ;;      Temps:          0       3       0       0       0       0       0       0
  5497 ;;      Totals:         0       5       0       0       0       0       0       0
  5498 ;;Total ram usage:        5 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 2
  5501 ;; This function calls:
  5502 ;;		_LIN_queuePacket
  5503 ;;		___wmul
  5504 ;; This function is called by:
  5505 ;;		_LIN_timerHandler
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509     0192                     _LIN_sendPeriodicTx:	
  5510                           ;psect for function _LIN_sendPeriodicTx
  5511                           
  5512     0192                     i1l2426:	
  5513                           ;incstack = 0
  5514                           ; Regs used in _LIN_sendPeriodicTx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5515                           
  5516                           
  5517                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 301:     stat
      +                          ic volatile uint8_t scheduleIndex = 0;;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\
      +                          LINDrivers\lin_master.c: 302:     const lin_cmd_packet_t* periodicTx;;C:\yiming\work\FR6
      +                          82_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 304:     LIN_periodCallBack = 0;
  5518     0192  0020               	movlb	0	; select bank0
  5519     0193  01BB               	clrf	_LIN_periodCallBack	;volatile
  5520     0194                     i1l2428:
  5521                           
  5522                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 305:     peri
      +                          odicTx = schedule + scheduleIndex;
  5523     0194  0838               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5524     0195  00CE               	movwf	??_LIN_sendPeriodicTx
  5525     0196  01CF               	clrf	??_LIN_sendPeriodicTx+1
  5526     0197  084E               	movf	??_LIN_sendPeriodicTx,w
  5527     0198  00F0               	movwf	___wmul@multiplier
  5528     0199  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5529     019A  00F1               	movwf	___wmul@multiplier+1
  5530     019B  3006               	movlw	6
  5531     019C  00F2               	movwf	___wmul@multiplicand
  5532     019D  3000               	movlw	0
  5533     019E  00F3               	movwf	___wmul@multiplicand+1
  5534     019F  3185  254D  3181   	fcall	___wmul
  5535     01A2  0870               	movf	?___wmul,w
  5536     01A3  0020               	movlb	0	; select bank0
  5537     01A4  072C               	addwf	_schedule,w
  5538     01A5  00D1               	movwf	LIN_sendPeriodicTx@periodicTx
  5539     01A6  0871               	movf	?___wmul+1,w
  5540     01A7  3D2D               	addwfc	_schedule+1,w
  5541     01A8  00D2               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5542     01A9                     i1l2430:
  5543                           
  5544                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 307:     if(p
      +                          eriodicTx->period > 0){
  5545     01A9  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5546     01AA  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5547     01AB  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5548     01AC  00CE               	movwf	??_LIN_sendPeriodicTx
  5549     01AD  3004               	movlw	4
  5550     01AE  074E               	addwf	??_LIN_sendPeriodicTx,w
  5551     01AF  0084               	movwf	4
  5552     01B0  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5553     01B1  1803               	skipnc
  5554     01B2  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5555     01B3  0085               	movwf	5
  5556     01B4  0012               	moviw fsr0++
  5557     01B5  1903               	btfsc	3,2
  5558     01B6  29B8               	goto	u182_21
  5559     01B7  29B9               	goto	u182_20
  5560     01B8                     u182_21:
  5561     01B8  29CE               	goto	i1l2434
  5562     01B9                     u182_20:
  5563     01B9                     i1l2432:
  5564                           
  5565                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 308:         
      +                          LIN_queuePacket(periodicTx->cmd, periodicTx->data);
  5566     01B9  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5567     01BA  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5568     01BB  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5569     01BC  00CE               	movwf	??_LIN_sendPeriodicTx
  5570     01BD  3005               	movlw	5
  5571     01BE  074E               	addwf	??_LIN_sendPeriodicTx,w
  5572     01BF  0084               	movwf	4
  5573     01C0  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5574     01C1  1803               	skipnc
  5575     01C2  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5576     01C3  0085               	movwf	5
  5577     01C4  0800               	movf	0,w	;code access
  5578     01C5  00F8               	movwf	LIN_queuePacket@data
  5579     01C6  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5580     01C7  0084               	movwf	4
  5581     01C8  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5582     01C9  0085               	movwf	5
  5583     01CA  0800               	movf	0,w	;code access
  5584     01CB  3180  2052  3181   	fcall	_LIN_queuePacket
  5585     01CE                     i1l2434:
  5586                           
  5587                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 312:         
      +                          if(++scheduleIndex >= scheduleLength){
  5588     01CE  3001               	movlw	1
  5589     01CF  0020               	movlb	0	; select bank0
  5590     01D0  00CE               	movwf	??_LIN_sendPeriodicTx
  5591     01D1  084E               	movf	??_LIN_sendPeriodicTx,w
  5592     01D2  07B8               	addwf	LIN_sendPeriodicTx@scheduleIndex,f	;volatile
  5593     01D3  0840               	movf	_scheduleLength,w
  5594     01D4  0238               	subwf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5595     01D5  1C03               	skipc
  5596     01D6  29D8               	goto	u183_21
  5597     01D7  29D9               	goto	u183_20
  5598     01D8                     u183_21:
  5599     01D8  29DA               	goto	i1l2438
  5600     01D9                     u183_20:
  5601     01D9                     i1l2436:
  5602                           
  5603                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 313:         
      +                              scheduleIndex = 0;
  5604     01D9  01B8               	clrf	LIN_sendPeriodicTx@scheduleIndex	;volatile
  5605     01DA                     i1l2438:
  5606                           
  5607                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 315:         
      +                          periodicTx = schedule + scheduleIndex;
  5608     01DA  0838               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5609     01DB  00CE               	movwf	??_LIN_sendPeriodicTx
  5610     01DC  01CF               	clrf	??_LIN_sendPeriodicTx+1
  5611     01DD  084E               	movf	??_LIN_sendPeriodicTx,w
  5612     01DE  00F0               	movwf	___wmul@multiplier
  5613     01DF  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5614     01E0  00F1               	movwf	___wmul@multiplier+1
  5615     01E1  3006               	movlw	6
  5616     01E2  00F2               	movwf	___wmul@multiplicand
  5617     01E3  3000               	movlw	0
  5618     01E4  00F3               	movwf	___wmul@multiplicand+1
  5619     01E5  3185  254D  3181   	fcall	___wmul
  5620     01E8  0870               	movf	?___wmul,w
  5621     01E9  0020               	movlb	0	; select bank0
  5622     01EA  072C               	addwf	_schedule,w
  5623     01EB  00D1               	movwf	LIN_sendPeriodicTx@periodicTx
  5624     01EC  0871               	movf	?___wmul+1,w
  5625     01ED  3D2D               	addwfc	_schedule+1,w
  5626     01EE  00D2               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5627     01EF                     i1l2440:
  5628                           
  5629                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 316:     } wh
      +                          ile(periodicTx->period == 0);
  5630     01EF  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5631     01F0  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5632     01F1  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5633     01F2  00CE               	movwf	??_LIN_sendPeriodicTx
  5634     01F3  3004               	movlw	4
  5635     01F4  074E               	addwf	??_LIN_sendPeriodicTx,w
  5636     01F5  0084               	movwf	4
  5637     01F6  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5638     01F7  1803               	skipnc
  5639     01F8  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5640     01F9  0085               	movwf	5
  5641     01FA  0012               	moviw fsr0++
  5642     01FB  1903               	btfsc	3,2
  5643     01FC  29FE               	goto	u184_21
  5644     01FD  29FF               	goto	u184_20
  5645     01FE                     u184_21:
  5646     01FE  29CE               	goto	i1l2434
  5647     01FF                     u184_20:
  5648     01FF                     i1l2442:
  5649                           
  5650                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 318:     LIN_
      +                          period = periodicTx->period;
  5651     01FF  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5652     0200  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5653     0201  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5654     0202  00CE               	movwf	??_LIN_sendPeriodicTx
  5655     0203  3004               	movlw	4
  5656     0204  074E               	addwf	??_LIN_sendPeriodicTx,w
  5657     0205  0084               	movwf	4
  5658     0206  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5659     0207  1803               	skipnc
  5660     0208  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5661     0209  0085               	movwf	5
  5662     020A  0800               	movf	0,w	;code access
  5663     020B  00BF               	movwf	_LIN_period
  5664     020C                     i1l245:
  5665     020C  0008               	return
  5666     020D                     __end_of_LIN_sendPeriodicTx:
  5667                           
  5668                           	psect	text40
  5669     054D                     __ptext40:	
  5670 ;; *************** function ___wmul *****************
  5671 ;; Defined at:
  5672 ;;		line 15 in file "c:\PROGRA~1\MICROC~1\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  multiplier      2    0[COMMON] unsigned int 
  5675 ;;  multiplicand    2    2[COMMON] unsigned int 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  product         2    4[COMMON] unsigned int 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  2    0[COMMON] unsigned int 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5687 ;;      Params:         4       0       0       0       0       0       0       0
  5688 ;;      Locals:         2       0       0       0       0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0
  5690 ;;      Totals:         6       0       0       0       0       0       0       0
  5691 ;;Total ram usage:        6 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_LIN_sendPeriodicTx
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700     054D                     ___wmul:	
  5701                           ;psect for function ___wmul
  5702                           
  5703     054D                     i1l1862:	
  5704                           ;incstack = 0
  5705                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5706                           
  5707     054D  01F4               	clrf	___wmul@product
  5708     054E  01F5               	clrf	___wmul@product+1
  5709     054F                     i1l1864:
  5710     054F  1C70               	btfss	___wmul@multiplier,0
  5711     0550  2D52               	goto	u124_21
  5712     0551  2D53               	goto	u124_20
  5713     0552                     u124_21:
  5714     0552  2D57               	goto	i1l676
  5715     0553                     u124_20:
  5716     0553                     i1l1866:
  5717     0553  0872               	movf	___wmul@multiplicand,w
  5718     0554  07F4               	addwf	___wmul@product,f
  5719     0555  0873               	movf	___wmul@multiplicand+1,w
  5720     0556  3DF5               	addwfc	___wmul@product+1,f
  5721     0557                     i1l676:
  5722     0557  3001               	movlw	1
  5723     0558                     u125_25:
  5724     0558  35F2               	lslf	___wmul@multiplicand,f
  5725     0559  0DF3               	rlf	___wmul@multiplicand+1,f
  5726     055A  0B89               	decfsz	9,f
  5727     055B  2D58               	goto	u125_25
  5728     055C                     i1l1868:
  5729     055C  3001               	movlw	1
  5730     055D                     u126_25:
  5731     055D  36F1               	lsrf	___wmul@multiplier+1,f
  5732     055E  0CF0               	rrf	___wmul@multiplier,f
  5733     055F  0B89               	decfsz	9,f
  5734     0560  2D5D               	goto	u126_25
  5735     0561                     i1l1870:
  5736     0561  0870               	movf	___wmul@multiplier,w
  5737     0562  0471               	iorwf	___wmul@multiplier+1,w
  5738     0563  1D03               	btfss	3,2
  5739     0564  2D66               	goto	u127_21
  5740     0565  2D67               	goto	u127_20
  5741     0566                     u127_21:
  5742     0566  2D4F               	goto	i1l1864
  5743     0567                     u127_20:
  5744     0567                     i1l1872:
  5745     0567  0875               	movf	___wmul@product+1,w
  5746     0568  00F1               	movwf	?___wmul+1
  5747     0569  0874               	movf	___wmul@product,w
  5748     056A  00F0               	movwf	?___wmul
  5749     056B                     i1l678:
  5750     056B  0008               	return
  5751     056C                     __end_of___wmul:
  5752                           
  5753                           	psect	text41
  5754     0052                     __ptext41:	
  5755 ;; *************** function _LIN_queuePacket *****************
  5756 ;; Defined at:
  5757 ;;		line 70 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  cmd             1    wreg     unsigned char 
  5760 ;;  data            1    8[COMMON] PTR unsigned char 
  5761 ;;		 -> SW_STATE_Data(8), 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  cmd             1    0[BANK0 ] unsigned char 
  5764 ;;  i               1    1[BANK0 ] unsigned char 
  5765 ;;  tempSchedule    2    2[BANK0 ] PTR const struct .
  5766 ;;		 -> NULL(0), scheduleTable(6), 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5776 ;;      Params:         1       0       0       0       0       0       0       0
  5777 ;;      Locals:         0       4       0       0       0       0       0       0
  5778 ;;      Temps:          4       0       0       0       0       0       0       0
  5779 ;;      Totals:         5       4       0       0       0       0       0       0
  5780 ;;Total ram usage:        9 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; Hardware stack levels required when called: 1
  5783 ;; This function calls:
  5784 ;;		_LIN_calcParity
  5785 ;;		i1_LIN_getChecksum
  5786 ;;		i1_memcpy
  5787 ;;		i1_memset
  5788 ;; This function is called by:
  5789 ;;		_LIN_sendPeriodicTx
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793     0052                     _LIN_queuePacket:	
  5794                           ;psect for function _LIN_queuePacket
  5795                           
  5796                           
  5797                           ;incstack = 0
  5798                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5799                           ;LIN_queuePacket@cmd stored from wreg
  5800     0052  0020               	movlb	0	; select bank0
  5801     0053  00CA               	movwf	LIN_queuePacket@cmd
  5802     0054                     i1l2360:
  5803                           
  5804                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 71:     const
      +                           lin_cmd_packet_t* tempSchedule = schedule;
  5805     0054  082D               	movf	_schedule+1,w
  5806     0055  00CD               	movwf	LIN_queuePacket@tempSchedule+1
  5807     0056  082C               	movf	_schedule,w
  5808     0057  00CC               	movwf	LIN_queuePacket@tempSchedule
  5809     0058                     i1l2362:
  5810                           
  5811                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 73:     for(u
      +                          int8_t i = 0; i < scheduleLength; i++){
  5812     0058  01CB               	clrf	LIN_queuePacket@i
  5813     0059  286D               	goto	i1l2372
  5814     005A                     i1l2364:
  5815                           
  5816                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 74:         i
      +                          f(cmd == tempSchedule->cmd){
  5817     005A  084C               	movf	LIN_queuePacket@tempSchedule,w
  5818     005B  0084               	movwf	4
  5819     005C  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5820     005D  0085               	movwf	5
  5821     005E  0800               	movf	0,w	;code access
  5822     005F  064A               	xorwf	LIN_queuePacket@cmd,w
  5823     0060  1D03               	skipz
  5824     0061  2863               	goto	u176_21
  5825     0062  2864               	goto	u176_20
  5826     0063                     u176_21:
  5827     0063  2865               	goto	i1l2368
  5828     0064                     u176_20:
  5829     0064  2873               	goto	i1l2374
  5830     0065                     i1l2368:
  5831                           
  5832                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 77:         t
      +                          empSchedule++;
  5833     0065  3006               	movlw	6
  5834     0066  07CC               	addwf	LIN_queuePacket@tempSchedule,f
  5835     0067  3000               	movlw	0
  5836     0068  3DCD               	addwfc	LIN_queuePacket@tempSchedule+1,f
  5837     0069                     i1l2370:
  5838                           
  5839                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 78:     }
  5840     0069  3001               	movlw	1
  5841     006A  00F9               	movwf	??_LIN_queuePacket
  5842     006B  0879               	movf	??_LIN_queuePacket,w
  5843     006C  07CB               	addwf	LIN_queuePacket@i,f
  5844     006D                     i1l2372:
  5845     006D  0840               	movf	_scheduleLength,w
  5846     006E  024B               	subwf	LIN_queuePacket@i,w
  5847     006F  1C03               	skipc
  5848     0070  2872               	goto	u177_21
  5849     0071  2873               	goto	u177_20
  5850     0072                     u177_21:
  5851     0072  285A               	goto	i1l2364
  5852     0073                     u177_20:
  5853     0073                     i1l2374:
  5854                           
  5855                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 81:     memse
      +                          t(LIN_packet.rawPacket, 0, sizeof(LIN_packet.rawPacket));
  5856     0073  3000               	movlw	0
  5857     0074  00F0               	movwf	i1memset@c
  5858     0075  00F1               	movwf	i1memset@c+1
  5859     0076  300B               	movlw	11
  5860     0077  00F2               	movwf	i1memset@n
  5861     0078  3000               	movlw	0
  5862     0079  00F3               	movwf	i1memset@n+1
  5863     007A  30C4               	movlw	(low (_LIN_packet| 0))& (0+255)
  5864     007B  3185  25A1  3180   	fcall	i1_memset
  5865     007E                     i1l2376:
  5866                           
  5867                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 84:     LIN_p
      +                          acket.PID = LIN_calcParity(tempSchedule->cmd);
  5868     007E  0020               	movlb	0	; select bank0
  5869     007F  084C               	movf	LIN_queuePacket@tempSchedule,w
  5870     0080  0084               	movwf	4
  5871     0081  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5872     0082  0085               	movwf	5
  5873     0083  0800               	movf	0,w	;code access
  5874     0084  3181  210C  3180   	fcall	_LIN_calcParity
  5875     0087  0021               	movlb	1	; select bank1
  5876     0088  00C4               	movwf	_LIN_packet^(0+128)
  5877     0089                     i1l2378:
  5878                           
  5879                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 86:     if(te
      +                          mpSchedule->type == TRANSMIT){
  5880     0089  0020               	movlb	0	; select bank0
  5881     008A  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5882     008B  00FA               	movwf	??_LIN_queuePacket+1
  5883     008C  084C               	movf	LIN_queuePacket@tempSchedule,w
  5884     008D  00F9               	movwf	??_LIN_queuePacket
  5885     008E  3001               	movlw	1
  5886     008F  0779               	addwf	??_LIN_queuePacket,w
  5887     0090  0084               	movwf	4
  5888     0091  087A               	movf	??_LIN_queuePacket+1,w
  5889     0092  1803               	skipnc
  5890     0093  0A7A               	incf	??_LIN_queuePacket+1,w
  5891     0094  0085               	movwf	5
  5892     0095  0012               	moviw fsr0++
  5893     0096  1D03               	btfss	3,2
  5894     0097  2899               	goto	u178_21
  5895     0098  289A               	goto	u178_20
  5896     0099                     u178_21:
  5897     0099  28E3               	goto	i1l2390
  5898     009A                     u178_20:
  5899     009A                     i1l2380:
  5900                           
  5901                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 89:         i
      +                          f(tempSchedule->length > 0){
  5902     009A  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5903     009B  00FA               	movwf	??_LIN_queuePacket+1
  5904     009C  084C               	movf	LIN_queuePacket@tempSchedule,w
  5905     009D  00F9               	movwf	??_LIN_queuePacket
  5906     009E  3002               	movlw	2
  5907     009F  0779               	addwf	??_LIN_queuePacket,w
  5908     00A0  0084               	movwf	4
  5909     00A1  087A               	movf	??_LIN_queuePacket+1,w
  5910     00A2  1803               	skipnc
  5911     00A3  0A7A               	incf	??_LIN_queuePacket+1,w
  5912     00A4  0085               	movwf	5
  5913     00A5  0012               	moviw fsr0++
  5914     00A6  1903               	btfsc	3,2
  5915     00A7  28A9               	goto	u179_21
  5916     00A8  28AA               	goto	u179_20
  5917     00A9                     u179_21:
  5918     00A9  28D2               	goto	i1l153
  5919     00AA                     u179_20:
  5920     00AA                     i1l2382:
  5921                           
  5922                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 90:          
      +                             LIN_packet.length = tempSchedule->length;
  5923     00AA  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5924     00AB  00FA               	movwf	??_LIN_queuePacket+1
  5925     00AC  084C               	movf	LIN_queuePacket@tempSchedule,w
  5926     00AD  00F9               	movwf	??_LIN_queuePacket
  5927     00AE  3002               	movlw	2
  5928     00AF  0779               	addwf	??_LIN_queuePacket,w
  5929     00B0  0084               	movwf	4
  5930     00B1  087A               	movf	??_LIN_queuePacket+1,w
  5931     00B2  1803               	skipnc
  5932     00B3  0A7A               	incf	??_LIN_queuePacket+1,w
  5933     00B4  0085               	movwf	5
  5934     00B5  0800               	movf	0,w	;code access
  5935     00B6  0021               	movlb	1	; select bank1
  5936     00B7  00CE               	movwf	(_LIN_packet^(0+128)+10)
  5937     00B8                     i1l2384:
  5938                           
  5939                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 91:          
      +                             memcpy(LIN_packet.data, data, tempSchedule->length);
  5940     00B8  0878               	movf	LIN_queuePacket@data,w
  5941     00B9  00F0               	movwf	i1memcpy@s1
  5942     00BA  0020               	movlb	0	; select bank0
  5943     00BB  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5944     00BC  00FA               	movwf	??_LIN_queuePacket+1
  5945     00BD  084C               	movf	LIN_queuePacket@tempSchedule,w
  5946     00BE  00F9               	movwf	??_LIN_queuePacket
  5947     00BF  3002               	movlw	2
  5948     00C0  0779               	addwf	??_LIN_queuePacket,w
  5949     00C1  0084               	movwf	4
  5950     00C2  087A               	movf	??_LIN_queuePacket+1,w
  5951     00C3  1803               	skipnc
  5952     00C4  0A7A               	incf	??_LIN_queuePacket+1,w
  5953     00C5  0085               	movwf	5
  5954     00C6  0800               	movf	0,w	;code access
  5955     00C7  00FB               	movwf	??_LIN_queuePacket+2
  5956     00C8  01FC               	clrf	??_LIN_queuePacket+3
  5957     00C9  087B               	movf	??_LIN_queuePacket+2,w
  5958     00CA  00F1               	movwf	i1memcpy@n
  5959     00CB  087C               	movf	??_LIN_queuePacket+3,w
  5960     00CC  00F2               	movwf	i1memcpy@n+1
  5961     00CD  30C5               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5962     00CE  3184  24E6  3180   	fcall	i1_memcpy
  5963                           
  5964                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 92:         }
      +                           else {
  5965     00D1  28D7               	goto	i1l2388
  5966     00D2                     i1l153:
  5967                           
  5968                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 93:          
      +                             LIN_packet.length = 1;
  5969     00D2  0021               	movlb	1	; select bank1
  5970     00D3  01CE               	clrf	(_LIN_packet^(0+128)+10)
  5971     00D4  0ACE               	incf	(_LIN_packet^(0+128)+10),f
  5972     00D5                     i1l2386:
  5973                           
  5974                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 94:          
      +                             LIN_packet.data[0] = 0xAA;
  5975     00D5  30AA               	movlw	170
  5976     00D6  00C5               	movwf	(_LIN_packet^(0+128)+1)
  5977     00D7                     i1l2388:
  5978                           
  5979                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 98:         L
      +                          IN_packet.checksum = LIN_getChecksum(LIN_packet.length, LIN_packet.PID, LIN_packet.data)
      +                          ;
  5980     00D7  0021               	movlb	1	; select bank1
  5981     00D8  0844               	movf	_LIN_packet^(0+128),w
  5982     00D9  00F0               	movwf	i1LIN_getChecksum@pid
  5983     00DA  30C5               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5984     00DB  00F1               	movwf	i1LIN_getChecksum@data
  5985     00DC  084E               	movf	(_LIN_packet^(0+128)+10),w
  5986     00DD  3184  2416  3180   	fcall	i1_LIN_getChecksum
  5987     00E0  0021               	movlb	1	; select bank1
  5988     00E1  00CD               	movwf	(_LIN_packet^(0+128)+9)
  5989                           
  5990                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 100:     } el
      +                          se {
  5991     00E2  2908               	goto	i1l2392
  5992     00E3                     i1l2390:
  5993                           
  5994                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 101:         
      +                          LIN_rxPacket.rxLength = tempSchedule->length;
  5995     00E3  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5996     00E4  00FA               	movwf	??_LIN_queuePacket+1
  5997     00E5  084C               	movf	LIN_queuePacket@tempSchedule,w
  5998     00E6  00F9               	movwf	??_LIN_queuePacket
  5999     00E7  3002               	movlw	2
  6000     00E8  0779               	addwf	??_LIN_queuePacket,w
  6001     00E9  0084               	movwf	4
  6002     00EA  087A               	movf	??_LIN_queuePacket+1,w
  6003     00EB  1803               	skipnc
  6004     00EC  0A7A               	incf	??_LIN_queuePacket+1,w
  6005     00ED  0085               	movwf	5
  6006     00EE  0800               	movf	0,w	;code access
  6007     00EF  0021               	movlb	1	; select bank1
  6008     00F0  00B9               	movwf	(_LIN_rxPacket^(0+128)+1)
  6009                           
  6010                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 102:         
      +                          LIN_rxPacket.cmd = tempSchedule->cmd;
  6011     00F1  0020               	movlb	0	; select bank0
  6012     00F2  084C               	movf	LIN_queuePacket@tempSchedule,w
  6013     00F3  0084               	movwf	4
  6014     00F4  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  6015     00F5  0085               	movwf	5
  6016     00F6  0800               	movf	0,w	;code access
  6017     00F7  0021               	movlb	1	; select bank1
  6018     00F8  00B8               	movwf	_LIN_rxPacket^(0+128)
  6019                           
  6020                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 103:         
      +                          LIN_rxPacket.timeout = tempSchedule->timeout;
  6021     00F9  0020               	movlb	0	; select bank0
  6022     00FA  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  6023     00FB  00FA               	movwf	??_LIN_queuePacket+1
  6024     00FC  084C               	movf	LIN_queuePacket@tempSchedule,w
  6025     00FD  00F9               	movwf	??_LIN_queuePacket
  6026     00FE  3003               	movlw	3
  6027     00FF  0779               	addwf	??_LIN_queuePacket,w
  6028     0100  0084               	movwf	4
  6029     0101  087A               	movf	??_LIN_queuePacket+1,w
  6030     0102  1803               	skipnc
  6031     0103  0A7A               	incf	??_LIN_queuePacket+1,w
  6032     0104  0085               	movwf	5
  6033     0105  0800               	movf	0,w	;code access
  6034     0106  0021               	movlb	1	; select bank1
  6035     0107  00C3               	movwf	(_LIN_rxPacket^(0+128)+11)
  6036     0108                     i1l2392:
  6037                           
  6038                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 106:     LIN_
      +                          txReady = 1;
  6039     0108  0020               	movlb	0	; select bank0
  6040     0109  01C1               	clrf	_LIN_txReady
  6041     010A  0AC1               	incf	_LIN_txReady,f
  6042     010B                     i1l156:
  6043     010B  0008               	return
  6044     010C                     __end_of_LIN_queuePacket:
  6045                           
  6046                           	psect	text42
  6047     05A1                     __ptext42:	
  6048 ;; *************** function i1_memset *****************
  6049 ;; Defined at:
  6050 ;;		line 3 in file "c:\PROGRA~1\MICROC~1\xc8\v2.45\pic\sources\c99\common\memset.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  dest            1    wreg     PTR void 
  6053 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6054 ;;  c               2    0[COMMON] int 
  6055 ;;  n               2    2[COMMON] unsigned int 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  dest            1    5[COMMON] PTR void 
  6058 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6059 ;;  p               1    6[COMMON] PTR unsigned char 
  6060 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  2    0[COMMON] PTR void 
  6063 ;; Registers used:
  6064 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6070 ;;      Params:         4       0       0       0       0       0       0       0
  6071 ;;      Locals:         2       0       0       0       0       0       0       0
  6072 ;;      Temps:          1       0       0       0       0       0       0       0
  6073 ;;      Totals:         7       0       0       0       0       0       0       0
  6074 ;;Total ram usage:        7 bytes
  6075 ;; Hardware stack levels used: 1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_LIN_queuePacket
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083     05A1                     i1_memset:	
  6084                           ;psect for function i1_memset
  6085                           
  6086                           
  6087                           ;incstack = 0
  6088                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6089                           ;i1memset@dest stored from wreg
  6090     05A1  00F5               	movwf	i1memset@dest
  6091     05A2                     i1l1798:
  6092     05A2  0875               	movf	i1memset@dest,w
  6093     05A3  00F6               	movwf	i1memset@p
  6094     05A4  2DAE               	goto	i1l1804
  6095     05A5                     i1l1800:
  6096     05A5  0876               	movf	i1memset@p,w
  6097     05A6  0086               	movwf	6
  6098     05A7  0187               	clrf	7
  6099     05A8  0870               	movf	i1memset@c,w
  6100     05A9  0081               	movwf	1
  6101     05AA                     i1l1802:
  6102     05AA  3001               	movlw	1
  6103     05AB  00F4               	movwf	??i1_memset
  6104     05AC  0874               	movf	??i1_memset,w
  6105     05AD  07F6               	addwf	i1memset@p,f
  6106     05AE                     i1l1804:
  6107     05AE  3001               	movlw	1
  6108     05AF  02F2               	subwf	i1memset@n,f
  6109     05B0  3000               	movlw	0
  6110     05B1  3BF3               	subwfb	i1memset@n+1,f
  6111     05B2  0A72               	incf	i1memset@n,w
  6112     05B3  1D03               	skipz
  6113     05B4  2DB9               	goto	u117_21
  6114     05B5  0A73               	incf	i1memset@n+1,w
  6115     05B6  1D03               	btfss	3,2
  6116     05B7  2DB9               	goto	u117_21
  6117     05B8  2DBA               	goto	u117_20
  6118     05B9                     u117_21:
  6119     05B9  2DA5               	goto	i1l1800
  6120     05BA                     u117_20:
  6121     05BA                     i1l1144:
  6122     05BA  0008               	return
  6123     05BB                     __end_ofi1_memset:
  6124                           
  6125                           	psect	text43
  6126     04E6                     __ptext43:	
  6127 ;; *************** function i1_memcpy *****************
  6128 ;; Defined at:
  6129 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  d1              1    wreg     PTR void 
  6132 ;;		 -> LIN_packet(11), processLIN@tempRxData(8), 
  6133 ;;  s1              1    0[COMMON] PTR const void 
  6134 ;;		 -> LIN_rxPacket(12), SW_STATE_Data(8), 
  6135 ;;  n               2    1[COMMON] unsigned int 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  d1              1    4[COMMON] PTR void 
  6138 ;;		 -> LIN_packet(11), processLIN@tempRxData(8), 
  6139 ;;  s               1    7[COMMON] PTR const unsigned char 
  6140 ;;		 -> LIN_rxPacket(12), SW_STATE_Data(8), 
  6141 ;;  d               1    6[COMMON] PTR unsigned char 
  6142 ;;		 -> LIN_packet(11), processLIN@tempRxData(8), 
  6143 ;;  tmp             1    5[COMMON] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  2    0[COMMON] PTR void 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6153 ;;      Params:         3       0       0       0       0       0       0       0
  6154 ;;      Locals:         4       0       0       0       0       0       0       0
  6155 ;;      Temps:          1       0       0       0       0       0       0       0
  6156 ;;      Totals:         8       0       0       0       0       0       0       0
  6157 ;;Total ram usage:        8 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_LIN_queuePacket
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166     04E6                     i1_memcpy:	
  6167                           ;psect for function i1_memcpy
  6168                           
  6169                           
  6170                           ;incstack = 0
  6171                           ; Regs used in i1_memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6172                           ;i1memcpy@d1 stored from wreg
  6173     04E6  00F4               	movwf	i1memcpy@d1
  6174     04E7                     i1l2350:
  6175     04E7  0870               	movf	i1memcpy@s1,w
  6176     04E8  00F7               	movwf	i1memcpy@s
  6177     04E9  0874               	movf	i1memcpy@d1,w
  6178     04EA  00F6               	movwf	i1memcpy@d
  6179     04EB  2CFE               	goto	i1l1135
  6180     04EC                     i1l2352:
  6181     04EC  0877               	movf	i1memcpy@s,w
  6182     04ED  0086               	movwf	6
  6183     04EE  0187               	clrf	7
  6184     04EF  0801               	movf	1,w
  6185     04F0  00F5               	movwf	i1memcpy@tmp
  6186     04F1                     i1l2354:
  6187     04F1  3001               	movlw	1
  6188     04F2  00F3               	movwf	??i1_memcpy
  6189     04F3  0873               	movf	??i1_memcpy,w
  6190     04F4  07F7               	addwf	i1memcpy@s,f
  6191     04F5                     i1l2356:
  6192     04F5  0876               	movf	i1memcpy@d,w
  6193     04F6  0086               	movwf	6
  6194     04F7  0187               	clrf	7
  6195     04F8  0875               	movf	i1memcpy@tmp,w
  6196     04F9  0081               	movwf	1
  6197     04FA  3001               	movlw	1
  6198     04FB  00F3               	movwf	??i1_memcpy
  6199     04FC  0873               	movf	??i1_memcpy,w
  6200     04FD  07F6               	addwf	i1memcpy@d,f
  6201     04FE                     i1l1135:
  6202     04FE  3001               	movlw	1
  6203     04FF  02F1               	subwf	i1memcpy@n,f
  6204     0500  3000               	movlw	0
  6205     0501  3BF2               	subwfb	i1memcpy@n+1,f
  6206     0502  0A71               	incf	i1memcpy@n,w
  6207     0503  1D03               	skipz
  6208     0504  2D09               	goto	u175_21
  6209     0505  0A72               	incf	i1memcpy@n+1,w
  6210     0506  1D03               	btfss	3,2
  6211     0507  2D09               	goto	u175_21
  6212     0508  2D0A               	goto	u175_20
  6213     0509                     u175_21:
  6214     0509  2CEC               	goto	i1l2352
  6215     050A                     u175_20:
  6216     050A                     i1l1138:
  6217     050A  0008               	return
  6218     050B                     __end_ofi1_memcpy:
  6219                           
  6220                           	psect	text44
  6221     0416                     __ptext44:	
  6222 ;; *************** function i1_LIN_getChecksum *****************
  6223 ;; Defined at:
  6224 ;;		line 230 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  length          1    wreg     unsigned char 
  6227 ;;  pid             1    0[COMMON] unsigned char 
  6228 ;;  data            1    1[COMMON] PTR unsigned char 
  6229 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  length          1    4[COMMON] unsigned char 
  6232 ;;  checksum        2    6[COMMON] unsigned short 
  6233 ;;  i               1    5[COMMON] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      unsigned char 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6243 ;;      Params:         2       0       0       0       0       0       0       0
  6244 ;;      Locals:         4       0       0       0       0       0       0       0
  6245 ;;      Temps:          2       0       0       0       0       0       0       0
  6246 ;;      Totals:         8       0       0       0       0       0       0       0
  6247 ;;Total ram usage:        8 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; This function calls:
  6250 ;;		Nothing
  6251 ;; This function is called by:
  6252 ;;		_LIN_queuePacket
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256     0416                     i1_LIN_getChecksum:	
  6257                           ;psect for function i1_LIN_getChecksum
  6258                           
  6259                           
  6260                           ;incstack = 0
  6261                           ; Regs used in i1_LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  6262                           ;i1LIN_getChecksum@length stored from wreg
  6263     0416  00F4               	movwf	i1LIN_getChecksum@length
  6264     0417                     i1l1770:
  6265                           
  6266                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 231:     uint
      +                          16_t checksum = pid;
  6267     0417  0870               	movf	i1LIN_getChecksum@pid,w
  6268     0418  00F2               	movwf	??i1_LIN_getChecksum
  6269     0419  01F3               	clrf	??i1_LIN_getChecksum+1
  6270     041A  0872               	movf	??i1_LIN_getChecksum,w
  6271     041B  00F6               	movwf	i1LIN_getChecksum@checksum
  6272     041C  0873               	movf	??i1_LIN_getChecksum+1,w
  6273     041D  00F7               	movwf	i1LIN_getChecksum@checksum+1
  6274     041E                     i1l1772:
  6275                           
  6276                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 233:     for 
      +                          (uint8_t i = 0; i < length; i++){
  6277     041E  01F5               	clrf	i1LIN_getChecksum@i
  6278     041F  2C3F               	goto	i1l1784
  6279     0420                     i1l1774:
  6280                           
  6281                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 234:         
      +                          checksum = checksum + *data++;
  6282     0420  0871               	movf	i1LIN_getChecksum@data,w
  6283     0421  0086               	movwf	6
  6284     0422  0187               	clrf	7
  6285     0423  0801               	movf	1,w
  6286     0424  0776               	addwf	i1LIN_getChecksum@checksum,w
  6287     0425  00F6               	movwf	i1LIN_getChecksum@checksum
  6288     0426  0877               	movf	i1LIN_getChecksum@checksum+1,w
  6289     0427  1803               	skipnc
  6290     0428  0A77               	incf	i1LIN_getChecksum@checksum+1,w
  6291     0429  00F7               	movwf	i1LIN_getChecksum@checksum+1
  6292     042A                     i1l1776:
  6293     042A  3001               	movlw	1
  6294     042B  00F2               	movwf	??i1_LIN_getChecksum
  6295     042C  0872               	movf	??i1_LIN_getChecksum,w
  6296     042D  07F1               	addwf	i1LIN_getChecksum@data,f
  6297     042E                     i1l1778:
  6298                           
  6299                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 235:         
      +                          if(checksum > 0xFF)
  6300     042E  3001               	movlw	1
  6301     042F  0277               	subwf	i1LIN_getChecksum@checksum+1,w
  6302     0430  3000               	movlw	0
  6303     0431  1903               	skipnz
  6304     0432  0276               	subwf	i1LIN_getChecksum@checksum,w
  6305     0433  1C03               	skipc
  6306     0434  2C36               	goto	u114_21
  6307     0435  2C37               	goto	u114_20
  6308     0436                     u114_21:
  6309     0436  2C3B               	goto	i1l1782
  6310     0437                     u114_20:
  6311     0437                     i1l1780:
  6312                           
  6313                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 236:         
      +                              checksum -= 0xFF;
  6314     0437  30FF               	movlw	255
  6315     0438  02F6               	subwf	i1LIN_getChecksum@checksum,f
  6316     0439  3000               	movlw	0
  6317     043A  3BF7               	subwfb	i1LIN_getChecksum@checksum+1,f
  6318     043B                     i1l1782:
  6319                           
  6320                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 237:     }
  6321     043B  3001               	movlw	1
  6322     043C  00F2               	movwf	??i1_LIN_getChecksum
  6323     043D  0872               	movf	??i1_LIN_getChecksum,w
  6324     043E  07F5               	addwf	i1LIN_getChecksum@i,f
  6325     043F                     i1l1784:
  6326     043F  0874               	movf	i1LIN_getChecksum@length,w
  6327     0440  0275               	subwf	i1LIN_getChecksum@i,w
  6328     0441  1C03               	skipc
  6329     0442  2C44               	goto	u115_21
  6330     0443  2C45               	goto	u115_20
  6331     0444                     u115_21:
  6332     0444  2C20               	goto	i1l1774
  6333     0445                     u115_20:
  6334     0445                     i1l204:
  6335                           
  6336                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 238:     chec
      +                          ksum = ~checksum;
  6337     0445  09F6               	comf	i1LIN_getChecksum@checksum,f
  6338     0446  09F7               	comf	i1LIN_getChecksum@checksum+1,f
  6339     0447                     i1l1786:
  6340                           
  6341                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 240:     retu
      +                          rn (uint8_t)checksum;
  6342     0447  0876               	movf	i1LIN_getChecksum@checksum,w
  6343     0448                     i1l205:
  6344     0448  0008               	return
  6345     0449                     __end_ofi1_LIN_getChecksum:
  6346                           
  6347                           	psect	text45
  6348     010C                     __ptext45:	
  6349 ;; *************** function _LIN_calcParity *****************
  6350 ;; Defined at:
  6351 ;;		line 212 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  CMD             1    wreg     unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  CMD             1    1[COMMON] unsigned char 
  6356 ;;  PID             1    2[COMMON] struct .
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      unsigned char 
  6359 ;; Registers used:
  6360 ;;		wreg, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6366 ;;      Params:         0       0       0       0       0       0       0       0
  6367 ;;      Locals:         2       0       0       0       0       0       0       0
  6368 ;;      Temps:          1       0       0       0       0       0       0       0
  6369 ;;      Totals:         3       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        3 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_LIN_queuePacket
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379     010C                     _LIN_calcParity:	
  6380                           ;psect for function _LIN_calcParity
  6381                           
  6382                           
  6383                           ;incstack = 0
  6384                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  6385                           ;LIN_calcParity@CMD stored from wreg
  6386     010C  00F1               	movwf	LIN_calcParity@CMD
  6387     010D                     i1l1760:
  6388                           
  6389                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 213:     lin_
      +                          pid_t PID;;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 214
      +                          :     PID.rawPID = CMD;
  6390     010D  0871               	movf	LIN_calcParity@CMD,w
  6391     010E  00F2               	movwf	LIN_calcParity@PID
  6392                           
  6393                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 219:     PID.
      +                          P0 = PID.ID0 ^ PID.ID1;
  6394     010F  18F2               	btfsc	LIN_calcParity@PID,1
  6395     0110  2912               	goto	u88_21
  6396     0111  2914               	goto	u88_20
  6397     0112                     u88_21:
  6398     0112  3001               	movlw	1
  6399     0113  2915               	goto	u88_22
  6400     0114                     u88_20:
  6401     0114  3000               	movlw	0
  6402     0115                     u88_22:
  6403     0115  00F0               	movwf	??_LIN_calcParity
  6404     0116  1872               	btfsc	LIN_calcParity@PID,0
  6405     0117  2919               	goto	u89_21
  6406     0118  291B               	goto	u89_20
  6407     0119                     u89_21:
  6408     0119  3001               	movlw	1
  6409     011A  291C               	goto	u89_22
  6410     011B                     u89_20:
  6411     011B  3000               	movlw	0
  6412     011C                     u89_22:
  6413     011C  0670               	xorwf	??_LIN_calcParity,w
  6414     011D  1D03               	skipz
  6415     011E  2920               	goto	u90_21
  6416     011F  2922               	goto	u90_20
  6417     0120                     u90_21:
  6418     0120  1772               	bsf	LIN_calcParity@PID,6
  6419     0121  2923               	goto	u91_24
  6420     0122                     u90_20:
  6421     0122  1372               	bcf	LIN_calcParity@PID,6
  6422     0123                     u91_24:
  6423                           
  6424                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 220:     PID.
      +                          P0 = PID.P0 ^ PID.ID2;
  6425     0123  1972               	btfsc	LIN_calcParity@PID,2
  6426     0124  2926               	goto	u92_21
  6427     0125  2928               	goto	u92_20
  6428     0126                     u92_21:
  6429     0126  3001               	movlw	1
  6430     0127  2929               	goto	u92_22
  6431     0128                     u92_20:
  6432     0128  3000               	movlw	0
  6433     0129                     u92_22:
  6434     0129  00F0               	movwf	??_LIN_calcParity
  6435     012A  1B72               	btfsc	LIN_calcParity@PID,6
  6436     012B  292D               	goto	u93_21
  6437     012C  292F               	goto	u93_20
  6438     012D                     u93_21:
  6439     012D  3001               	movlw	1
  6440     012E  2930               	goto	u93_22
  6441     012F                     u93_20:
  6442     012F  3000               	movlw	0
  6443     0130                     u93_22:
  6444     0130  0670               	xorwf	??_LIN_calcParity,w
  6445     0131  1D03               	skipz
  6446     0132  2934               	goto	u94_21
  6447     0133  2936               	goto	u94_20
  6448     0134                     u94_21:
  6449     0134  1772               	bsf	LIN_calcParity@PID,6
  6450     0135  2937               	goto	u95_24
  6451     0136                     u94_20:
  6452     0136  1372               	bcf	LIN_calcParity@PID,6
  6453     0137                     u95_24:
  6454                           
  6455                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 221:     PID.
      +                          P0 = PID.P0 ^ PID.ID4;
  6456     0137  1A72               	btfsc	LIN_calcParity@PID,4
  6457     0138  293A               	goto	u96_21
  6458     0139  293C               	goto	u96_20
  6459     013A                     u96_21:
  6460     013A  3001               	movlw	1
  6461     013B  293D               	goto	u96_22
  6462     013C                     u96_20:
  6463     013C  3000               	movlw	0
  6464     013D                     u96_22:
  6465     013D  00F0               	movwf	??_LIN_calcParity
  6466     013E  1B72               	btfsc	LIN_calcParity@PID,6
  6467     013F  2941               	goto	u97_21
  6468     0140  2943               	goto	u97_20
  6469     0141                     u97_21:
  6470     0141  3001               	movlw	1
  6471     0142  2944               	goto	u97_22
  6472     0143                     u97_20:
  6473     0143  3000               	movlw	0
  6474     0144                     u97_22:
  6475     0144  0670               	xorwf	??_LIN_calcParity,w
  6476     0145  1D03               	skipz
  6477     0146  2948               	goto	u98_21
  6478     0147  294A               	goto	u98_20
  6479     0148                     u98_21:
  6480     0148  1772               	bsf	LIN_calcParity@PID,6
  6481     0149  294B               	goto	u99_24
  6482     014A                     u98_20:
  6483     014A  1372               	bcf	LIN_calcParity@PID,6
  6484     014B                     u99_24:
  6485                           
  6486                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 222:     PID.
      +                          P1 = PID.ID1 ^ PID.ID3;
  6487     014B  19F2               	btfsc	LIN_calcParity@PID,3
  6488     014C  294E               	goto	u100_21
  6489     014D  2950               	goto	u100_20
  6490     014E                     u100_21:
  6491     014E  3001               	movlw	1
  6492     014F  2951               	goto	u100_22
  6493     0150                     u100_20:
  6494     0150  3000               	movlw	0
  6495     0151                     u100_22:
  6496     0151  00F0               	movwf	??_LIN_calcParity
  6497     0152  18F2               	btfsc	LIN_calcParity@PID,1
  6498     0153  2955               	goto	u101_21
  6499     0154  2957               	goto	u101_20
  6500     0155                     u101_21:
  6501     0155  3001               	movlw	1
  6502     0156  2958               	goto	u101_22
  6503     0157                     u101_20:
  6504     0157  3000               	movlw	0
  6505     0158                     u101_22:
  6506     0158  0670               	xorwf	??_LIN_calcParity,w
  6507     0159  1D03               	skipz
  6508     015A  295C               	goto	u102_21
  6509     015B  295E               	goto	u102_20
  6510     015C                     u102_21:
  6511     015C  17F2               	bsf	LIN_calcParity@PID,7
  6512     015D  295F               	goto	u103_24
  6513     015E                     u102_20:
  6514     015E  13F2               	bcf	LIN_calcParity@PID,7
  6515     015F                     u103_24:
  6516                           
  6517                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 223:     PID.
      +                          P1 = PID.P1 ^ PID.ID4;
  6518     015F  1A72               	btfsc	LIN_calcParity@PID,4
  6519     0160  2962               	goto	u104_21
  6520     0161  2964               	goto	u104_20
  6521     0162                     u104_21:
  6522     0162  3001               	movlw	1
  6523     0163  2965               	goto	u104_22
  6524     0164                     u104_20:
  6525     0164  3000               	movlw	0
  6526     0165                     u104_22:
  6527     0165  00F0               	movwf	??_LIN_calcParity
  6528     0166  1BF2               	btfsc	LIN_calcParity@PID,7
  6529     0167  2969               	goto	u105_21
  6530     0168  296B               	goto	u105_20
  6531     0169                     u105_21:
  6532     0169  3001               	movlw	1
  6533     016A  296C               	goto	u105_22
  6534     016B                     u105_20:
  6535     016B  3000               	movlw	0
  6536     016C                     u105_22:
  6537     016C  0670               	xorwf	??_LIN_calcParity,w
  6538     016D  1D03               	skipz
  6539     016E  2970               	goto	u106_21
  6540     016F  2972               	goto	u106_20
  6541     0170                     u106_21:
  6542     0170  17F2               	bsf	LIN_calcParity@PID,7
  6543     0171  2973               	goto	u107_24
  6544     0172                     u106_20:
  6545     0172  13F2               	bcf	LIN_calcParity@PID,7
  6546     0173                     u107_24:
  6547                           
  6548                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 224:     PID.
      +                          P1 = PID.P1 ^ PID.ID5;
  6549     0173  1AF2               	btfsc	LIN_calcParity@PID,5
  6550     0174  2976               	goto	u108_21
  6551     0175  2978               	goto	u108_20
  6552     0176                     u108_21:
  6553     0176  3001               	movlw	1
  6554     0177  2979               	goto	u108_22
  6555     0178                     u108_20:
  6556     0178  3000               	movlw	0
  6557     0179                     u108_22:
  6558     0179  00F0               	movwf	??_LIN_calcParity
  6559     017A  1BF2               	btfsc	LIN_calcParity@PID,7
  6560     017B  297D               	goto	u109_21
  6561     017C  297F               	goto	u109_20
  6562     017D                     u109_21:
  6563     017D  3001               	movlw	1
  6564     017E  2980               	goto	u109_22
  6565     017F                     u109_20:
  6566     017F  3000               	movlw	0
  6567     0180                     u109_22:
  6568     0180  0670               	xorwf	??_LIN_calcParity,w
  6569     0181  1D03               	skipz
  6570     0182  2984               	goto	u110_21
  6571     0183  2986               	goto	u110_20
  6572     0184                     u110_21:
  6573     0184  17F2               	bsf	LIN_calcParity@PID,7
  6574     0185  2987               	goto	u111_24
  6575     0186                     u110_20:
  6576     0186  13F2               	bcf	LIN_calcParity@PID,7
  6577     0187                     u111_24:
  6578     0187                     i1l1762:
  6579                           
  6580                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 225:     PID.
      +                          P1 = ~PID.P1;
  6581     0187  1003               	clrc
  6582     0188  1FF2               	btfss	LIN_calcParity@PID,7
  6583     0189  1403               	setc
  6584     018A  1803               	btfsc	3,0
  6585     018B  298D               	goto	u112_21
  6586     018C  298F               	goto	u112_20
  6587     018D                     u112_21:
  6588     018D  17F2               	bsf	LIN_calcParity@PID,7
  6589     018E  2990               	goto	u113_24
  6590     018F                     u112_20:
  6591     018F  13F2               	bcf	LIN_calcParity@PID,7
  6592     0190                     u113_24:
  6593     0190                     i1l1764:
  6594                           
  6595                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\LINDrivers\lin_master.c: 227:     retu
      +                          rn PID.rawPID;
  6596     0190  0872               	movf	LIN_calcParity@PID,w
  6597     0191                     i1l198:
  6598     0191  0008               	return
  6599     0192                     __end_of_LIN_calcParity:
  6600                           
  6601                           	psect	text46
  6602     050B                     __ptext46:	
  6603 ;; *************** function _EUSART_Transmit_ISR *****************
  6604 ;; Defined at:
  6605 ;;		line 197 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      void 
  6612 ;; Registers used:
  6613 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6619 ;;      Params:         0       0       0       0       0       0       0       0
  6620 ;;      Locals:         0       0       0       0       0       0       0       0
  6621 ;;      Temps:          1       0       0       0       0       0       0       0
  6622 ;;      Totals:         1       0       0       0       0       0       0       0
  6623 ;;Total ram usage:        1 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; This function calls:
  6626 ;;		Nothing
  6627 ;; This function is called by:
  6628 ;;		_EUSART_Initialize
  6629 ;;		_INTERRUPT_InterruptManager
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633     050B                     _EUSART_Transmit_ISR:	
  6634                           ;psect for function _EUSART_Transmit_ISR
  6635                           
  6636     050B                     i1l2202:	
  6637                           ;incstack = 0
  6638                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6639                           
  6640                           
  6641                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 201:     if(sizeof(eusartTxB
      +                          uffer) > eusartTxBufferRemaining)
  6642     050B  3008               	movlw	8
  6643     050C  0020               	movlb	0	; select bank0
  6644     050D  0235               	subwf	_eusartTxBufferRemaining,w	;volatile
  6645     050E  1803               	skipnc
  6646     050F  2D11               	goto	u157_21
  6647     0510  2D12               	goto	u157_20
  6648     0511                     u157_21:
  6649     0511  2D2A               	goto	i1l351
  6650     0512                     u157_20:
  6651     0512                     i1l2204:
  6652                           
  6653                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 202:     {;C:\yiming\work\FR
      +                          682_TXV01.X\mcc_generated_files\eusart.c: 203:         TXREG = eusartTxBuffer[eusartTxTa
      +                          il++];
  6654     0512  0836               	movf	_eusartTxTail,w
  6655     0513  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6656     0514  0086               	movwf	6
  6657     0515  0187               	clrf	7
  6658     0516  0801               	movf	1,w
  6659     0517  0023               	movlb	3	; select bank3
  6660     0518  009A               	movwf	26	;volatile
  6661     0519                     i1l2206:
  6662     0519  3001               	movlw	1
  6663     051A  00F0               	movwf	??_EUSART_Transmit_ISR
  6664     051B  0870               	movf	??_EUSART_Transmit_ISR,w
  6665     051C  0020               	movlb	0	; select bank0
  6666     051D  07B6               	addwf	_eusartTxTail,f	;volatile
  6667     051E                     i1l2208:
  6668                           
  6669                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 204:         if(sizeof(eusar
      +                          tTxBuffer) <= eusartTxTail)
  6670     051E  3008               	movlw	8
  6671     051F  0236               	subwf	_eusartTxTail,w	;volatile
  6672     0520  1C03               	skipc
  6673     0521  2D23               	goto	u158_21
  6674     0522  2D24               	goto	u158_20
  6675     0523                     u158_21:
  6676     0523  2D25               	goto	i1l2212
  6677     0524                     u158_20:
  6678     0524                     i1l2210:
  6679                           
  6680                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 205:         {;C:\yiming\wor
      +                          k\FR682_TXV01.X\mcc_generated_files\eusart.c: 206:             eusartTxTail = 0;
  6681     0524  01B6               	clrf	_eusartTxTail	;volatile
  6682     0525                     i1l2212:
  6683                           
  6684                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 208:         eusartTxBufferR
      +                          emaining++;
  6685     0525  3001               	movlw	1
  6686     0526  00F0               	movwf	??_EUSART_Transmit_ISR
  6687     0527  0870               	movf	??_EUSART_Transmit_ISR,w
  6688     0528  07B5               	addwf	_eusartTxBufferRemaining,f	;volatile
  6689                           
  6690                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 209:     }
  6691     0529  2D2C               	goto	i1l354
  6692     052A                     i1l351:	
  6693                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 210:     else
  6694                           
  6695                           
  6696                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 211:     {;C:\yiming\work\FR
      +                          682_TXV01.X\mcc_generated_files\eusart.c: 212:         PIE1bits.TXIE = 0;
  6697     052A  0021               	movlb	1	; select bank1
  6698     052B  1211               	bcf	17,4	;volatile
  6699     052C                     i1l354:
  6700     052C  0008               	return
  6701     052D                     __end_of_EUSART_Transmit_ISR:
  6702                           
  6703                           	psect	text47
  6704     0340                     __ptext47:	
  6705 ;; *************** function _EUSART_Receive_ISR *****************
  6706 ;; Defined at:
  6707 ;;		line 216 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6721 ;;      Params:         0       0       0       0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0
  6724 ;;      Totals:         0       0       0       0       0       0       0       0
  6725 ;;Total ram usage:        0 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 2
  6728 ;; This function calls:
  6729 ;;		NULL
  6730 ;;		_EUSART_DefaultErrorHandler
  6731 ;;		_EUSART_DefaultFramingErrorHandler
  6732 ;;		_EUSART_DefaultOverrunErrorHandler
  6733 ;;		_EUSART_RxDataHandler
  6734 ;; This function is called by:
  6735 ;;		_EUSART_Initialize
  6736 ;;		_INTERRUPT_InterruptManager
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740     0340                     _EUSART_Receive_ISR:	
  6741                           ;psect for function _EUSART_Receive_ISR
  6742                           
  6743     0340                     i1l2214:	
  6744                           ;incstack = 0
  6745                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6746                           
  6747                           
  6748                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 219:     eusartRxStatusBuffe
      +                          r[eusartRxHead].status = 0;
  6749     0340  0020               	movlb	0	; select bank0
  6750     0341  0834               	movf	_eusartRxHead,w	;volatile
  6751     0342  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6752     0343  0086               	movwf	6
  6753     0344  0187               	clrf	7
  6754     0345  0181               	clrf	1
  6755     0346                     i1l2216:
  6756                           
  6757                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 221:     if(RCSTAbits.FERR){
  6758     0346  0023               	movlb	3	; select bank3
  6759     0347  1D1D               	btfss	29,2	;volatile
  6760     0348  2B4A               	goto	u159_21
  6761     0349  2B4B               	goto	u159_20
  6762     034A                     u159_21:
  6763     034A  2B56               	goto	i1l2222
  6764     034B                     u159_20:
  6765     034B                     i1l2218:
  6766                           
  6767                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 222:         eusartRxStatusB
      +                          uffer[eusartRxHead].ferr = 1;
  6768     034B  0020               	movlb	0	; select bank0
  6769     034C  0834               	movf	_eusartRxHead,w	;volatile
  6770     034D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6771     034E  0086               	movwf	6
  6772     034F  0187               	clrf	7
  6773     0350  1481               	bsf	1,1
  6774     0351                     i1l2220:
  6775                           
  6776                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 223:         EUSART_FramingE
      +                          rrorHandler();
  6777     0351  0827               	movf	_EUSART_FramingErrorHandler+1,w
  6778     0352  008A               	movwf	10
  6779     0353  0826               	movf	_EUSART_FramingErrorHandler,w
  6780     0354  000A               	callw
  6781     0355  3183               	pagesel	$
  6782     0356                     i1l2222:
  6783                           
  6784                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 226:     if(RCSTAbits.OERR){
  6785     0356  0023               	movlb	3	; select bank3
  6786     0357  1C9D               	btfss	29,1	;volatile
  6787     0358  2B5A               	goto	u160_21
  6788     0359  2B5B               	goto	u160_20
  6789     035A                     u160_21:
  6790     035A  2B66               	goto	i1l2228
  6791     035B                     u160_20:
  6792     035B                     i1l2224:
  6793                           
  6794                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 227:         eusartRxStatusB
      +                          uffer[eusartRxHead].oerr = 1;
  6795     035B  0020               	movlb	0	; select bank0
  6796     035C  0834               	movf	_eusartRxHead,w	;volatile
  6797     035D  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6798     035E  0086               	movwf	6
  6799     035F  0187               	clrf	7
  6800     0360  1501               	bsf	1,2
  6801     0361                     i1l2226:
  6802                           
  6803                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 228:         EUSART_OverrunE
      +                          rrorHandler();
  6804     0361  0825               	movf	_EUSART_OverrunErrorHandler+1,w
  6805     0362  008A               	movwf	10
  6806     0363  0824               	movf	_EUSART_OverrunErrorHandler,w
  6807     0364  000A               	callw
  6808     0365  3183               	pagesel	$
  6809     0366                     i1l2228:
  6810                           
  6811                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 231:     if(eusartRxStatusBu
      +                          ffer[eusartRxHead].status){
  6812     0366  0020               	movlb	0	; select bank0
  6813     0367  0834               	movf	_eusartRxHead,w	;volatile
  6814     0368  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6815     0369  0086               	movwf	6
  6816     036A  0187               	clrf	7
  6817     036B  0801               	movf	1,w
  6818     036C  1903               	btfsc	3,2
  6819     036D  2B6F               	goto	u161_21
  6820     036E  2B70               	goto	u161_20
  6821     036F                     u161_21:
  6822     036F  2B76               	goto	i1l2232
  6823     0370                     u161_20:
  6824     0370                     i1l2230:
  6825                           
  6826                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 232:         EUSART_ErrorHan
      +                          dler();
  6827     0370  0823               	movf	_EUSART_ErrorHandler+1,w
  6828     0371  008A               	movwf	10
  6829     0372  0822               	movf	_EUSART_ErrorHandler,w
  6830     0373  000A               	callw
  6831     0374  3183               	pagesel	$
  6832                           
  6833                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 233:     } else {
  6834     0375  2B79               	goto	i1l361
  6835     0376                     i1l2232:
  6836                           
  6837                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 234:         EUSART_RxDataHa
      +                          ndler();
  6838     0376  3185  25BB  3183   	fcall	_EUSART_RxDataHandler
  6839     0379                     i1l361:
  6840     0379  0008               	return
  6841     037A                     __end_of_EUSART_Receive_ISR:
  6842                           
  6843                           	psect	text48
  6844     06BE                     __ptext48:	
  6845 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6846 ;; Defined at:
  6847 ;;		line 252 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		None
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6861 ;;      Params:         0       0       0       0       0       0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0
  6864 ;;      Totals:         0       0       0       0       0       0       0       0
  6865 ;;Total ram usage:        0 bytes
  6866 ;; Hardware stack levels used: 1
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_EUSART_Initialize
  6871 ;;		_EUSART_Receive_ISR
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875     06BE                     _EUSART_DefaultOverrunErrorHandler:	
  6876                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6877                           
  6878     06BE                     i1l2108:	
  6879                           ;incstack = 0
  6880                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6881                           
  6882                           
  6883                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 255:     RCSTAbits.CREN = 0;
  6884     06BE  0023               	movlb	3	; select bank3
  6885     06BF  121D               	bcf	29,4	;volatile
  6886                           
  6887                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 256:     RCSTAbits.CREN = 1;
  6888     06C0  161D               	bsf	29,4	;volatile
  6889     06C1                     i1l371:
  6890     06C1  0008               	return
  6891     06C2                     __end_of_EUSART_DefaultOverrunErrorHandler:
  6892                           
  6893                           	psect	text49
  6894     06CB                     __ptext49:	
  6895 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6896 ;; Defined at:
  6897 ;;		line 250 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		None
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6911 ;;      Params:         0       0       0       0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0       0       0
  6914 ;;      Totals:         0       0       0       0       0       0       0       0
  6915 ;;Total ram usage:        0 bytes
  6916 ;; Hardware stack levels used: 1
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_EUSART_Initialize
  6921 ;;		_EUSART_Receive_ISR
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925     06CB                     _EUSART_DefaultFramingErrorHandler:	
  6926                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6927                           
  6928     06CB                     i1l368:	
  6929                           ;incstack = 0
  6930                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6931                           
  6932     06CB  0008               	return
  6933     06CC                     __end_of_EUSART_DefaultFramingErrorHandler:
  6934                           
  6935                           	psect	text50
  6936     06C2                     __ptext50:	
  6937 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6938 ;; Defined at:
  6939 ;;		line 260 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6953 ;;      Params:         0       0       0       0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used: 1
  6959 ;; Hardware stack levels required when called: 1
  6960 ;; This function calls:
  6961 ;;		_EUSART_RxDataHandler
  6962 ;; This function is called by:
  6963 ;;		_EUSART_Initialize
  6964 ;;		_EUSART_Receive_ISR
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968     06C2                     _EUSART_DefaultErrorHandler:	
  6969                           ;psect for function _EUSART_DefaultErrorHandler
  6970                           
  6971     06C2                     i1l2110:	
  6972                           ;incstack = 0
  6973                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6974                           
  6975                           
  6976                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 261:     EUSART_RxDataHandle
      +                          r();
  6977     06C2  3185  25BB  3186   	fcall	_EUSART_RxDataHandler
  6978     06C5                     i1l374:
  6979     06C5  0008               	return
  6980     06C6                     __end_of_EUSART_DefaultErrorHandler:
  6981                           
  6982                           	psect	text51
  6983     05BB                     __ptext51:	
  6984 ;; *************** function _EUSART_RxDataHandler *****************
  6985 ;; Defined at:
  6986 ;;		line 240 in file "C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7000 ;;      Params:         0       0       0       0       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0
  7002 ;;      Temps:          1       0       0       0       0       0       0       0
  7003 ;;      Totals:         1       0       0       0       0       0       0       0
  7004 ;;Total ram usage:        1 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_EUSART_Receive_ISR
  7010 ;;		_EUSART_DefaultErrorHandler
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014     05BB                     _EUSART_RxDataHandler:	
  7015                           ;psect for function _EUSART_RxDataHandler
  7016                           
  7017     05BB                     i1l1984:	
  7018                           ;incstack = 0
  7019                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7020                           
  7021                           
  7022                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 242:     eusartRxBuffer[eusa
      +                          rtRxHead++] = RCREG;
  7023     05BB  0020               	movlb	0	; select bank0
  7024     05BC  0834               	movf	_eusartRxHead,w
  7025     05BD  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7026     05BE  0086               	movwf	6
  7027     05BF  0187               	clrf	7
  7028     05C0  0023               	movlb	3	; select bank3
  7029     05C1  0819               	movf	25,w	;volatile
  7030     05C2  0081               	movwf	1
  7031     05C3                     i1l1986:
  7032     05C3  3001               	movlw	1
  7033     05C4  00F0               	movwf	??_EUSART_RxDataHandler
  7034     05C5  0870               	movf	??_EUSART_RxDataHandler,w
  7035     05C6  0020               	movlb	0	; select bank0
  7036     05C7  07B4               	addwf	_eusartRxHead,f	;volatile
  7037     05C8                     i1l1988:
  7038                           
  7039                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 243:     if(sizeof(eusartRxB
      +                          uffer) <= eusartRxHead)
  7040     05C8  3008               	movlw	8
  7041     05C9  0234               	subwf	_eusartRxHead,w	;volatile
  7042     05CA  1C03               	skipc
  7043     05CB  2DCD               	goto	u138_21
  7044     05CC  2DCE               	goto	u138_20
  7045     05CD                     u138_21:
  7046     05CD  2DCF               	goto	i1l1992
  7047     05CE                     u138_20:
  7048     05CE                     i1l1990:
  7049                           
  7050                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 244:     {;C:\yiming\work\FR
      +                          682_TXV01.X\mcc_generated_files\eusart.c: 245:         eusartRxHead = 0;
  7051     05CE  01B4               	clrf	_eusartRxHead	;volatile
  7052     05CF                     i1l1992:
  7053                           
  7054                           ;C:\yiming\work\FR682_TXV01.X\mcc_generated_files\eusart.c: 247:     eusartRxCount++;
  7055     05CF  3001               	movlw	1
  7056     05D0  00F0               	movwf	??_EUSART_RxDataHandler
  7057     05D1  0870               	movf	??_EUSART_RxDataHandler,w
  7058     05D2  07B2               	addwf	_eusartRxCount,f	;volatile
  7059     05D3                     i1l365:
  7060     05D3  0008               	return
  7061     05D4                     __end_of_EUSART_RxDataHandler:
  7062     007E                     btemp	set	126	;btemp
  7063     007E                     int$flags	set	126
  7064     007E                     wtemp0	set	126
  7065                           
  7066                           	psect	idloc
  7067                           
  7068                           ;Config register IDLOC0 @ 0x8000
  7069                           ;	unspecified, using default values
  7070     8000                     	org	32768
  7071     8000  3FFF               	dw	16383
  7072                           
  7073                           ;Config register IDLOC1 @ 0x8001
  7074                           ;	unspecified, using default values
  7075     8001                     	org	32769
  7076     8001  3FFF               	dw	16383
  7077                           
  7078                           ;Config register IDLOC2 @ 0x8002
  7079                           ;	unspecified, using default values
  7080     8002                     	org	32770
  7081     8002  3FFF               	dw	16383
  7082                           
  7083                           ;Config register IDLOC3 @ 0x8003
  7084                           ;	unspecified, using default values
  7085     8003                     	org	32771
  7086     8003  3FFF               	dw	16383
  7087                           
  7088                           	psect	config
  7089                           
  7090                           ;Config register CONFIG1 @ 0x8007
  7091                           ;	Oscillator Selection
  7092                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7093                           ;	Watchdog Timer Enable
  7094                           ;	WDTE = OFF, WDT disabled
  7095                           ;	Power-up Timer Enable
  7096                           ;	PWRTE = OFF, PWRT disabled
  7097                           ;	MCLR Pin Function Select
  7098                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7099                           ;	Flash Program Memory Code Protection
  7100                           ;	CP = OFF, Program memory code protection is disabled
  7101                           ;	Data Memory Code Protection
  7102                           ;	CPD = OFF, Data memory code protection is disabled
  7103                           ;	Brown-out Reset Enable
  7104                           ;	BOREN = ON, Brown-out Reset enabled
  7105                           ;	Clock Out Enable
  7106                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7107                           ;	Internal/External Switchover
  7108                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7109                           ;	Fail-Safe Clock Monitor Enable
  7110                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7111     8007                     	org	32775
  7112     8007  3FE4               	dw	16356
  7113                           
  7114                           ;Config register CONFIG2 @ 0x8008
  7115                           ;	Flash Memory Self-Write Protection
  7116                           ;	WRT = OFF, Write protection off
  7117                           ;	Voltage Regulator Capacitor Enable
  7118                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  7119                           ;	PLL Enable
  7120                           ;	PLLEN = ON, 4x PLL enabled
  7121                           ;	Stack Overflow/Underflow Reset Enable
  7122                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7123                           ;	Brown-out Reset Voltage Selection
  7124                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7125                           ;	Low-Voltage Programming Enable
  7126                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7127     8008                     	org	32776
  7128     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    6
    Data        1
    BSS         89
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      67
    BANK1            80      9      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK1[8]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_init@table	const PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    LIN_sendPeriodicTx@periodicTx	PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), NULL(NULL[0]), 

    LIN_sendPeriodicTx@periodicTx$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 11
		 -> LIN_packet(BANK1[11]), processLIN@tempRxData(BANK1[8]), 

    memcpy@d1	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK1[11]), processLIN@tempRxData(BANK1[8]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_rxPacket$data(BANK1[8]), SW_STATE_Data(BANK0[8]), 

    memcpy@s1	PTR const void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_rxPacket$data(BANK1[8]), SW_STATE_Data(BANK0[8]), 

    memset@dest	PTR void  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    S25$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    schedule	PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), NULL(NULL[0]), 

    schedule$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    scheduleTable$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    sp__memcpy	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK1[11]), processLIN@tempRxData(BANK1[8]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_LIN_timerHandler
    _LIN_sendPeriodicTx->_LIN_queuePacket
    _LIN_queuePacket->i1_LIN_getChecksum
    _LIN_queuePacket->i1_memcpy
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_LIN_handler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Master_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_sendPacket->_EUSART_Write
    _LIN_receivePacket->_LIN_getChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->_LIN_queuePacket

Critical Paths under _main in BANK1

    _LIN_handler->_processLIN

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3882
                                             23 BANK0      1     1      0
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1111
                  _EUSART_Initialize
              _LIN_Master_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Master_Initialize                                0     0      0     447
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4     447
                                             11 BANK0      5     1      4
                _LIN_setTimerHandler
                    _LIN_startPeriod
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_startPeriod                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          2     2      0    2771
                                             21 BANK0      2     2      0
                                NULL *
                 _EUSART_is_rx_ready
                      _LIN_disableRx
                       _LIN_enableRx
                  _LIN_receivePacket
                     _LIN_sendPacket
                     _LIN_startTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                          11    11      0    1463
                                             19 BANK0      2     2      0
                                              0 BANK1      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     2      0    1386
                                             17 BANK0      2     2      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     715
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               8     5      3     570
                                              9 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0      44
                                             10 BANK0      1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      22
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_sendPacket                                       2     2      0      90
                                             11 BANK0      2     2      0
                       _EUSART_Write
                      _LIN_sendBreak
 ---------------------------------------------------------------------------------
 (3) _LIN_sendBreak                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_receivePacket                                    1     1      0     459
                                             17 BANK0      1     1      0
                        _EUSART_Read
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (3) _LIN_getChecksum                                      8     6      2     435
                                              9 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    2030
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0    2030
                                NULL *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0    2030
                                             13 COMMON     1     1      0
                 _LIN_sendPeriodicTx
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LIN_sendPeriodicTx                                   5     5      0    2030
                                              4 BANK0      5     5      0
                    _LIN_queuePacket
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _LIN_queuePacket                                     9     8      1    1473
                                              8 COMMON     5     4      1
                                              0 BANK0      4     4      0
                     _LIN_calcParity
                  i1_LIN_getChecksum
                           i1_memcpy
                           i1_memset
 ---------------------------------------------------------------------------------
 (11) i1_memset                                            7     3      4     148
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (11) i1_memcpy                                            8     5      3     278
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (11) i1_LIN_getChecksum                                   8     6      2     235
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (11) _LIN_calcParity                                      3     3      0     338
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     NULL(Fake) *
     _EUSART_is_rx_ready *
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_receivePacket *
       _EUSART_Read
       _LIN_getChecksum
     _LIN_sendPacket *
       _EUSART_Write
       _LIN_sendBreak
     _LIN_startTimer *
       _TMR0_WriteTimer
     _memset *
     _processLIN *
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Master_Initialize
       _LIN_init
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_startPeriod
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       _LIN_sendPeriodicTx
         _LIN_queuePacket
           _LIN_calcParity
           i1_LIN_getChecksum
           i1_memcpy
           i1_memset
         ___wmul
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      89       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      43       6       83.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      9      38       8       70.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      89      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Jun 03 08:15:45 2025

                ?_EUSART_SetRxInterruptHandler 0053                          __end_of_LIN_getPacket 054D  
                        ??_LIN_setTimerHandler 0055                          __end_of_LIN_disableRx 06AE  
                               _scheduleLength 0040                                             l21 022E  
                                           l30 0243                                             l22 0230  
                                           l40 0260                                             l24 0233  
                                           l33 024E                                             l42 0264  
                                           l34 0250                                             l27 023E  
                                           l36 0253                                             l28 0240  
                                           l45 0273                                             l46 0275  
                                           l39 025E                                             l72 05FE  
                                           l48 0279                                             l65 0643  
                          ___wmul@multiplicand 0072                                _timer0ReloadVal 0030  
                              ?_LIN_calcParity 0070                                            l204 0412  
                                          l205 0415                                            l221 06B5  
                                          l230 06A8                                            l208 0650  
                                          l320 033F                                            l224 06B9  
                                          l233 06AD                                            l145 05E9  
                                          l218 0665                                            l236 06C8  
                                          l326 066E                                            l166 0298  
                                          l344 0450                                            l192 03AD  
                                          l185 03E1                                            l345 045A  
                                          l513 06A3                                            l177 02FC  
                                          l450 0657                                            l339 0498  
                                          l195 054C                                            l523 0680  
                                          l507 0612                                            l348 0471  
                                          l380 0692                                            l453 065C  
                                          l383 069E                                            l447 0625  
                                          l456 06B1                                            l377 0698  
                                          l386 0686                                            l389 068C  
                                          l487 05A0                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 0053                                            wreg 0009  
                        __end_of_scheduleTable 0675                                   ?_EUSART_Read 0070  
                                         l2010 037A                                           l2020 0390  
                                         l2012 037D                                           l2100 0336  
                                         l2022 0393                                           l2014 0381  
                                         l2030 0646                                           l2102 0337  
                                         l1135 04D9                                           l2040 0666  
                                         l2008 06A9                                           l2024 039B  
                                         l2016 0385                                           l2032 0648  
                                         l1144 0586                                           l2104 0338  
                                         l2120 0593                                           l2112 0587  
                                         l2050 03C5                                           l2026 03A0  
                                         l2018 038A                                           l2034 064C  
                                         l1138 04E5                                           l2106 033D  
                                         l2130 059E                                           l2122 0597  
                                         l2114 058C                                           l2060 03E0  
                                         l2052 03C7                                           l2044 03AE  
                                         l2028 03A8                                           l2036 064D  
                                         l2132 0651                                           l2124 0599  
                                         l2116 058F                                           l2140 05FF  
                                         l2038 06A4                                           l2054 03C8  
                                         l2046 03B6                                           l2134 0654  
                                         l2126 059B                                           l2118 0591  
                                         l2150 060B                                           l2142 0604  
                                         l2056 03DE                                           l2048 03C1  
                                         l2400 057A                                           l2080 0307  
                                         l2136 0655                                           l2128 059C  
                                         l2144 0607                                           l2402 04C2  
                                         l2090 031A                                           l2082 0311  
                                         l2410 05D6                                           l2146 0609  
                                         l2138 06AE                                           l2404 04C7  
                                         l2420 053E                                           l2500 02D0  
                                         l2092 031C                                           l2084 0314  
                                         l2076 02FD                                           l2412 05E0  
                                         l2148 060A                                           l2406 04CC  
                                         l2422 054A                                           l2502 02D8  
                                         l2094 0324                                           l2086 0316  
                                         l2078 02FF                                           l2414 05E6  
                                         l2408 04D0                                           l2416 052F  
                                         l2504 02DB                                           l2512 02E5  
                                         l2096 032C                                           l2088 0318  
                                         l2418 0534                                           l2450 05F0  
                                         l2506 02DF                                           l2098 0334  
                                         l1810 06B6                                           l2530 0211  
                                         l1900 03FB                                           l2444 0636  
                                         l2540 021A                                           l2532 0212  
                                         l1902 0404                                           l2446 05EA  
                                         l2630 02EE                                           l2470 0287  
                                         l2358 065D                                           l1806 06B2  
                                         l2550 0222                                           l2542 021C  
                                         l2534 0215                                           l2526 020D  
                                         l1920 0488                                           l1912 0472  
                                         l1904 0408                                           l2632 05F9  
                                         l2480 0294                                           l2472 0288  
                                         l2560 0245                                           l2552 0226  
                                         l2544 021D                                           l2536 0217  
                                         l2528 0210                                           l1930 0496  
                                         l1922 048E                                           l1914 0472  
                                         l1906 040C                                           l2394 056E  
                                         l2490 02B3                                           l2482 029D  
                                         l2474 028D                                           l2570 026F  
                                         l2562 024A                                           l2554 0229  
                                         l2546 021F                                           l2538 0219  
                                         l1924 048F                                           l1916 0478  
                                         l1908 0414                                           l1940 0455  
                                         l2396 0571                                           l2492 02B6  
                                         l2484 02A2                                           l2476 028E  
                                         l2468 0613                                           l2572 027B  
                                         l2564 0255                                           l2556 0235  
                                         l2548 0221                                           l1926 0491  
                                         l1918 0484                                           l1950 046D  
                                         l1942 045B                                           l1934 06C6  
                                         l2398 0576                                           l2494 02BB  
                                         l2486 02A8                                           l2478 0291  
                                         l2566 025A                                           l2558 023A  
                                         l1928 0494                                           l1944 0462  
                                         l1952 046F                                           l1936 044B  
                                         l2496 02BC                                           l2488 02AC  
                                         l1768 067B                                           l2568 0266  
                                         l1946 0466                                           l1938 044B  
                                         l1954 06A1                                           l2498 02C8  
                                         l1892 03E4                                           l1948 046C  
                                         l1980 068D                                           l1894 03EB  
                                         l1982 0699                                           l1974 0687  
                                         l1896 03ED                                           l1976 0681  
                                         l1898 03F7                                           l1978 0693  
                                         u2000 025E                                           u2001 025D  
                                         u2010 0273                                           u2011 0272  
                                         u1300 0478                                           u1301 0477  
                                         u1310 048E                                           u1311 048D  
                                         u1320 0450                                           u1400 03A8  
                                         u1321 044F                                           u1401 03A7  
                                         u1410 066D                                           u1330 0455  
                                         u1411 066B                                           u1331 0454  
                                         u1420 066E                                           u1340 046C  
                                         u1341 046B                                           _LATA 010C  
                                         u1430 03B6                                           _LATB 010D  
                                         u1431 03B5                                           _LATC 010E  
                                         u1280 0404                                           u1440 03DE  
                                         u1281 0403                                           u1441 03DD  
                                         _LATE 0110                                           u1290 0412  
                                         u1291 0411                                           u1390 0390  
                                         u1391 038F                                           u1800 0586  
                                         u1801 0585                                           u1810 04E5  
                                         u1490 065C                                           u1811 04E4  
                                         u1491 065B                                           u1900 029D  
                                         u1901 029C                                           u1910 02A2  
                                         u1911 02A1                                           u1920 02A8  
                                         u1921 02A7                                           u1930 02BB  
                                         u1931 02BA                                           u1940 02D0  
                                         u1941 02CF                                           u1950 02D8  
                                         u1951 02D7                                           u1890 028D  
                                         u1970 022E                                           u1891 028C  
                                         u1971 022D                                           u1980 023E  
                                         u1981 023D                                           u1990 024E  
                                         u1991 024D                                           _PLLR 04D6  
                                         _TMR0 0015                                           _WPUB 020D  
                                         _WPUE 0210                                 _LIN_sendPacket 037A  
                        __end_of_LIN_sendBreak 06C9                                           _main 020D  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0038  
                                processLIN@cmd 00D7                       LIN_receivePacket@rxIndex 0039  
                      __end_of_TMR0_Initialize 0613                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 065D  
                                        ?_main 0070                                          i1l204 0445  
                                        i1l205 0448                                          i1l221 06BD  
                                        i1l215 04BF                                          i1l153 00D2  
                                        i1l410 0012                                          i1l156 010B  
                                        i1l245 020C                                          i1l413 0026  
                                        i1l351 052A                                          i1l520 0635  
                                        i1l361 0379                                          i1l417 0036  
                                        i1l354 052C                                          i1l418 0036  
                                   i1memcpy@d1 0074                                          i1l371 06C1  
                                        i1l365 05D3                                          i1l374 06C5  
                                        i1l198 0191                                          i1l526 06CA  
                                        i1l368 06CB                                _TMR0_WriteTimer 069F  
                                        i1l676 0557                                          i1l678 056B  
                                   i1memcpy@s1 0070                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          u90_20 0122  
                                        u90_21 0120                                          u91_24 0123  
                                        u92_20 0128                                          u92_21 0126  
                                        u92_22 0129                                          u93_20 012F  
                                        u93_21 012D                                          u93_22 0130  
                                        u94_20 0136                                          u94_21 0134  
                                        u95_24 0137                                          u96_20 013C  
                                        u88_20 0114                                          u96_21 013A  
                                        u88_21 0112                                          u96_22 013D  
                                        u88_22 0115                                          u97_20 0143  
                                        u89_20 011B                                          u97_21 0141  
                                        u89_21 0119                                          _TXREG 019A  
                                        u97_22 0144                                          u89_22 011C  
                                        u98_20 014A                                          u98_21 0148  
                                        u99_24 014B                               __end_of_LIN_init 05EA  
                        __end_of_LIN_stopTimer 06B6                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0053                               __end_of_TMR0_ISR 0636  
                               _WDT_Initialize 06AE                         __end_of_LIN_sendPacket 03AE  
                                        pclath 000A                                 _LIN_startTimer 0644  
                                        status 0003                                          wtemp0 007E  
                             __end_ofi1_memcpy 050B                               __end_ofi1_memset 05BB  
                       ?_LIN_Master_Initialize 0070                               ?_LIN_getChecksum 0053  
                  LIN_queuePacket@tempSchedule 004C                                __initialization 003A  
                                 ?_LIN_handler 0070                                   __end_of_main 0287  
                               ??_EUSART_Write 0053                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0055                                         ??_main 0061  
                       __end_of_WDT_Initialize 06B2      __end_of_EUSART_DefaultFramingErrorHandler 06CC  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 06CB                     _EUSART_OverrunErrorHandler 0024  
                       __end_of_LIN_startTimer 0651                                ?_LIN_sendPacket 0070  
                                       _APFCON 011D                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 066F  
                                       _BORCON 0116                                         u100_20 0150  
                                       u100_21 014E                                         u100_22 0151  
                                       u101_20 0157                                         u101_21 0155  
                                       u101_22 0158                                         u110_20 0186  
                                       u102_20 015E                                         u110_21 0184  
                                       u102_21 015C                                         i1l2110 06C2  
                                       i1l1135 04FE                                         i1l1144 05BA  
                                       i1l2210 0524                                         i1l2202 050B  
                                       i1l1138 050A                                         i1l2108 06BE  
                                       i1l2220 0351                                         i1l2212 0525  
                                       i1l2204 0512                                         u111_24 0187  
                                       u103_24 015F                                         i1l2230 0370  
                                       i1l2222 0356                                         i1l2214 0340  
                                       i1l2206 0519                                         i1l2232 0376  
                                       i1l2224 035B                                         i1l2216 0346  
                                       i1l2208 051E                                         u112_20 018F  
                                       u104_20 0164                                         u112_21 018D  
                                       u104_21 0162                                         i1l2226 0361  
                                       i1l2218 034B                                         u104_22 0165  
                                       i1l2228 0366                                         i1l2350 04E7  
                                       i1l2430 01A9                                         u105_20 016B  
                                       i1l2352 04EC                                         i1l1800 05A5  
                                       i1l2360 0054                                         i1l2440 01EF  
                                       i1l2432 01B9                                         i1l2520 0627  
                                       u105_21 0169                                         u105_22 016C  
                                       i1l2354 04F1                                         i1l1802 05AA  
                                       i1l2370 0069                                         i1l2362 0058  
                                       i1l2442 01FF                                         i1l2434 01CE  
                                       i1l2426 0192                                         i1l2522 062A  
                                       u113_24 0190                                         i1l2356 04F5  
                                       i1l1804 05AE                                         i1l2380 009A  
                                       i1l2364 005A                                         i1l2372 006D  
                                       i1l2436 01D9                                         i1l2428 0194  
                                       i1l2460 04A9                                         i1l2524 0630  
                                       i1l2382 00AA                                         i1l2390 00E3  
                                       i1l2374 0073                                         i1l2438 01DA  
                                       i1l2462 04AC                                         i1l2518 0626  
                                       u106_20 0172                                         i1l1760 010D  
                                       u114_20 0437                                         i1l2392 0108  
                                       i1l2384 00B8                                         i1l2376 007E  
                                       i1l2368 0065                                         i1l2464 04B2  
                                       i1l2456 0499                                         u202_20 000A  
                                       u106_21 0170                                         u114_21 0436  
                                       u202_21 0009                                         i1l1762 0187  
                                       i1l1770 0417                                         i1l2386 00D5  
                                       i1l2378 0089                                         i1l2466 04BC  
                                       i1l2458 049F                                         i1l1764 0190  
                                       i1l1780 0437                                         i1l1772 041E  
                                       i1l2388 00D7                                         i1l2580 0016  
                                       i1l1782 043B                                         i1l1774 0420  
                                       i1l1870 0561                                         i1l1862 054D  
                                       i1l2582 001B                                         i1l2574 0006  
                                       u115_20 0445                                         i1l1776 042A  
                                       i1l1784 043F                                         i1l1872 0567  
                                       i1l1864 054F                                         i1l2584 0020  
                                       u203_20 000E                                         i1l2576 000A  
                                       u115_21 0444                                         u203_21 000D  
                                       i1l1786 0447                                         i1l1778 042E  
                                       i1l1866 0553                                         i1l2586 002B  
                                       i1l2578 000E                                         u107_24 0173  
                                       i1l1868 055C                                         i1l2588 0030  
                                       i1l1990 05CE                                         i1l1798 05A2  
                                       i1l1992 05CF                                         i1l1984 05BB  
                                       u108_20 0178                                         u124_20 0553  
                                       u204_20 0016                                         u108_21 0176  
                                       u124_21 0552                                         u204_21 0015  
                                       i1l1986 05C3                                         u108_22 0179  
                                       i1l1994 06BA                                         i1l1988 05C8  
                                       u109_20 017F                                         u117_20 05BA  
                                       u205_20 001B                                         u109_21 017D  
                                       u117_21 05B9                                         u205_21 001A  
                                       u109_22 0180                                         u125_25 0558  
                                       u206_20 0020                                         u206_21 001F  
                                       u126_25 055D                                         u127_20 0567  
                                       u207_20 002B                                         u127_21 0566  
                                       u207_21 002A                                         u160_20 035B  
                                       u208_20 0030                                         u160_21 035A  
                                       u208_21 002F                                         u161_20 0370  
                                       u161_21 036F                                         u138_20 05CE  
                                       u138_21 05CD                                         u157_20 0512  
                                       u157_21 0511                                         u158_20 0524  
                                       u182_20 01B9                                         u158_21 0523  
                                       u182_21 01B8                                         u159_20 034B  
                                       u175_20 050A                                         u183_20 01D9  
                                       u159_21 034A                                         u175_21 0509  
                                       u183_21 01D8                                         u176_20 0064  
                                       u184_20 01FF                                         u176_21 0063  
                                       u184_21 01FE                                         u177_20 0073  
                                       u185_20 049F                                         u177_21 0072  
                                       u185_21 049E                                         u178_20 009A  
                                       u186_20 04A9                                         u178_21 0099  
                                       u186_21 04A8                                         u179_20 00AA  
                                       u187_20 04B2                                         u179_21 00A9  
                                       u187_21 04B1                                         u188_20 04BC  
                                       u196_20 0630                                         u188_21 04BB  
                                       u196_21 062F                                         _OSCCON 0099  
                                  i1memcpy@tmp 0075                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                              _LIN_processData 002E                                         ___wmul 054D  
                              _LIN_queuePacket 0052                        __end_of_TMR0_WriteTimer 06A4  
                      i1LIN_getChecksum@length 0074                            _EUSART_Transmit_ISR 050B  
                                       _memcpy 04C0                               ?_TMR0_Initialize 0070  
                                       _memset 056C                             _LIN_enablePeriodTx 003D  
                              _LIN_startPeriod 06B6                                ?_WDT_Initialize 0070  
     TMR0_SetInterruptHandler@InterruptHandler 0053                                ?_LIN_startTimer 0070  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 0613  
                      __end_of__initialization 004E                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0687                   _EUSART_SetTxInterruptHandler 0681  
                                    ?_LIN_init 0055                                 __pcstackCOMMON 0070  
                                ?_LIN_enableRx 0070                               ??_LIN_calcParity 0070  
                              LIN_sendPacket@i 0056                                   __pidataBANK0 06C9  
                          ??_SYSTEM_Initialize 005A                              _LIN_receivePacket 03AE  
                                LIN_init@table 0055                                      ?_TMR0_ISR 0070  
                           ?_LIN_receivePacket 0070                                 _OPTION_REGbits 0095  
                                    ?i1_memcpy 0070                                      ?i1_memset 0070  
                         _eusartRxStatusBuffer 00A0                            ??_LIN_receivePacket 005B  
              ??_EUSART_SetOverrunErrorHandler 0055                      __end_of_SYSTEM_Initialize 0626  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0472  
                  __end_of_LIN_setTimerHandler 0666                        __end_of_LIN_queuePacket 010C  
                         LIN_handler@LIN_state 003A                      __end_of_LIN_receivePacket 03E2  
                               ??_LIN_enableRx 0053                                     __pmaintext 020D  
                             _LIN_timerHandler 0499                                     ??_LIN_init 0059  
                          LIN_getChecksum@data 0054                  ?_EUSART_SetTxInterruptHandler 0053  
             _EUSART_TxDefaultInterruptHandler 002A               __end_of_TMR0_SetInterruptHandler 0681  
                                      ?___wmul 0070                                     ??_TMR0_ISR 007E  
                                   __pintentry 0004                               ?_TMR0_WriteTimer 0070  
                      __end_of_LIN_startPeriod 06BA                                        ?_memcpy 0053  
                                      _BAUDCON 019F                                        ?_memset 0053  
                 ??_EUSART_DefaultErrorHandler 0071                          LIN_getChecksum@length 0057  
                             _LIN_timerRunning 003E                                  _eusartRxCount 0032  
                                   ??i1_memcpy 0073                                     ??i1_memset 0074  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0055  
                      ??_LIN_Master_Initialize 005A                                   i1memset@dest 0075  
                      LIN_getChecksum@checksum 0059                           i1LIN_getChecksum@pid 0070  
                                _SW_STATE_Data 0042                      i1LIN_getChecksum@checksum 0076  
                                      __ptext1 0613                                        __ptext2 06AE  
                                      __ptext3 05FF                                        __ptext4 0587  
                                      __ptext5 0651                                        __ptext6 0636  
                                      __ptext7 05D4                                        __ptext8 06B2  
                                      __ptext9 06B6                          _OSCILLATOR_Initialize 0651  
                             ??_LIN_sendPacket 0055                       ??_PIN_MANAGER_Initialize 0053  
                                      clrloop0 0676                           end_of_initialization 004E  
        __end_of_EUSART_SetOverrunErrorHandler 0693                  _EUSART_SetOverrunErrorHandler 068D  
                                      memcpy@d 0058                                        memcpy@n 0054  
                                      memcpy@s 0059                                        memset@c 0053  
                                      memset@n 0055                                        memset@p 0058  
                            _EUSART_Initialize 02FD                               ?_LIN_queuePacket 0078  
                           ?_EUSART_Initialize 0070                              i1_LIN_getChecksum 0416  
                                    _RCSTAbits 019D                              ??i1_LIN_stopTimer 0070  
                           _EUSART_is_rx_ready 0666                                  _LIN_getPacket 052D  
                           ?i1_LIN_getChecksum 0070                                  _LIN_disableRx 06A9  
                             ?_LIN_startPeriod 0070                            ??_EUSART_Initialize 0055  
                             ??_WDT_Initialize 0053                 ??_EUSART_SetTxInterruptHandler 0055  
                            LIN_getPacket@data 005B                       _TMR0_SetInterruptHandler 067B  
                                    _PORTAbits 000C                            ?_EUSART_is_rx_ready 0070  
                                   _processLIN 05EA                            ??i1_LIN_getChecksum 0072  
                          LIN_init@tableLength 0059                               ??_LIN_startTimer 0054  
                         __end_of_LIN_enableRx 06A9                                  _scheduleTable 066F  
                 LIN_sendPeriodicTx@periodicTx 0051                      __end_of_EUSART_Initialize 0340  
                         ??_EUSART_is_rx_ready 0053                     __end_of_LIN_sendPeriodicTx 020D  
                                _LIN_sendBreak 06C6                                      _TXSTAbits 019E  
                    __end_ofi1_LIN_getChecksum 0449                                 ?_LIN_getPacket 0070  
                               ?_LIN_disableRx 0070             __end_of_EUSART_DefaultErrorHandler 06C6  
                   _EUSART_DefaultErrorHandler 06C2                                      i1memcpy@d 0076  
                                    i1memcpy@n 0071                                      i1memcpy@s 0077  
                               __end_of___wmul 056C                                      i1memset@c 0070  
                                    i1memset@n 0072                                      i1memset@p 0076  
                                 _EUSART_Write 0449                                 __end_of_memcpy 04E6  
                       ?_OSCILLATOR_Initialize 0070                LIN_sendPeriodicTx@scheduleIndex 0038  
                               __end_of_memset 0587                            start_initialization 003A  
                                _LIN_stopTimer 06B2                       __end_of_LIN_timerHandler 04C0  
                                ??_EUSART_Read 0053   EUSART_SetRxInterruptHandler@interruptHandler 0053  
 EUSART_SetTxInterruptHandler@interruptHandler 0053                          LIN_startTimer@timeout 0054  
                               ?_LIN_sendBreak 0070                              LIN_calcParity@CMD 0071  
               ?_EUSART_SetOverrunErrorHandler 0053                              LIN_calcParity@PID 0072  
                   _EUSART_FramingErrorHandler 0026                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 0699                                    __pdataBANK0 0062  
                                     ??_memcpy 0056                                       ??_memset 0057  
                         processLIN@tempRxData 00CF                                     memset@dest 0059  
                                  ?_processLIN 0070                            LIN_init@processData 0057  
                  __end_of_EUSART_Transmit_ISR 052D                                 ?_LIN_stopTimer 0070  
                                    ___latbits 0002                                  __pcstackBANK0 004A  
                                __pcstackBANK1 00CF                              ??_LIN_getChecksum 0055  
                   __end_of_EUSART_Receive_ISR 037A                              _LIN_timerCallBack 003C  
             _EUSART_RxDefaultInterruptHandler 0028                            __end_of_EUSART_Read 0499  
                __end_of_LIN_Master_Initialize 0644                          _TMR0_InterruptHandler 0020  
                 __end_of_EUSART_RxDataHandler 05D4                                ??_LIN_getPacket 005B  
                       _PIN_MANAGER_Initialize 0587                                  ??_LIN_handler 005F  
                             LIN_getChecksum@i 0058                                ??_LIN_disableRx 0053  
                         EUSART_Read@readValue 0054                             LIN_getChecksum@pid 0053  
                                 _eusartRxHead 0034                                   _eusartTxHead 0037  
                                 _eusartRxTail 0033                                   _eusartTxTail 0036  
                 ??_INTERRUPT_InterruptManager 007E                        _eusartTxBufferRemaining 0035  
                              ??_LIN_sendBreak 0053                                i1_LIN_stopTimer 06BA  
                               _eusartRxBuffer 00A8                              ??_TMR0_Initialize 0055  
                               _eusartTxBuffer 00B0                                 ___wmul@product 0074  
       EUSART_SetErrorHandler@interruptHandler 0053                                       _LATBbits 010D  
                                    clear_ram0 0675                                       _PIE1bits 0091  
                            _eusartRxLastError 0031                     ??_TMR0_SetInterruptHandler 0055  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0055  
                                     _LIN_init 05D4                                   _LIN_enableRx 06A4  
                                     _TMR0_ISR 0626      __end_of_EUSART_DefaultOverrunErrorHandler 06C2  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 06BE                               LIN_getPacket@cmd 005C  
                          __end_of_LIN_handler 02FD                              ___wmul@multiplier 0070  
                              ??_LIN_stopTimer 0053                                       i1_memcpy 04E6  
                                     i1_memset 05A1                                   _LIN_rxPacket 00B8  
                                  _EUSART_Read 0472                             _LIN_periodCallBack 003B  
                                    memcpy@tmp 0057                          i1LIN_getChecksum@data 0071  
                      ??_OSCILLATOR_Initialize 0053                            _EUSART_ErrorHandler 0022  
                  ?_EUSART_DefaultErrorHandler 0070                             _LIN_sendPeriodicTx 0192  
                      __end_ofi1_LIN_stopTimer 06BE                            ?_LIN_sendPeriodicTx 0070  
                         _EUSART_RxDataHandler 05BB                                       __ptext10 065D  
                                     __ptext11 067B                                       __ptext20 052D  
                                     __ptext12 02FD                                       __ptext21 056C  
                                     __ptext13 0681                                       __ptext30 0472  
                                     __ptext22 04C0                                       __ptext14 0687  
                                     __ptext31 06A4                                       __ptext23 0644  
                                     __ptext15 068D                                       __ptext40 054D  
                                     __ptext32 06A9                                       __ptext24 069F  
                                     __ptext16 0693                                       __ptext41 0052  
                                     __ptext33 0666                                       __ptext25 037A  
                                     __ptext17 0699                                       __ptext50 06C2  
                                     __ptext42 05A1                                       __ptext26 06C6  
                                     __ptext18 0287                                       __ptext51 05BB  
                                     __ptext43 04E6                                       __ptext35 0626  
                                     __ptext27 0449                                       __ptext19 05EA  
                                     __ptext44 0416                                       __ptext36 0499  
                                     __ptext28 03AE                                       __ptext45 010C  
                                     __ptext37 06CA                                       __ptext29 03E2  
                                     __ptext46 050B                                       __ptext38 06BA  
                                     __ptext47 0340                                       __ptext39 0192  
                                     __ptext48 06BE                                       __ptext49 06CB  
                            ?_LIN_timerHandler 0070                        TMR0_WriteTimer@timerVal 0053  
                           ??_LIN_timerHandler 007D                              ??_TMR0_WriteTimer 0053  
                           i1LIN_getChecksum@i 0075           __end_of_TMR0_DefaultInterruptHandler 06CB  
                 _TMR0_DefaultInterruptHandler 06CA                                       _schedule 002C  
                      ?_EUSART_SetErrorHandler 0053                           ??_LIN_sendPeriodicTx 004E  
EUSART_SetOverrunErrorHandler@interruptHandler 0053                                    _LIN_handler 0287  
                                     int$flags 007E                                _LIN_getChecksum 03E2  
           __end_of_INTERRUPT_InterruptManager 0038                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0699                  _EUSART_SetFramingErrorHandler 0693  
                                 ??_processLIN 005D                                    _LIN_txReady 0041  
                                  _LIN_timeout 0062                                 _LIN_calcParity 010C  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                                     memcpy@d1 005A                                       memcpy@s1 0053  
                          LIN_queuePacket@data 0078                            _LIN_setTimerHandler 065D  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 069F                             __end_of_processLIN 05FF  
         __end_of_EUSART_SetRxInterruptHandler 068D                   _EUSART_SetRxInterruptHandler 0687  
                ?_TMR0_DefaultInterruptHandler 0070                                     _LIN_packet 00C4  
                           _EUSART_Receive_ISR 0340                           ?_LIN_setTimerHandler 0070  
                                   _LIN_period 003F  EUSART_SetFramingErrorHandler@interruptHandler 0053  
                       __end_of_LIN_calcParity 0192                                  __pstringtext1 066F  
                           LIN_queuePacket@cmd 004A                                     _OPTION_REG 0095  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 05FF  
                            ??_LIN_queuePacket 0079                               ?i1_LIN_stopTimer 0070  
                           EUSART_Write@txData 0054                 __end_of_PIN_MANAGER_Initialize 05A1  
                            ??_LIN_startPeriod 0053                               LIN_queuePacket@i 004B  
                         ??_EUSART_Receive_ISR 0071                        __end_of_LIN_getChecksum 0416  
                        _LIN_Master_Initialize 0636  
