

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 11 16:35:26 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1936
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	text45,local,class=CODE,merge=1,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68     0000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC16F1936 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103     0000                     	;# 
   104     0001                     	;# 
   105     0002                     	;# 
   106     0003                     	;# 
   107     0004                     	;# 
   108     0005                     	;# 
   109     0006                     	;# 
   110     0007                     	;# 
   111     0008                     	;# 
   112     0009                     	;# 
   113     000A                     	;# 
   114     000B                     	;# 
   115     000C                     	;# 
   116     000D                     	;# 
   117     000E                     	;# 
   118     0010                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0013                     	;# 
   122     0015                     	;# 
   123     0016                     	;# 
   124     0016                     	;# 
   125     0017                     	;# 
   126     0018                     	;# 
   127     0019                     	;# 
   128     001A                     	;# 
   129     001B                     	;# 
   130     001C                     	;# 
   131     001E                     	;# 
   132     001F                     	;# 
   133     008C                     	;# 
   134     008D                     	;# 
   135     008E                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0092                     	;# 
   139     0093                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     0110                     	;# 
   155     0111                     	;# 
   156     0112                     	;# 
   157     0113                     	;# 
   158     0114                     	;# 
   159     0115                     	;# 
   160     0116                     	;# 
   161     0117                     	;# 
   162     0118                     	;# 
   163     0119                     	;# 
   164     011A                     	;# 
   165     011B                     	;# 
   166     011D                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0191                     	;# 
   170     0191                     	;# 
   171     0192                     	;# 
   172     0193                     	;# 
   173     0193                     	;# 
   174     0193                     	;# 
   175     0194                     	;# 
   176     0195                     	;# 
   177     0196                     	;# 
   178     0199                     	;# 
   179     019A                     	;# 
   180     019B                     	;# 
   181     019B                     	;# 
   182     019B                     	;# 
   183     019B                     	;# 
   184     019C                     	;# 
   185     019C                     	;# 
   186     019D                     	;# 
   187     019E                     	;# 
   188     019F                     	;# 
   189     020D                     	;# 
   190     0210                     	;# 
   191     0211                     	;# 
   192     0212                     	;# 
   193     0213                     	;# 
   194     0214                     	;# 
   195     0215                     	;# 
   196     0215                     	;# 
   197     0216                     	;# 
   198     0217                     	;# 
   199     0291                     	;# 
   200     0291                     	;# 
   201     0292                     	;# 
   202     0293                     	;# 
   203     0294                     	;# 
   204     0295                     	;# 
   205     0295                     	;# 
   206     0296                     	;# 
   207     0298                     	;# 
   208     0298                     	;# 
   209     0299                     	;# 
   210     029A                     	;# 
   211     029B                     	;# 
   212     029C                     	;# 
   213     029C                     	;# 
   214     029D                     	;# 
   215     029E                     	;# 
   216     029F                     	;# 
   217     0311                     	;# 
   218     0311                     	;# 
   219     0312                     	;# 
   220     0313                     	;# 
   221     0314                     	;# 
   222     0315                     	;# 
   223     0315                     	;# 
   224     0316                     	;# 
   225     0318                     	;# 
   226     0318                     	;# 
   227     0319                     	;# 
   228     031A                     	;# 
   229     031C                     	;# 
   230     031C                     	;# 
   231     031D                     	;# 
   232     031E                     	;# 
   233     0394                     	;# 
   234     0395                     	;# 
   235     0396                     	;# 
   236     0415                     	;# 
   237     0416                     	;# 
   238     0417                     	;# 
   239     041C                     	;# 
   240     041D                     	;# 
   241     041E                     	;# 
   242     0791                     	;# 
   243     0792                     	;# 
   244     0793                     	;# 
   245     0794                     	;# 
   246     0795                     	;# 
   247     0798                     	;# 
   248     0799                     	;# 
   249     07A0                     	;# 
   250     07A1                     	;# 
   251     07A3                     	;# 
   252     07A4                     	;# 
   253     07A6                     	;# 
   254     07A7                     	;# 
   255     07A9                     	;# 
   256     07AA                     	;# 
   257     0FE4                     	;# 
   258     0FE5                     	;# 
   259     0FE6                     	;# 
   260     0FE7                     	;# 
   261     0FE8                     	;# 
   262     0FE9                     	;# 
   263     0FEA                     	;# 
   264     0FEB                     	;# 
   265     0FED                     	;# 
   266     0FEE                     	;# 
   267     0FEF                     	;# 
   268     0000                     	;# 
   269     0001                     	;# 
   270     0002                     	;# 
   271     0003                     	;# 
   272     0004                     	;# 
   273     0005                     	;# 
   274     0006                     	;# 
   275     0007                     	;# 
   276     0008                     	;# 
   277     0009                     	;# 
   278     000A                     	;# 
   279     000B                     	;# 
   280     000C                     	;# 
   281     000D                     	;# 
   282     000E                     	;# 
   283     0010                     	;# 
   284     0011                     	;# 
   285     0012                     	;# 
   286     0013                     	;# 
   287     0015                     	;# 
   288     0016                     	;# 
   289     0016                     	;# 
   290     0017                     	;# 
   291     0018                     	;# 
   292     0019                     	;# 
   293     001A                     	;# 
   294     001B                     	;# 
   295     001C                     	;# 
   296     001E                     	;# 
   297     001F                     	;# 
   298     008C                     	;# 
   299     008D                     	;# 
   300     008E                     	;# 
   301     0090                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0095                     	;# 
   306     0096                     	;# 
   307     0097                     	;# 
   308     0098                     	;# 
   309     0099                     	;# 
   310     009A                     	;# 
   311     009B                     	;# 
   312     009B                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     010E                     	;# 
   319     0110                     	;# 
   320     0111                     	;# 
   321     0112                     	;# 
   322     0113                     	;# 
   323     0114                     	;# 
   324     0115                     	;# 
   325     0116                     	;# 
   326     0117                     	;# 
   327     0118                     	;# 
   328     0119                     	;# 
   329     011A                     	;# 
   330     011B                     	;# 
   331     011D                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020D                     	;# 
   355     0210                     	;# 
   356     0211                     	;# 
   357     0212                     	;# 
   358     0213                     	;# 
   359     0214                     	;# 
   360     0215                     	;# 
   361     0215                     	;# 
   362     0216                     	;# 
   363     0217                     	;# 
   364     0291                     	;# 
   365     0291                     	;# 
   366     0292                     	;# 
   367     0293                     	;# 
   368     0294                     	;# 
   369     0295                     	;# 
   370     0295                     	;# 
   371     0296                     	;# 
   372     0298                     	;# 
   373     0298                     	;# 
   374     0299                     	;# 
   375     029A                     	;# 
   376     029B                     	;# 
   377     029C                     	;# 
   378     029C                     	;# 
   379     029D                     	;# 
   380     029E                     	;# 
   381     029F                     	;# 
   382     0311                     	;# 
   383     0311                     	;# 
   384     0312                     	;# 
   385     0313                     	;# 
   386     0314                     	;# 
   387     0315                     	;# 
   388     0315                     	;# 
   389     0316                     	;# 
   390     0318                     	;# 
   391     0318                     	;# 
   392     0319                     	;# 
   393     031A                     	;# 
   394     031C                     	;# 
   395     031C                     	;# 
   396     031D                     	;# 
   397     031E                     	;# 
   398     0394                     	;# 
   399     0395                     	;# 
   400     0396                     	;# 
   401     0415                     	;# 
   402     0416                     	;# 
   403     0417                     	;# 
   404     041C                     	;# 
   405     041D                     	;# 
   406     041E                     	;# 
   407     0791                     	;# 
   408     0792                     	;# 
   409     0793                     	;# 
   410     0794                     	;# 
   411     0795                     	;# 
   412     0798                     	;# 
   413     0799                     	;# 
   414     07A0                     	;# 
   415     07A1                     	;# 
   416     07A3                     	;# 
   417     07A4                     	;# 
   418     07A6                     	;# 
   419     07A7                     	;# 
   420     07A9                     	;# 
   421     07AA                     	;# 
   422     0FE4                     	;# 
   423     0FE5                     	;# 
   424     0FE6                     	;# 
   425     0FE7                     	;# 
   426     0FE8                     	;# 
   427     0FE9                     	;# 
   428     0FEA                     	;# 
   429     0FEB                     	;# 
   430     0FED                     	;# 
   431     0FEE                     	;# 
   432     0FEF                     	;# 
   433     0000                     	;# 
   434     0001                     	;# 
   435     0002                     	;# 
   436     0003                     	;# 
   437     0004                     	;# 
   438     0005                     	;# 
   439     0006                     	;# 
   440     0007                     	;# 
   441     0008                     	;# 
   442     0009                     	;# 
   443     000A                     	;# 
   444     000B                     	;# 
   445     000C                     	;# 
   446     000D                     	;# 
   447     000E                     	;# 
   448     0010                     	;# 
   449     0011                     	;# 
   450     0012                     	;# 
   451     0013                     	;# 
   452     0015                     	;# 
   453     0016                     	;# 
   454     0016                     	;# 
   455     0017                     	;# 
   456     0018                     	;# 
   457     0019                     	;# 
   458     001A                     	;# 
   459     001B                     	;# 
   460     001C                     	;# 
   461     001E                     	;# 
   462     001F                     	;# 
   463     008C                     	;# 
   464     008D                     	;# 
   465     008E                     	;# 
   466     0090                     	;# 
   467     0091                     	;# 
   468     0092                     	;# 
   469     0093                     	;# 
   470     0095                     	;# 
   471     0096                     	;# 
   472     0097                     	;# 
   473     0098                     	;# 
   474     0099                     	;# 
   475     009A                     	;# 
   476     009B                     	;# 
   477     009B                     	;# 
   478     009C                     	;# 
   479     009D                     	;# 
   480     009E                     	;# 
   481     010C                     	;# 
   482     010D                     	;# 
   483     010E                     	;# 
   484     0110                     	;# 
   485     0111                     	;# 
   486     0112                     	;# 
   487     0113                     	;# 
   488     0114                     	;# 
   489     0115                     	;# 
   490     0116                     	;# 
   491     0117                     	;# 
   492     0118                     	;# 
   493     0119                     	;# 
   494     011A                     	;# 
   495     011B                     	;# 
   496     011D                     	;# 
   497     018C                     	;# 
   498     018D                     	;# 
   499     0191                     	;# 
   500     0191                     	;# 
   501     0192                     	;# 
   502     0193                     	;# 
   503     0193                     	;# 
   504     0193                     	;# 
   505     0194                     	;# 
   506     0195                     	;# 
   507     0196                     	;# 
   508     0199                     	;# 
   509     019A                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019C                     	;# 
   515     019C                     	;# 
   516     019D                     	;# 
   517     019E                     	;# 
   518     019F                     	;# 
   519     020D                     	;# 
   520     0210                     	;# 
   521     0211                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0214                     	;# 
   525     0215                     	;# 
   526     0215                     	;# 
   527     0216                     	;# 
   528     0217                     	;# 
   529     0291                     	;# 
   530     0291                     	;# 
   531     0292                     	;# 
   532     0293                     	;# 
   533     0294                     	;# 
   534     0295                     	;# 
   535     0295                     	;# 
   536     0296                     	;# 
   537     0298                     	;# 
   538     0298                     	;# 
   539     0299                     	;# 
   540     029A                     	;# 
   541     029B                     	;# 
   542     029C                     	;# 
   543     029C                     	;# 
   544     029D                     	;# 
   545     029E                     	;# 
   546     029F                     	;# 
   547     0311                     	;# 
   548     0311                     	;# 
   549     0312                     	;# 
   550     0313                     	;# 
   551     0314                     	;# 
   552     0315                     	;# 
   553     0315                     	;# 
   554     0316                     	;# 
   555     0318                     	;# 
   556     0318                     	;# 
   557     0319                     	;# 
   558     031A                     	;# 
   559     031C                     	;# 
   560     031C                     	;# 
   561     031D                     	;# 
   562     031E                     	;# 
   563     0394                     	;# 
   564     0395                     	;# 
   565     0396                     	;# 
   566     0415                     	;# 
   567     0416                     	;# 
   568     0417                     	;# 
   569     041C                     	;# 
   570     041D                     	;# 
   571     041E                     	;# 
   572     0791                     	;# 
   573     0792                     	;# 
   574     0793                     	;# 
   575     0794                     	;# 
   576     0795                     	;# 
   577     0798                     	;# 
   578     0799                     	;# 
   579     07A0                     	;# 
   580     07A1                     	;# 
   581     07A3                     	;# 
   582     07A4                     	;# 
   583     07A6                     	;# 
   584     07A7                     	;# 
   585     07A9                     	;# 
   586     07AA                     	;# 
   587     0FE4                     	;# 
   588     0FE5                     	;# 
   589     0FE6                     	;# 
   590     0FE7                     	;# 
   591     0FE8                     	;# 
   592     0FE9                     	;# 
   593     0FEA                     	;# 
   594     0FEB                     	;# 
   595     0FED                     	;# 
   596     0FEE                     	;# 
   597     0FEF                     	;# 
   598     0000                     	;# 
   599     0001                     	;# 
   600     0002                     	;# 
   601     0003                     	;# 
   602     0004                     	;# 
   603     0005                     	;# 
   604     0006                     	;# 
   605     0007                     	;# 
   606     0008                     	;# 
   607     0009                     	;# 
   608     000A                     	;# 
   609     000B                     	;# 
   610     000C                     	;# 
   611     000D                     	;# 
   612     000E                     	;# 
   613     0010                     	;# 
   614     0011                     	;# 
   615     0012                     	;# 
   616     0013                     	;# 
   617     0015                     	;# 
   618     0016                     	;# 
   619     0016                     	;# 
   620     0017                     	;# 
   621     0018                     	;# 
   622     0019                     	;# 
   623     001A                     	;# 
   624     001B                     	;# 
   625     001C                     	;# 
   626     001E                     	;# 
   627     001F                     	;# 
   628     008C                     	;# 
   629     008D                     	;# 
   630     008E                     	;# 
   631     0090                     	;# 
   632     0091                     	;# 
   633     0092                     	;# 
   634     0093                     	;# 
   635     0095                     	;# 
   636     0096                     	;# 
   637     0097                     	;# 
   638     0098                     	;# 
   639     0099                     	;# 
   640     009A                     	;# 
   641     009B                     	;# 
   642     009B                     	;# 
   643     009C                     	;# 
   644     009D                     	;# 
   645     009E                     	;# 
   646     010C                     	;# 
   647     010D                     	;# 
   648     010E                     	;# 
   649     0110                     	;# 
   650     0111                     	;# 
   651     0112                     	;# 
   652     0113                     	;# 
   653     0114                     	;# 
   654     0115                     	;# 
   655     0116                     	;# 
   656     0117                     	;# 
   657     0118                     	;# 
   658     0119                     	;# 
   659     011A                     	;# 
   660     011B                     	;# 
   661     011D                     	;# 
   662     018C                     	;# 
   663     018D                     	;# 
   664     0191                     	;# 
   665     0191                     	;# 
   666     0192                     	;# 
   667     0193                     	;# 
   668     0193                     	;# 
   669     0193                     	;# 
   670     0194                     	;# 
   671     0195                     	;# 
   672     0196                     	;# 
   673     0199                     	;# 
   674     019A                     	;# 
   675     019B                     	;# 
   676     019B                     	;# 
   677     019B                     	;# 
   678     019B                     	;# 
   679     019C                     	;# 
   680     019C                     	;# 
   681     019D                     	;# 
   682     019E                     	;# 
   683     019F                     	;# 
   684     020D                     	;# 
   685     0210                     	;# 
   686     0211                     	;# 
   687     0212                     	;# 
   688     0213                     	;# 
   689     0214                     	;# 
   690     0215                     	;# 
   691     0215                     	;# 
   692     0216                     	;# 
   693     0217                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029F                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0314                     	;# 
   717     0315                     	;# 
   718     0315                     	;# 
   719     0316                     	;# 
   720     0318                     	;# 
   721     0318                     	;# 
   722     0319                     	;# 
   723     031A                     	;# 
   724     031C                     	;# 
   725     031C                     	;# 
   726     031D                     	;# 
   727     031E                     	;# 
   728     0394                     	;# 
   729     0395                     	;# 
   730     0396                     	;# 
   731     0415                     	;# 
   732     0416                     	;# 
   733     0417                     	;# 
   734     041C                     	;# 
   735     041D                     	;# 
   736     041E                     	;# 
   737     0791                     	;# 
   738     0792                     	;# 
   739     0793                     	;# 
   740     0794                     	;# 
   741     0795                     	;# 
   742     0798                     	;# 
   743     0799                     	;# 
   744     07A0                     	;# 
   745     07A1                     	;# 
   746     07A3                     	;# 
   747     07A4                     	;# 
   748     07A6                     	;# 
   749     07A7                     	;# 
   750     07A9                     	;# 
   751     07AA                     	;# 
   752     0FE4                     	;# 
   753     0FE5                     	;# 
   754     0FE6                     	;# 
   755     0FE7                     	;# 
   756     0FE8                     	;# 
   757     0FE9                     	;# 
   758     0FEA                     	;# 
   759     0FEB                     	;# 
   760     0FED                     	;# 
   761     0FEE                     	;# 
   762     0FEF                     	;# 
   763     0000                     	;# 
   764     0001                     	;# 
   765     0002                     	;# 
   766     0003                     	;# 
   767     0004                     	;# 
   768     0005                     	;# 
   769     0006                     	;# 
   770     0007                     	;# 
   771     0008                     	;# 
   772     0009                     	;# 
   773     000A                     	;# 
   774     000B                     	;# 
   775     000C                     	;# 
   776     000D                     	;# 
   777     000E                     	;# 
   778     0010                     	;# 
   779     0011                     	;# 
   780     0012                     	;# 
   781     0013                     	;# 
   782     0015                     	;# 
   783     0016                     	;# 
   784     0016                     	;# 
   785     0017                     	;# 
   786     0018                     	;# 
   787     0019                     	;# 
   788     001A                     	;# 
   789     001B                     	;# 
   790     001C                     	;# 
   791     001E                     	;# 
   792     001F                     	;# 
   793     008C                     	;# 
   794     008D                     	;# 
   795     008E                     	;# 
   796     0090                     	;# 
   797     0091                     	;# 
   798     0092                     	;# 
   799     0093                     	;# 
   800     0095                     	;# 
   801     0096                     	;# 
   802     0097                     	;# 
   803     0098                     	;# 
   804     0099                     	;# 
   805     009A                     	;# 
   806     009B                     	;# 
   807     009B                     	;# 
   808     009C                     	;# 
   809     009D                     	;# 
   810     009E                     	;# 
   811     010C                     	;# 
   812     010D                     	;# 
   813     010E                     	;# 
   814     0110                     	;# 
   815     0111                     	;# 
   816     0112                     	;# 
   817     0113                     	;# 
   818     0114                     	;# 
   819     0115                     	;# 
   820     0116                     	;# 
   821     0117                     	;# 
   822     0118                     	;# 
   823     0119                     	;# 
   824     011A                     	;# 
   825     011B                     	;# 
   826     011D                     	;# 
   827     018C                     	;# 
   828     018D                     	;# 
   829     0191                     	;# 
   830     0191                     	;# 
   831     0192                     	;# 
   832     0193                     	;# 
   833     0193                     	;# 
   834     0193                     	;# 
   835     0194                     	;# 
   836     0195                     	;# 
   837     0196                     	;# 
   838     0199                     	;# 
   839     019A                     	;# 
   840     019B                     	;# 
   841     019B                     	;# 
   842     019B                     	;# 
   843     019B                     	;# 
   844     019C                     	;# 
   845     019C                     	;# 
   846     019D                     	;# 
   847     019E                     	;# 
   848     019F                     	;# 
   849     020D                     	;# 
   850     0210                     	;# 
   851     0211                     	;# 
   852     0212                     	;# 
   853     0213                     	;# 
   854     0214                     	;# 
   855     0215                     	;# 
   856     0215                     	;# 
   857     0216                     	;# 
   858     0217                     	;# 
   859     0291                     	;# 
   860     0291                     	;# 
   861     0292                     	;# 
   862     0293                     	;# 
   863     0294                     	;# 
   864     0295                     	;# 
   865     0295                     	;# 
   866     0296                     	;# 
   867     0298                     	;# 
   868     0298                     	;# 
   869     0299                     	;# 
   870     029A                     	;# 
   871     029B                     	;# 
   872     029C                     	;# 
   873     029C                     	;# 
   874     029D                     	;# 
   875     029E                     	;# 
   876     029F                     	;# 
   877     0311                     	;# 
   878     0311                     	;# 
   879     0312                     	;# 
   880     0313                     	;# 
   881     0314                     	;# 
   882     0315                     	;# 
   883     0315                     	;# 
   884     0316                     	;# 
   885     0318                     	;# 
   886     0318                     	;# 
   887     0319                     	;# 
   888     031A                     	;# 
   889     031C                     	;# 
   890     031C                     	;# 
   891     031D                     	;# 
   892     031E                     	;# 
   893     0394                     	;# 
   894     0395                     	;# 
   895     0396                     	;# 
   896     0415                     	;# 
   897     0416                     	;# 
   898     0417                     	;# 
   899     041C                     	;# 
   900     041D                     	;# 
   901     041E                     	;# 
   902     0791                     	;# 
   903     0792                     	;# 
   904     0793                     	;# 
   905     0794                     	;# 
   906     0795                     	;# 
   907     0798                     	;# 
   908     0799                     	;# 
   909     07A0                     	;# 
   910     07A1                     	;# 
   911     07A3                     	;# 
   912     07A4                     	;# 
   913     07A6                     	;# 
   914     07A7                     	;# 
   915     07A9                     	;# 
   916     07AA                     	;# 
   917     0FE4                     	;# 
   918     0FE5                     	;# 
   919     0FE6                     	;# 
   920     0FE7                     	;# 
   921     0FE8                     	;# 
   922     0FE9                     	;# 
   923     0FEA                     	;# 
   924     0FEB                     	;# 
   925     0FED                     	;# 
   926     0FEE                     	;# 
   927     0FEF                     	;# 
   928     0000                     	;# 
   929     0001                     	;# 
   930     0002                     	;# 
   931     0003                     	;# 
   932     0004                     	;# 
   933     0005                     	;# 
   934     0006                     	;# 
   935     0007                     	;# 
   936     0008                     	;# 
   937     0009                     	;# 
   938     000A                     	;# 
   939     000B                     	;# 
   940     000C                     	;# 
   941     000D                     	;# 
   942     000E                     	;# 
   943     0010                     	;# 
   944     0011                     	;# 
   945     0012                     	;# 
   946     0013                     	;# 
   947     0015                     	;# 
   948     0016                     	;# 
   949     0016                     	;# 
   950     0017                     	;# 
   951     0018                     	;# 
   952     0019                     	;# 
   953     001A                     	;# 
   954     001B                     	;# 
   955     001C                     	;# 
   956     001E                     	;# 
   957     001F                     	;# 
   958     008C                     	;# 
   959     008D                     	;# 
   960     008E                     	;# 
   961     0090                     	;# 
   962     0091                     	;# 
   963     0092                     	;# 
   964     0093                     	;# 
   965     0095                     	;# 
   966     0096                     	;# 
   967     0097                     	;# 
   968     0098                     	;# 
   969     0099                     	;# 
   970     009A                     	;# 
   971     009B                     	;# 
   972     009B                     	;# 
   973     009C                     	;# 
   974     009D                     	;# 
   975     009E                     	;# 
   976     010C                     	;# 
   977     010D                     	;# 
   978     010E                     	;# 
   979     0110                     	;# 
   980     0111                     	;# 
   981     0112                     	;# 
   982     0113                     	;# 
   983     0114                     	;# 
   984     0115                     	;# 
   985     0116                     	;# 
   986     0117                     	;# 
   987     0118                     	;# 
   988     0119                     	;# 
   989     011A                     	;# 
   990     011B                     	;# 
   991     011D                     	;# 
   992     018C                     	;# 
   993     018D                     	;# 
   994     0191                     	;# 
   995     0191                     	;# 
   996     0192                     	;# 
   997     0193                     	;# 
   998     0193                     	;# 
   999     0193                     	;# 
  1000     0194                     	;# 
  1001     0195                     	;# 
  1002     0196                     	;# 
  1003     0199                     	;# 
  1004     019A                     	;# 
  1005     019B                     	;# 
  1006     019B                     	;# 
  1007     019B                     	;# 
  1008     019B                     	;# 
  1009     019C                     	;# 
  1010     019C                     	;# 
  1011     019D                     	;# 
  1012     019E                     	;# 
  1013     019F                     	;# 
  1014     020D                     	;# 
  1015     0210                     	;# 
  1016     0211                     	;# 
  1017     0212                     	;# 
  1018     0213                     	;# 
  1019     0214                     	;# 
  1020     0215                     	;# 
  1021     0215                     	;# 
  1022     0216                     	;# 
  1023     0217                     	;# 
  1024     0291                     	;# 
  1025     0291                     	;# 
  1026     0292                     	;# 
  1027     0293                     	;# 
  1028     0294                     	;# 
  1029     0295                     	;# 
  1030     0295                     	;# 
  1031     0296                     	;# 
  1032     0298                     	;# 
  1033     0298                     	;# 
  1034     0299                     	;# 
  1035     029A                     	;# 
  1036     029B                     	;# 
  1037     029C                     	;# 
  1038     029C                     	;# 
  1039     029D                     	;# 
  1040     029E                     	;# 
  1041     029F                     	;# 
  1042     0311                     	;# 
  1043     0311                     	;# 
  1044     0312                     	;# 
  1045     0313                     	;# 
  1046     0314                     	;# 
  1047     0315                     	;# 
  1048     0315                     	;# 
  1049     0316                     	;# 
  1050     0318                     	;# 
  1051     0318                     	;# 
  1052     0319                     	;# 
  1053     031A                     	;# 
  1054     031C                     	;# 
  1055     031C                     	;# 
  1056     031D                     	;# 
  1057     031E                     	;# 
  1058     0394                     	;# 
  1059     0395                     	;# 
  1060     0396                     	;# 
  1061     0415                     	;# 
  1062     0416                     	;# 
  1063     0417                     	;# 
  1064     041C                     	;# 
  1065     041D                     	;# 
  1066     041E                     	;# 
  1067     0791                     	;# 
  1068     0792                     	;# 
  1069     0793                     	;# 
  1070     0794                     	;# 
  1071     0795                     	;# 
  1072     0798                     	;# 
  1073     0799                     	;# 
  1074     07A0                     	;# 
  1075     07A1                     	;# 
  1076     07A3                     	;# 
  1077     07A4                     	;# 
  1078     07A6                     	;# 
  1079     07A7                     	;# 
  1080     07A9                     	;# 
  1081     07AA                     	;# 
  1082     0FE4                     	;# 
  1083     0FE5                     	;# 
  1084     0FE6                     	;# 
  1085     0FE7                     	;# 
  1086     0FE8                     	;# 
  1087     0FE9                     	;# 
  1088     0FEA                     	;# 
  1089     0FEB                     	;# 
  1090     0FED                     	;# 
  1091     0FEE                     	;# 
  1092     0FEF                     	;# 
  1093     0000                     	;# 
  1094     0001                     	;# 
  1095     0002                     	;# 
  1096     0003                     	;# 
  1097     0004                     	;# 
  1098     0005                     	;# 
  1099     0006                     	;# 
  1100     0007                     	;# 
  1101     0008                     	;# 
  1102     0009                     	;# 
  1103     000A                     	;# 
  1104     000B                     	;# 
  1105     000C                     	;# 
  1106     000D                     	;# 
  1107     000E                     	;# 
  1108     0010                     	;# 
  1109     0011                     	;# 
  1110     0012                     	;# 
  1111     0013                     	;# 
  1112     0015                     	;# 
  1113     0016                     	;# 
  1114     0016                     	;# 
  1115     0017                     	;# 
  1116     0018                     	;# 
  1117     0019                     	;# 
  1118     001A                     	;# 
  1119     001B                     	;# 
  1120     001C                     	;# 
  1121     001E                     	;# 
  1122     001F                     	;# 
  1123     008C                     	;# 
  1124     008D                     	;# 
  1125     008E                     	;# 
  1126     0090                     	;# 
  1127     0091                     	;# 
  1128     0092                     	;# 
  1129     0093                     	;# 
  1130     0095                     	;# 
  1131     0096                     	;# 
  1132     0097                     	;# 
  1133     0098                     	;# 
  1134     0099                     	;# 
  1135     009A                     	;# 
  1136     009B                     	;# 
  1137     009B                     	;# 
  1138     009C                     	;# 
  1139     009D                     	;# 
  1140     009E                     	;# 
  1141     010C                     	;# 
  1142     010D                     	;# 
  1143     010E                     	;# 
  1144     0110                     	;# 
  1145     0111                     	;# 
  1146     0112                     	;# 
  1147     0113                     	;# 
  1148     0114                     	;# 
  1149     0115                     	;# 
  1150     0116                     	;# 
  1151     0117                     	;# 
  1152     0118                     	;# 
  1153     0119                     	;# 
  1154     011A                     	;# 
  1155     011B                     	;# 
  1156     011D                     	;# 
  1157     018C                     	;# 
  1158     018D                     	;# 
  1159     0191                     	;# 
  1160     0191                     	;# 
  1161     0192                     	;# 
  1162     0193                     	;# 
  1163     0193                     	;# 
  1164     0193                     	;# 
  1165     0194                     	;# 
  1166     0195                     	;# 
  1167     0196                     	;# 
  1168     0199                     	;# 
  1169     019A                     	;# 
  1170     019B                     	;# 
  1171     019B                     	;# 
  1172     019B                     	;# 
  1173     019B                     	;# 
  1174     019C                     	;# 
  1175     019C                     	;# 
  1176     019D                     	;# 
  1177     019E                     	;# 
  1178     019F                     	;# 
  1179     020D                     	;# 
  1180     0210                     	;# 
  1181     0211                     	;# 
  1182     0212                     	;# 
  1183     0213                     	;# 
  1184     0214                     	;# 
  1185     0215                     	;# 
  1186     0215                     	;# 
  1187     0216                     	;# 
  1188     0217                     	;# 
  1189     0291                     	;# 
  1190     0291                     	;# 
  1191     0292                     	;# 
  1192     0293                     	;# 
  1193     0294                     	;# 
  1194     0295                     	;# 
  1195     0295                     	;# 
  1196     0296                     	;# 
  1197     0298                     	;# 
  1198     0298                     	;# 
  1199     0299                     	;# 
  1200     029A                     	;# 
  1201     029B                     	;# 
  1202     029C                     	;# 
  1203     029C                     	;# 
  1204     029D                     	;# 
  1205     029E                     	;# 
  1206     029F                     	;# 
  1207     0311                     	;# 
  1208     0311                     	;# 
  1209     0312                     	;# 
  1210     0313                     	;# 
  1211     0314                     	;# 
  1212     0315                     	;# 
  1213     0315                     	;# 
  1214     0316                     	;# 
  1215     0318                     	;# 
  1216     0318                     	;# 
  1217     0319                     	;# 
  1218     031A                     	;# 
  1219     031C                     	;# 
  1220     031C                     	;# 
  1221     031D                     	;# 
  1222     031E                     	;# 
  1223     0394                     	;# 
  1224     0395                     	;# 
  1225     0396                     	;# 
  1226     0415                     	;# 
  1227     0416                     	;# 
  1228     0417                     	;# 
  1229     041C                     	;# 
  1230     041D                     	;# 
  1231     041E                     	;# 
  1232     0791                     	;# 
  1233     0792                     	;# 
  1234     0793                     	;# 
  1235     0794                     	;# 
  1236     0795                     	;# 
  1237     0798                     	;# 
  1238     0799                     	;# 
  1239     07A0                     	;# 
  1240     07A1                     	;# 
  1241     07A3                     	;# 
  1242     07A4                     	;# 
  1243     07A6                     	;# 
  1244     07A7                     	;# 
  1245     07A9                     	;# 
  1246     07AA                     	;# 
  1247     0FE4                     	;# 
  1248     0FE5                     	;# 
  1249     0FE6                     	;# 
  1250     0FE7                     	;# 
  1251     0FE8                     	;# 
  1252     0FE9                     	;# 
  1253     0FEA                     	;# 
  1254     0FEB                     	;# 
  1255     0FED                     	;# 
  1256     0FEE                     	;# 
  1257     0FEF                     	;# 
  1258     0000                     	;# 
  1259     0001                     	;# 
  1260     0002                     	;# 
  1261     0003                     	;# 
  1262     0004                     	;# 
  1263     0005                     	;# 
  1264     0006                     	;# 
  1265     0007                     	;# 
  1266     0008                     	;# 
  1267     0009                     	;# 
  1268     000A                     	;# 
  1269     000B                     	;# 
  1270     000C                     	;# 
  1271     000D                     	;# 
  1272     000E                     	;# 
  1273     0010                     	;# 
  1274     0011                     	;# 
  1275     0012                     	;# 
  1276     0013                     	;# 
  1277     0015                     	;# 
  1278     0016                     	;# 
  1279     0016                     	;# 
  1280     0017                     	;# 
  1281     0018                     	;# 
  1282     0019                     	;# 
  1283     001A                     	;# 
  1284     001B                     	;# 
  1285     001C                     	;# 
  1286     001E                     	;# 
  1287     001F                     	;# 
  1288     008C                     	;# 
  1289     008D                     	;# 
  1290     008E                     	;# 
  1291     0090                     	;# 
  1292     0091                     	;# 
  1293     0092                     	;# 
  1294     0093                     	;# 
  1295     0095                     	;# 
  1296     0096                     	;# 
  1297     0097                     	;# 
  1298     0098                     	;# 
  1299     0099                     	;# 
  1300     009A                     	;# 
  1301     009B                     	;# 
  1302     009B                     	;# 
  1303     009C                     	;# 
  1304     009D                     	;# 
  1305     009E                     	;# 
  1306     010C                     	;# 
  1307     010D                     	;# 
  1308     010E                     	;# 
  1309     0110                     	;# 
  1310     0111                     	;# 
  1311     0112                     	;# 
  1312     0113                     	;# 
  1313     0114                     	;# 
  1314     0115                     	;# 
  1315     0116                     	;# 
  1316     0117                     	;# 
  1317     0118                     	;# 
  1318     0119                     	;# 
  1319     011A                     	;# 
  1320     011B                     	;# 
  1321     011D                     	;# 
  1322     018C                     	;# 
  1323     018D                     	;# 
  1324     0191                     	;# 
  1325     0191                     	;# 
  1326     0192                     	;# 
  1327     0193                     	;# 
  1328     0193                     	;# 
  1329     0193                     	;# 
  1330     0194                     	;# 
  1331     0195                     	;# 
  1332     0196                     	;# 
  1333     0199                     	;# 
  1334     019A                     	;# 
  1335     019B                     	;# 
  1336     019B                     	;# 
  1337     019B                     	;# 
  1338     019B                     	;# 
  1339     019C                     	;# 
  1340     019C                     	;# 
  1341     019D                     	;# 
  1342     019E                     	;# 
  1343     019F                     	;# 
  1344     020D                     	;# 
  1345     0210                     	;# 
  1346     0211                     	;# 
  1347     0212                     	;# 
  1348     0213                     	;# 
  1349     0214                     	;# 
  1350     0215                     	;# 
  1351     0215                     	;# 
  1352     0216                     	;# 
  1353     0217                     	;# 
  1354     0291                     	;# 
  1355     0291                     	;# 
  1356     0292                     	;# 
  1357     0293                     	;# 
  1358     0294                     	;# 
  1359     0295                     	;# 
  1360     0295                     	;# 
  1361     0296                     	;# 
  1362     0298                     	;# 
  1363     0298                     	;# 
  1364     0299                     	;# 
  1365     029A                     	;# 
  1366     029B                     	;# 
  1367     029C                     	;# 
  1368     029C                     	;# 
  1369     029D                     	;# 
  1370     029E                     	;# 
  1371     029F                     	;# 
  1372     0311                     	;# 
  1373     0311                     	;# 
  1374     0312                     	;# 
  1375     0313                     	;# 
  1376     0314                     	;# 
  1377     0315                     	;# 
  1378     0315                     	;# 
  1379     0316                     	;# 
  1380     0318                     	;# 
  1381     0318                     	;# 
  1382     0319                     	;# 
  1383     031A                     	;# 
  1384     031C                     	;# 
  1385     031C                     	;# 
  1386     031D                     	;# 
  1387     031E                     	;# 
  1388     0394                     	;# 
  1389     0395                     	;# 
  1390     0396                     	;# 
  1391     0415                     	;# 
  1392     0416                     	;# 
  1393     0417                     	;# 
  1394     041C                     	;# 
  1395     041D                     	;# 
  1396     041E                     	;# 
  1397     0791                     	;# 
  1398     0792                     	;# 
  1399     0793                     	;# 
  1400     0794                     	;# 
  1401     0795                     	;# 
  1402     0798                     	;# 
  1403     0799                     	;# 
  1404     07A0                     	;# 
  1405     07A1                     	;# 
  1406     07A3                     	;# 
  1407     07A4                     	;# 
  1408     07A6                     	;# 
  1409     07A7                     	;# 
  1410     07A9                     	;# 
  1411     07AA                     	;# 
  1412     0FE4                     	;# 
  1413     0FE5                     	;# 
  1414     0FE6                     	;# 
  1415     0FE7                     	;# 
  1416     0FE8                     	;# 
  1417     0FE9                     	;# 
  1418     0FEA                     	;# 
  1419     0FEB                     	;# 
  1420     0FED                     	;# 
  1421     0FEE                     	;# 
  1422     0FEF                     	;# 
  1423                           
  1424                           	psect	idataBANK0
  1425     06CA                     __pidataBANK0:
  1426                           
  1427                           ;initializer for _LIN_timeout
  1428     06CA  340A               	retlw	10
  1429                           
  1430                           	psect	stringtext1
  1431     0670                     __pstringtext1:
  1432     0670                     _scheduleTable:
  1433     0670  3401               	retlw	1
  1434     0671  3400               	retlw	0
  1435     0672  3408               	retlw	8
  1436     0673  3414               	retlw	20
  1437     0674  341E               	retlw	30
  1438     0675  3442               	retlw	low (_SW_STATE_Data| 0)
  1439     0676                     __end_of_scheduleTable:
  1440     000E                     _PORTCbits	set	14
  1441     000C                     _PORTAbits	set	12
  1442     0015                     _TMR0	set	21
  1443     0011                     _PIR1bits	set	17
  1444     000B                     _INTCONbits	set	11
  1445     0095                     _OPTION_REG	set	149
  1446     0097                     _WDTCON	set	151
  1447     0098                     _OSCTUNE	set	152
  1448     0099                     _OSCCON	set	153
  1449     0095                     _OPTION_REGbits	set	149
  1450     008E                     _TRISC	set	142
  1451     008D                     _TRISB	set	141
  1452     008C                     _TRISA	set	140
  1453     0090                     _TRISE	set	144
  1454     0091                     _PIE1bits	set	145
  1455     04D6                     _PLLR	set	1238
  1456     010D                     _LATBbits	set	269
  1457     0116                     _BORCON	set	278
  1458     011D                     _APFCON	set	285
  1459     010E                     _LATC	set	270
  1460     010D                     _LATB	set	269
  1461     010C                     _LATA	set	268
  1462     0110                     _LATE	set	272
  1463     018C                     _ANSELA	set	396
  1464     018D                     _ANSELB	set	397
  1465     0199                     _RCREG	set	409
  1466     019A                     _TXREG	set	410
  1467     019C                     _SPBRGH	set	412
  1468     019B                     _SPBRGL	set	411
  1469     019E                     _TXSTA	set	414
  1470     019D                     _RCSTA	set	413
  1471     019F                     _BAUDCON	set	415
  1472     019D                     _RCSTAbits	set	413
  1473     019E                     _TXSTAbits	set	414
  1474     020D                     _WPUB	set	525
  1475     0210                     _WPUE	set	528
  1476                           
  1477                           	psect	cinit
  1478     003A                     start_initialization:	
  1479                           ; #config settings
  1480                           
  1481     003A                     __initialization:
  1482                           
  1483                           ; Initialize objects allocated to BANK0
  1484     003A  3186  26CA  3180   	fcall	__pidataBANK0	;fetch initializer
  1485     003D  00E6               	movwf	__pdataBANK0& (0+127)
  1486                           
  1487                           ; Clear objects allocated to BANK0
  1488     003E  3020               	movlw	low __pbssBANK0
  1489     003F  0084               	movwf	4
  1490     0040  3000               	movlw	high __pbssBANK0
  1491     0041  0085               	movwf	5
  1492     0042  302A               	movlw	42
  1493     0043  3186  2676  3180   	fcall	clear_ram0
  1494                           
  1495                           ; Clear objects allocated to BANK1
  1496     0046  30A0               	movlw	low __pbssBANK1
  1497     0047  0084               	movwf	4
  1498     0048  3000               	movlw	high __pbssBANK1
  1499     0049  0085               	movwf	5
  1500     004A  302F               	movlw	47
  1501     004B  3186  2676  3180   	fcall	clear_ram0
  1502     004E                     end_of_initialization:	
  1503                           ;End of C runtime variable initialization code
  1504                           
  1505     004E                     __end_of__initialization:
  1506     004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1507     004F  0020               	movlb	0
  1508     0050  3181  2992         	ljmp	_main	;jump to C main() function
  1509                           
  1510                           	psect	bssBANK0
  1511     0020                     __pbssBANK0:
  1512     0020                     _TMR0_InterruptHandler:
  1513     0020                     	ds	2
  1514     0022                     _EUSART_ErrorHandler:
  1515     0022                     	ds	2
  1516     0024                     _EUSART_OverrunErrorHandler:
  1517     0024                     	ds	2
  1518     0026                     _EUSART_FramingErrorHandler:
  1519     0026                     	ds	2
  1520     0028                     _EUSART_RxDefaultInterruptHandler:
  1521     0028                     	ds	2
  1522     002A                     _EUSART_TxDefaultInterruptHandler:
  1523     002A                     	ds	2
  1524     002C                     _schedule:
  1525     002C                     	ds	2
  1526     002E                     _LIN_processData:
  1527     002E                     	ds	2
  1528     0030                     _timer0ReloadVal:
  1529     0030                     	ds	1
  1530     0031                     _eusartRxLastError:
  1531     0031                     	ds	1
  1532     0032                     _eusartRxCount:
  1533     0032                     	ds	1
  1534     0033                     _eusartRxTail:
  1535     0033                     	ds	1
  1536     0034                     _eusartRxHead:
  1537     0034                     	ds	1
  1538     0035                     _eusartTxBufferRemaining:
  1539     0035                     	ds	1
  1540     0036                     _eusartTxTail:
  1541     0036                     	ds	1
  1542     0037                     _eusartTxHead:
  1543     0037                     	ds	1
  1544     0038                     LIN_sendPeriodicTx@scheduleIndex:
  1545     0038                     	ds	1
  1546     0039                     LIN_receivePacket@rxIndex:
  1547     0039                     	ds	1
  1548     003A                     LIN_handler@LIN_state:
  1549     003A                     	ds	1
  1550     003B                     _LIN_periodCallBack:
  1551     003B                     	ds	1
  1552     003C                     _LIN_timerCallBack:
  1553     003C                     	ds	1
  1554     003D                     _LIN_enablePeriodTx:
  1555     003D                     	ds	1
  1556     003E                     _LIN_timerRunning:
  1557     003E                     	ds	1
  1558     003F                     _LIN_period:
  1559     003F                     	ds	1
  1560     0040                     _scheduleLength:
  1561     0040                     	ds	1
  1562     0041                     _LIN_txReady:
  1563     0041                     	ds	1
  1564     0042                     _SW_STATE_Data:
  1565     0042                     	ds	8
  1566                           
  1567                           	psect	dataBANK0
  1568     0066                     __pdataBANK0:
  1569     0066                     _LIN_timeout:
  1570     0066                     	ds	1
  1571                           
  1572                           	psect	bssBANK1
  1573     00A0                     __pbssBANK1:
  1574     00A0                     _eusartRxStatusBuffer:
  1575     00A0                     	ds	8
  1576     00A8                     _eusartRxBuffer:
  1577     00A8                     	ds	8
  1578     00B0                     _eusartTxBuffer:
  1579     00B0                     	ds	8
  1580     00B8                     _LIN_rxPacket:
  1581     00B8                     	ds	12
  1582     00C4                     _LIN_packet:
  1583     00C4                     	ds	11
  1584                           
  1585                           	psect	clrtext
  1586     0676                     clear_ram0:	
  1587                           ;	Called with FSR0 containing the base address, and
  1588                           ;	WREG with the size to clear
  1589                           
  1590     0676  0064               	clrwdt	;clear the watchdog before getting into this loop
  1591     0677                     clrloop0:
  1592     0677  0180               	clrf	0	;clear RAM location pointed to by FSR
  1593     0678  3101               	addfsr 0,1
  1594     0679  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1595     067A  2E77               	goto	clrloop0	;have we reached the end yet?
  1596     067B  3400               	retlw	0	;all done for this memory range, return
  1597                           
  1598                           	psect	cstackBANK1
  1599     00CF                     __pcstackBANK1:
  1600     00CF                     ??_LIN_handler:
  1601                           
  1602                           ; 1 bytes @ 0x0
  1603     00CF                     	ds	2
  1604     00D1                     ??_main:
  1605                           
  1606                           ; 1 bytes @ 0x2
  1607     00D1                     	ds	1
  1608                           
  1609                           	psect	cstackCOMMON
  1610     0070                     __pcstackCOMMON:
  1611     0070                     ?_LIN_stopTimer:
  1612     0070                     ?_LIN_setTimerHandler:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0070                     ?_LIN_startPeriod:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0070                     ?_LIN_calcParity:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0070                     ??_LIN_calcParity:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0070                     ?_LIN_disableRx:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0070                     ?_LIN_sendPacket:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0070                     ?_LIN_startTimer:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633     0070                     ?_LIN_enableRx:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636     0070                     ?_EUSART_is_rx_ready:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0070                     ?_LIN_receivePacket:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0070                     ?_EUSART_Read:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0070                     ?_LIN_sendBreak:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0070                     ?_EUSART_Write:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0070                     ?_TMR0_WriteTimer:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654     0070                     ?_LIN_sendPeriodicTx:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657     0070                     ?_processLIN:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660     0070                     ?_EUSART_Receive_ISR:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0070                     ?_EUSART_Transmit_ISR:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     0070                     ??_EUSART_Transmit_ISR:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681     0070                     ?_EUSART_DefaultErrorHandler:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0070                     ?_EUSART_RxDataHandler:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0070                     ??_EUSART_RxDataHandler:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0070                     ?_TMR0_ISR:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0070                     ?_OSCILLATOR_Initialize:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0070                     ?_WDT_Initialize:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0070                     ?_TMR0_Initialize:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0070                     ?_TMR0_DefaultInterruptHandler:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0070                     ??_TMR0_DefaultInterruptHandler:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0070                     ?_LIN_handler:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711     0070                     ?_LIN_getPacket:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0070                     ?_LIN_timerHandler:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0070                     ?_LIN_Master_Initialize:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720     0070                     ?_EUSART_Initialize:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723     0070                     ?_PIN_MANAGER_Initialize:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726     0070                     ?_INTERRUPT_InterruptManager:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729     0070                     ?_SYSTEM_Initialize:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732     0070                     ?i1_LIN_getChecksum:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735     0070                     ?i1_LIN_stopTimer:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738     0070                     ??i1_LIN_stopTimer:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741     0070                     ?_main:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744     0070                     ?___wmul:	
  1745                           ; 2 bytes @ 0x0
  1746                           
  1747     0070                     ?i1_memcpy:	
  1748                           ; 2 bytes @ 0x0
  1749                           
  1750     0070                     ?i1_memset:	
  1751                           ; 2 bytes @ 0x0
  1752                           
  1753     0070                     i1LIN_getChecksum@pid:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756     0070                     i1memcpy@s1:	
  1757                           ; 1 bytes @ 0x0
  1758                           
  1759     0070                     ___wmul@multiplier:	
  1760                           ; 1 bytes @ 0x0
  1761                           
  1762     0070                     i1memset@c:	
  1763                           ; 2 bytes @ 0x0
  1764                           
  1765                           
  1766                           ; 2 bytes @ 0x0
  1767     0070                     	ds	1
  1768     0071                     ??_EUSART_Receive_ISR:
  1769     0071                     ??_EUSART_DefaultErrorHandler:	
  1770                           ; 1 bytes @ 0x1
  1771                           
  1772     0071                     LIN_calcParity@CMD:	
  1773                           ; 1 bytes @ 0x1
  1774                           
  1775     0071                     i1LIN_getChecksum@data:	
  1776                           ; 1 bytes @ 0x1
  1777                           
  1778     0071                     i1memcpy@n:	
  1779                           ; 1 bytes @ 0x1
  1780                           
  1781                           
  1782                           ; 2 bytes @ 0x1
  1783     0071                     	ds	1
  1784     0072                     ??i1_LIN_getChecksum:
  1785     0072                     LIN_calcParity@PID:	
  1786                           ; 1 bytes @ 0x2
  1787                           
  1788     0072                     ___wmul@multiplicand:	
  1789                           ; 1 bytes @ 0x2
  1790                           
  1791     0072                     i1memset@n:	
  1792                           ; 2 bytes @ 0x2
  1793                           
  1794                           
  1795                           ; 2 bytes @ 0x2
  1796     0072                     	ds	1
  1797     0073                     ??i1_memcpy:
  1798                           
  1799                           ; 1 bytes @ 0x3
  1800     0073                     	ds	1
  1801     0074                     ??___wmul:
  1802     0074                     ??i1_memset:	
  1803                           ; 1 bytes @ 0x4
  1804                           
  1805     0074                     i1LIN_getChecksum@length:	
  1806                           ; 1 bytes @ 0x4
  1807                           
  1808     0074                     i1memcpy@d1:	
  1809                           ; 1 bytes @ 0x4
  1810                           
  1811     0074                     ___wmul@product:	
  1812                           ; 1 bytes @ 0x4
  1813                           
  1814                           
  1815                           ; 2 bytes @ 0x4
  1816     0074                     	ds	1
  1817     0075                     i1LIN_getChecksum@i:
  1818     0075                     i1memcpy@tmp:	
  1819                           ; 1 bytes @ 0x5
  1820                           
  1821     0075                     i1memset@dest:	
  1822                           ; 1 bytes @ 0x5
  1823                           
  1824                           
  1825                           ; 1 bytes @ 0x5
  1826     0075                     	ds	1
  1827     0076                     i1memcpy@d:
  1828     0076                     i1memset@p:	
  1829                           ; 1 bytes @ 0x6
  1830                           
  1831     0076                     i1LIN_getChecksum@checksum:	
  1832                           ; 1 bytes @ 0x6
  1833                           
  1834                           
  1835                           ; 2 bytes @ 0x6
  1836     0076                     	ds	1
  1837     0077                     i1memcpy@s:
  1838                           
  1839                           ; 1 bytes @ 0x7
  1840     0077                     	ds	1
  1841     0078                     ?_LIN_queuePacket:
  1842     0078                     LIN_queuePacket@data:	
  1843                           ; 1 bytes @ 0x8
  1844                           
  1845                           
  1846                           ; 1 bytes @ 0x8
  1847     0078                     	ds	1
  1848     0079                     ??_LIN_queuePacket:
  1849                           
  1850                           ; 1 bytes @ 0x9
  1851     0079                     	ds	4
  1852     007D                     ??_LIN_timerHandler:
  1853                           
  1854                           ; 1 bytes @ 0xD
  1855     007D                     	ds	1
  1856     007E                     ??_TMR0_ISR:
  1857     007E                     ??_INTERRUPT_InterruptManager:	
  1858                           ; 1 bytes @ 0xE
  1859                           
  1860                           
  1861                           	psect	cstackBANK0
  1862     004A                     __pcstackBANK0:	
  1863                           ; 1 bytes @ 0xE
  1864                           
  1865     004A                     LIN_queuePacket@cmd:
  1866                           
  1867                           ; 1 bytes @ 0x0
  1868     004A                     	ds	1
  1869     004B                     LIN_queuePacket@i:
  1870                           
  1871                           ; 1 bytes @ 0x1
  1872     004B                     	ds	1
  1873     004C                     LIN_queuePacket@tempSchedule:
  1874                           
  1875                           ; 2 bytes @ 0x2
  1876     004C                     	ds	2
  1877     004E                     ??_LIN_sendPeriodicTx:
  1878                           
  1879                           ; 1 bytes @ 0x4
  1880     004E                     	ds	3
  1881     0051                     LIN_sendPeriodicTx@periodicTx:
  1882                           
  1883                           ; 2 bytes @ 0x7
  1884     0051                     	ds	2
  1885     0053                     ??_LIN_stopTimer:
  1886     0053                     ??_LIN_startPeriod:	
  1887                           ; 1 bytes @ 0x9
  1888                           
  1889     0053                     ?_memset:	
  1890                           ; 1 bytes @ 0x9
  1891                           
  1892     0053                     ?_memcpy:	
  1893                           ; 1 bytes @ 0x9
  1894                           
  1895     0053                     ?_LIN_getChecksum:	
  1896                           ; 1 bytes @ 0x9
  1897                           
  1898     0053                     ??_LIN_disableRx:	
  1899                           ; 1 bytes @ 0x9
  1900                           
  1901     0053                     ??_LIN_enableRx:	
  1902                           ; 1 bytes @ 0x9
  1903                           
  1904     0053                     ??_EUSART_is_rx_ready:	
  1905                           ; 1 bytes @ 0x9
  1906                           
  1907     0053                     ??_EUSART_Read:	
  1908                           ; 1 bytes @ 0x9
  1909                           
  1910     0053                     ??_LIN_sendBreak:	
  1911                           ; 1 bytes @ 0x9
  1912                           
  1913     0053                     ??_EUSART_Write:	
  1914                           ; 1 bytes @ 0x9
  1915                           
  1916     0053                     ??_TMR0_WriteTimer:	
  1917                           ; 1 bytes @ 0x9
  1918                           
  1919     0053                     ?_TMR0_SetInterruptHandler:	
  1920                           ; 1 bytes @ 0x9
  1921                           
  1922     0053                     ?_EUSART_SetRxInterruptHandler:	
  1923                           ; 1 bytes @ 0x9
  1924                           
  1925     0053                     ?_EUSART_SetTxInterruptHandler:	
  1926                           ; 1 bytes @ 0x9
  1927                           
  1928     0053                     ?_EUSART_SetFramingErrorHandler:	
  1929                           ; 1 bytes @ 0x9
  1930                           
  1931     0053                     ?_EUSART_SetOverrunErrorHandler:	
  1932                           ; 1 bytes @ 0x9
  1933                           
  1934     0053                     ?_EUSART_SetErrorHandler:	
  1935                           ; 1 bytes @ 0x9
  1936                           
  1937     0053                     ??_OSCILLATOR_Initialize:	
  1938                           ; 1 bytes @ 0x9
  1939                           
  1940     0053                     ??_WDT_Initialize:	
  1941                           ; 1 bytes @ 0x9
  1942                           
  1943     0053                     ??_PIN_MANAGER_Initialize:	
  1944                           ; 1 bytes @ 0x9
  1945                           
  1946     0053                     LIN_getChecksum@pid:	
  1947                           ; 1 bytes @ 0x9
  1948                           
  1949     0053                     TMR0_WriteTimer@timerVal:	
  1950                           ; 1 bytes @ 0x9
  1951                           
  1952     0053                     memcpy@s1:	
  1953                           ; 1 bytes @ 0x9
  1954                           
  1955     0053                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1956                           ; 1 bytes @ 0x9
  1957                           
  1958     0053                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1959                           ; 2 bytes @ 0x9
  1960                           
  1961     0053                     EUSART_SetErrorHandler@interruptHandler:	
  1962                           ; 2 bytes @ 0x9
  1963                           
  1964     0053                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1965                           ; 2 bytes @ 0x9
  1966                           
  1967     0053                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1968                           ; 2 bytes @ 0x9
  1969                           
  1970     0053                     TMR0_SetInterruptHandler@InterruptHandler:	
  1971                           ; 2 bytes @ 0x9
  1972                           
  1973     0053                     memset@c:	
  1974                           ; 2 bytes @ 0x9
  1975                           
  1976                           
  1977                           ; 2 bytes @ 0x9
  1978     0053                     	ds	1
  1979     0054                     ??_LIN_startTimer:
  1980     0054                     LIN_getChecksum@data:	
  1981                           ; 1 bytes @ 0xA
  1982                           
  1983     0054                     LIN_startTimer@timeout:	
  1984                           ; 1 bytes @ 0xA
  1985                           
  1986     0054                     EUSART_Read@readValue:	
  1987                           ; 1 bytes @ 0xA
  1988                           
  1989     0054                     EUSART_Write@txData:	
  1990                           ; 1 bytes @ 0xA
  1991                           
  1992     0054                     memcpy@n:	
  1993                           ; 1 bytes @ 0xA
  1994                           
  1995                           
  1996                           ; 2 bytes @ 0xA
  1997     0054                     	ds	1
  1998     0055                     ??_LIN_setTimerHandler:
  1999     0055                     ??_LIN_getChecksum:	
  2000                           ; 1 bytes @ 0xB
  2001                           
  2002     0055                     ??_LIN_sendPacket:	
  2003                           ; 1 bytes @ 0xB
  2004                           
  2005     0055                     ??_TMR0_SetInterruptHandler:	
  2006                           ; 1 bytes @ 0xB
  2007                           
  2008     0055                     ??_EUSART_SetRxInterruptHandler:	
  2009                           ; 1 bytes @ 0xB
  2010                           
  2011     0055                     ??_EUSART_SetTxInterruptHandler:	
  2012                           ; 1 bytes @ 0xB
  2013                           
  2014     0055                     ??_EUSART_SetFramingErrorHandler:	
  2015                           ; 1 bytes @ 0xB
  2016                           
  2017     0055                     ??_EUSART_SetOverrunErrorHandler:	
  2018                           ; 1 bytes @ 0xB
  2019                           
  2020     0055                     ??_EUSART_SetErrorHandler:	
  2021                           ; 1 bytes @ 0xB
  2022                           
  2023     0055                     ??_TMR0_Initialize:	
  2024                           ; 1 bytes @ 0xB
  2025                           
  2026     0055                     ?_LIN_init:	
  2027                           ; 1 bytes @ 0xB
  2028                           
  2029     0055                     ??_EUSART_Initialize:	
  2030                           ; 1 bytes @ 0xB
  2031                           
  2032     0055                     LIN_init@table:	
  2033                           ; 1 bytes @ 0xB
  2034                           
  2035     0055                     memset@n:	
  2036                           ; 2 bytes @ 0xB
  2037                           
  2038                           
  2039                           ; 2 bytes @ 0xB
  2040     0055                     	ds	1
  2041     0056                     ??_memcpy:
  2042     0056                     LIN_sendPacket@i:	
  2043                           ; 1 bytes @ 0xC
  2044                           
  2045                           
  2046                           ; 1 bytes @ 0xC
  2047     0056                     	ds	1
  2048     0057                     ??_memset:
  2049     0057                     LIN_getChecksum@length:	
  2050                           ; 1 bytes @ 0xD
  2051                           
  2052     0057                     memcpy@tmp:	
  2053                           ; 1 bytes @ 0xD
  2054                           
  2055     0057                     LIN_init@processData:	
  2056                           ; 1 bytes @ 0xD
  2057                           
  2058                           
  2059                           ; 2 bytes @ 0xD
  2060     0057                     	ds	1
  2061     0058                     LIN_getChecksum@i:
  2062     0058                     memcpy@d:	
  2063                           ; 1 bytes @ 0xE
  2064                           
  2065     0058                     memset@p:	
  2066                           ; 1 bytes @ 0xE
  2067                           
  2068                           
  2069                           ; 1 bytes @ 0xE
  2070     0058                     	ds	1
  2071     0059                     ??_LIN_init:
  2072     0059                     LIN_init@tableLength:	
  2073                           ; 1 bytes @ 0xF
  2074                           
  2075     0059                     memcpy@s:	
  2076                           ; 1 bytes @ 0xF
  2077                           
  2078     0059                     memset@dest:	
  2079                           ; 1 bytes @ 0xF
  2080                           
  2081     0059                     LIN_getChecksum@checksum:	
  2082                           ; 1 bytes @ 0xF
  2083                           
  2084                           
  2085                           ; 2 bytes @ 0xF
  2086     0059                     	ds	1
  2087     005A                     ??_LIN_Master_Initialize:
  2088     005A                     ??_SYSTEM_Initialize:	
  2089                           ; 1 bytes @ 0x10
  2090                           
  2091     005A                     memcpy@d1:	
  2092                           ; 1 bytes @ 0x10
  2093                           
  2094                           
  2095                           ; 1 bytes @ 0x10
  2096     005A                     	ds	1
  2097     005B                     ??_LIN_receivePacket:
  2098     005B                     ??_LIN_getPacket:	
  2099                           ; 1 bytes @ 0x11
  2100                           
  2101     005B                     LIN_getPacket@cmd:	
  2102                           ; 1 bytes @ 0x11
  2103                           
  2104                           
  2105                           ; 1 bytes @ 0x11
  2106     005B                     	ds	1
  2107     005C                     LIN_getPacket@data:
  2108                           
  2109                           ; 1 bytes @ 0x12
  2110     005C                     	ds	1
  2111     005D                     ??_processLIN:
  2112     005D                     processLIN@tempRxData:	
  2113                           ; 1 bytes @ 0x13
  2114                           
  2115                           
  2116                           ; 8 bytes @ 0x13
  2117     005D                     	ds	8
  2118     0065                     processLIN@cmd:
  2119                           
  2120                           ; 1 bytes @ 0x1B
  2121     0065                     	ds	1
  2122                           
  2123                           	psect	maintext
  2124     0192                     __pmaintext:	
  2125 ;;
  2126 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2127 ;;
  2128 ;; *************** function _main *****************
  2129 ;; Defined at:
  2130 ;;		line 74 in file "main.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  2  494[None  ] int 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : B1F/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2144 ;;      Params:         0       0       0       0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0
  2146 ;;      Temps:          0       0       1       0       0       0       0       0
  2147 ;;      Totals:         0       0       1       0       0       0       0       0
  2148 ;;Total ram usage:        1 bytes
  2149 ;; Hardware stack levels required when called: 11
  2150 ;; This function calls:
  2151 ;;		_LIN_handler
  2152 ;;		_SYSTEM_Initialize
  2153 ;; This function is called by:
  2154 ;;		Startup code after reset
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158     0192                     _main:	
  2159                           ;psect for function _main
  2160                           
  2161     0192                     l2360:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2164                           
  2165                           
  2166                           ;main.c: 77:   SYSTEM_Initialize();
  2167     0192  3186  2608  3181   	fcall	_SYSTEM_Initialize
  2168     0195                     l2362:
  2169                           
  2170                           ;main.c: 83:   (INTCONbits.GIE = 1);
  2171     0195  178B               	bsf	11,7	;volatile
  2172     0196                     l2364:
  2173                           
  2174                           ;main.c: 86:   (INTCONbits.PEIE = 1);
  2175     0196  170B               	bsf	11,6	;volatile
  2176     0197                     l2366:
  2177                           
  2178                           ;main.c: 94:   SW_STATE_Data[0] = 0x24;
  2179     0197  3024               	movlw	36
  2180     0198  0020               	movlb	0	; select bank0
  2181     0199  00C2               	movwf	_SW_STATE_Data
  2182     019A                     l2368:
  2183                           
  2184                           ;main.c: 95:   SW_STATE_Data[1] = 0x08;
  2185     019A  3008               	movlw	8
  2186     019B  00C3               	movwf	_SW_STATE_Data+1
  2187     019C                     l2370:
  2188                           
  2189                           ;main.c: 96:   SW_STATE_Data[2] = 0x94;
  2190     019C  3094               	movlw	148
  2191     019D  00C4               	movwf	_SW_STATE_Data+2
  2192     019E                     l2372:
  2193                           
  2194                           ;main.c: 97:   SW_STATE_Data[3] = 0x00;
  2195     019E  01C5               	clrf	_SW_STATE_Data+3
  2196     019F                     l2374:
  2197                           
  2198                           ;main.c: 98:   SW_STATE_Data[4] = 0x2F;
  2199     019F  302F               	movlw	47
  2200     01A0  00C6               	movwf	_SW_STATE_Data+4
  2201     01A1                     l2376:
  2202                           
  2203                           ;main.c: 99:   SW_STATE_Data[5] = 0x00;
  2204     01A1  01C7               	clrf	_SW_STATE_Data+5
  2205     01A2                     l2378:
  2206                           
  2207                           ;main.c: 100:   SW_STATE_Data[6] = 0xA3;
  2208     01A2  30A3               	movlw	163
  2209     01A3  00C8               	movwf	_SW_STATE_Data+6
  2210     01A4                     l2380:
  2211                           
  2212                           ;main.c: 101:   SW_STATE_Data[7] = 0xBE;
  2213     01A4  30BE               	movlw	190
  2214     01A5  00C9               	movwf	_SW_STATE_Data+7
  2215     01A6                     l2382:
  2216                           
  2217                           ;main.c: 104:   {;main.c: 106:     LIN_handler();
  2218     01A6  3182  228E  3181   	fcall	_LIN_handler
  2219     01A9                     l2384:
  2220                           
  2221                           ;main.c: 109:     if (PORTAbits.RA0 == 0)
  2222     01A9  0020               	movlb	0	; select bank0
  2223     01AA  180C               	btfsc	12,0	;volatile
  2224     01AB  29AD               	goto	u1841
  2225     01AC  29AE               	goto	u1840
  2226     01AD                     u1841:
  2227     01AD  29B3               	goto	l500
  2228     01AE                     u1840:
  2229     01AE                     l497:	
  2230                           ;main.c: 110:     {;main.c: 111:       do { LATBbits.LATB5 = 1; } while(0);
  2231                           
  2232     01AE  0022               	movlb	2	; select bank2
  2233     01AF  168D               	bsf	13,5	;volatile
  2234     01B0                     l498:
  2235                           
  2236                           ;main.c: 112:       ((SW_STATE_Data[5]) |= (1 << (5)));
  2237     01B0  0020               	movlb	0	; select bank0
  2238     01B1  16C7               	bsf	_SW_STATE_Data+5,5
  2239                           
  2240                           ;main.c: 113:     }
  2241     01B2  29BB               	goto	l2388
  2242     01B3                     l500:	
  2243                           ;main.c: 115:     {;main.c: 116:       do { LATBbits.LATB5 = 0; } while(0);
  2244                           
  2245     01B3  0022               	movlb	2	; select bank2
  2246     01B4  128D               	bcf	13,5	;volatile
  2247     01B5                     l2386:
  2248                           
  2249                           ;main.c: 117:       ((SW_STATE_Data[5]) &= (~(1 << (5))));
  2250     01B5  30DF               	movlw	223
  2251     01B6  0021               	movlb	1	; select bank1
  2252     01B7  00D1               	movwf	??_main^(0+128)
  2253     01B8  0851               	movf	??_main^(0+128),w
  2254     01B9  0020               	movlb	0	; select bank0
  2255     01BA  05C7               	andwf	_SW_STATE_Data+5,f
  2256     01BB                     l2388:
  2257                           
  2258                           ;main.c: 121:     if (PORTAbits.RA1 == 0)
  2259     01BB  188C               	btfsc	12,1	;volatile
  2260     01BC  29BE               	goto	u1851
  2261     01BD  29BF               	goto	u1850
  2262     01BE                     u1851:
  2263     01BE  29C4               	goto	l506
  2264     01BF                     u1850:
  2265     01BF                     l503:	
  2266                           ;main.c: 122:     {;main.c: 123:       do { LATBbits.LATB4 = 1; } while(0);
  2267                           
  2268     01BF  0022               	movlb	2	; select bank2
  2269     01C0  160D               	bsf	13,4	;volatile
  2270     01C1                     l504:
  2271                           
  2272                           ;main.c: 124:       ((SW_STATE_Data[2]) |= (1 << (0)));
  2273     01C1  0020               	movlb	0	; select bank0
  2274     01C2  1444               	bsf	_SW_STATE_Data+2,0
  2275                           
  2276                           ;main.c: 125:     }
  2277     01C3  29CC               	goto	l2392
  2278     01C4                     l506:	
  2279                           ;main.c: 127:     {;main.c: 128:       do { LATBbits.LATB4 = 0; } while(0);
  2280                           
  2281     01C4  0022               	movlb	2	; select bank2
  2282     01C5  120D               	bcf	13,4	;volatile
  2283     01C6                     l2390:
  2284                           
  2285                           ;main.c: 129:       ((SW_STATE_Data[2]) &= (~(1 << (0))));
  2286     01C6  30FE               	movlw	254
  2287     01C7  0021               	movlb	1	; select bank1
  2288     01C8  00D1               	movwf	??_main^(0+128)
  2289     01C9  0851               	movf	??_main^(0+128),w
  2290     01CA  0020               	movlb	0	; select bank0
  2291     01CB  05C4               	andwf	_SW_STATE_Data+2,f
  2292     01CC                     l2392:
  2293                           
  2294                           ;main.c: 133:     if (PORTAbits.RA2 == 0)
  2295     01CC  190C               	btfsc	12,2	;volatile
  2296     01CD  29CF               	goto	u1861
  2297     01CE  29D0               	goto	u1860
  2298     01CF                     u1861:
  2299     01CF  29D5               	goto	l512
  2300     01D0                     u1860:
  2301     01D0                     l509:	
  2302                           ;main.c: 134:     {;main.c: 135:       do { LATBbits.LATB3 = 1; } while(0);
  2303                           
  2304     01D0  0022               	movlb	2	; select bank2
  2305     01D1  158D               	bsf	13,3	;volatile
  2306     01D2                     l510:
  2307                           
  2308                           ;main.c: 136:       ((SW_STATE_Data[1]) |= (1 << (3)));
  2309     01D2  0020               	movlb	0	; select bank0
  2310     01D3  15C3               	bsf	_SW_STATE_Data+1,3
  2311                           
  2312                           ;main.c: 137:     }
  2313     01D4  29DD               	goto	l2396
  2314     01D5                     l512:	
  2315                           ;main.c: 139:     {;main.c: 140:       do { LATBbits.LATB3 = 0; } while(0);
  2316                           
  2317     01D5  0022               	movlb	2	; select bank2
  2318     01D6  118D               	bcf	13,3	;volatile
  2319     01D7                     l2394:
  2320                           
  2321                           ;main.c: 141:       ((SW_STATE_Data[1]) &= (~(1 << (3))));
  2322     01D7  30F7               	movlw	247
  2323     01D8  0021               	movlb	1	; select bank1
  2324     01D9  00D1               	movwf	??_main^(0+128)
  2325     01DA  0851               	movf	??_main^(0+128),w
  2326     01DB  0020               	movlb	0	; select bank0
  2327     01DC  05C3               	andwf	_SW_STATE_Data+1,f
  2328     01DD                     l2396:
  2329                           
  2330                           ;main.c: 145:     if (PORTAbits.RA3 == 0)
  2331     01DD  198C               	btfsc	12,3	;volatile
  2332     01DE  29E0               	goto	u1871
  2333     01DF  29E1               	goto	u1870
  2334     01E0                     u1871:
  2335     01E0  29E6               	goto	l518
  2336     01E1                     u1870:
  2337     01E1                     l515:	
  2338                           ;main.c: 146:     {;main.c: 147:       do { LATBbits.LATB2 = 1; } while(0);
  2339                           
  2340     01E1  0022               	movlb	2	; select bank2
  2341     01E2  150D               	bsf	13,2	;volatile
  2342     01E3                     l516:
  2343                           
  2344                           ;main.c: 148:       ((SW_STATE_Data[1]) |= (1 << (6)));
  2345     01E3  0020               	movlb	0	; select bank0
  2346     01E4  1743               	bsf	_SW_STATE_Data+1,6
  2347                           
  2348                           ;main.c: 150:     }
  2349     01E5  29EE               	goto	l2400
  2350     01E6                     l518:	
  2351                           ;main.c: 152:     {;main.c: 153:       do { LATBbits.LATB2 = 0; } while(0);
  2352                           
  2353     01E6  0022               	movlb	2	; select bank2
  2354     01E7  110D               	bcf	13,2	;volatile
  2355     01E8                     l2398:
  2356                           
  2357                           ;main.c: 154:       ((SW_STATE_Data[1]) &= (~(1 << (6))));
  2358     01E8  30BF               	movlw	191
  2359     01E9  0021               	movlb	1	; select bank1
  2360     01EA  00D1               	movwf	??_main^(0+128)
  2361     01EB  0851               	movf	??_main^(0+128),w
  2362     01EC  0020               	movlb	0	; select bank0
  2363     01ED  05C3               	andwf	_SW_STATE_Data+1,f
  2364     01EE                     l2400:
  2365                           
  2366                           ;main.c: 159:     if (PORTAbits.RA4 == 0)
  2367     01EE  1A0C               	btfsc	12,4	;volatile
  2368     01EF  29F1               	goto	u1881
  2369     01F0  29F2               	goto	u1880
  2370     01F1                     u1881:
  2371     01F1  29F7               	goto	l524
  2372     01F2                     u1880:
  2373     01F2                     l521:	
  2374                           ;main.c: 160:    {;main.c: 161:       do { LATBbits.LATB1 = 1; } while(0);
  2375                           
  2376     01F2  0022               	movlb	2	; select bank2
  2377     01F3  148D               	bsf	13,1	;volatile
  2378     01F4                     l522:
  2379                           
  2380                           ;main.c: 162:       ((SW_STATE_Data[1]) |= (1 << (4)));
  2381     01F4  0020               	movlb	0	; select bank0
  2382     01F5  1643               	bsf	_SW_STATE_Data+1,4
  2383                           
  2384                           ;main.c: 164:     }
  2385     01F6  29FF               	goto	l2404
  2386     01F7                     l524:	
  2387                           ;main.c: 166:     {;main.c: 167:       do { LATBbits.LATB1 = 0; } while(0);
  2388                           
  2389     01F7  0022               	movlb	2	; select bank2
  2390     01F8  108D               	bcf	13,1	;volatile
  2391     01F9                     l2402:
  2392                           
  2393                           ;main.c: 168:       ((SW_STATE_Data[1]) &= (~(1 << (4))));
  2394     01F9  30EF               	movlw	239
  2395     01FA  0021               	movlb	1	; select bank1
  2396     01FB  00D1               	movwf	??_main^(0+128)
  2397     01FC  0851               	movf	??_main^(0+128),w
  2398     01FD  0020               	movlb	0	; select bank0
  2399     01FE  05C3               	andwf	_SW_STATE_Data+1,f
  2400     01FF                     l2404:
  2401                           
  2402                           ;main.c: 173:     if (PORTCbits.RC3 == 0)
  2403     01FF  198E               	btfsc	14,3	;volatile
  2404     0200  2A02               	goto	u1891
  2405     0201  2A03               	goto	u1890
  2406     0202                     u1891:
  2407     0202  2A08               	goto	l530
  2408     0203                     u1890:
  2409     0203                     l527:	
  2410                           ;main.c: 174:    {;main.c: 175:       do { LATBbits.LATB0 = 1; } while(0);
  2411                           
  2412     0203  0022               	movlb	2	; select bank2
  2413     0204  140D               	bsf	13,0	;volatile
  2414     0205                     l528:
  2415                           
  2416                           ;main.c: 177:       ((SW_STATE_Data[1]) |= (1 << (5)));
  2417     0205  0020               	movlb	0	; select bank0
  2418     0206  16C3               	bsf	_SW_STATE_Data+1,5
  2419                           
  2420                           ;main.c: 178:     }
  2421     0207  29A6               	goto	l2382
  2422     0208                     l530:	
  2423                           ;main.c: 180:     {;main.c: 181:       do { LATBbits.LATB0 = 0; } while(0);
  2424                           
  2425     0208  0022               	movlb	2	; select bank2
  2426     0209  100D               	bcf	13,0	;volatile
  2427     020A                     l2406:
  2428                           
  2429                           ;main.c: 183:       ((SW_STATE_Data[1]) &= (~(1 << (5))));
  2430     020A  30DF               	movlw	223
  2431     020B  0021               	movlb	1	; select bank1
  2432     020C  00D1               	movwf	??_main^(0+128)
  2433     020D  0851               	movf	??_main^(0+128),w
  2434     020E  0020               	movlb	0	; select bank0
  2435     020F  05C3               	andwf	_SW_STATE_Data+1,f
  2436     0210  29A6               	goto	l2382
  2437     0211  3180  2838         	ljmp	start
  2438     0213                     __end_of_main:
  2439                           
  2440                           	psect	text1
  2441     0608                     __ptext1:	
  2442 ;; *************** function _SYSTEM_Initialize *****************
  2443 ;; Defined at:
  2444 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2458 ;;      Params:         0       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0
  2461 ;;      Totals:         0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        0 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 10
  2465 ;; This function calls:
  2466 ;;		_EUSART_Initialize
  2467 ;;		_LIN_Master_Initialize
  2468 ;;		_OSCILLATOR_Initialize
  2469 ;;		_PIN_MANAGER_Initialize
  2470 ;;		_TMR0_Initialize
  2471 ;;		_WDT_Initialize
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477     0608                     _SYSTEM_Initialize:	
  2478                           ;psect for function _SYSTEM_Initialize
  2479                           
  2480     0608                     l2220:	
  2481                           ;incstack = 0
  2482                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2483                           
  2484                           
  2485                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2486     0608  3185  2591  3186   	fcall	_PIN_MANAGER_Initialize
  2487                           
  2488                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2489     060B  3186  2646  3186   	fcall	_OSCILLATOR_Initialize
  2490                           
  2491                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2492     060E  3186  26AF  3186   	fcall	_WDT_Initialize
  2493                           
  2494                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2495     0611  3185  25F4  3186   	fcall	_TMR0_Initialize
  2496                           
  2497                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2498     0614  3183  2307  3186   	fcall	_EUSART_Initialize
  2499                           
  2500                           ;mcc_generated_files/mcc.c: 58:     LIN_Master_Initialize();
  2501     0617  3186  262B  3186   	fcall	_LIN_Master_Initialize
  2502     061A                     l429:
  2503     061A  0008               	return
  2504     061B                     __end_of_SYSTEM_Initialize:
  2505                           
  2506                           	psect	text2
  2507     06AF                     __ptext2:	
  2508 ;; *************** function _WDT_Initialize *****************
  2509 ;; Defined at:
  2510 ;;		line 75 in file "mcc_generated_files/mcc.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2524 ;;      Params:         0       0       0       0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 6
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_SYSTEM_Initialize
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538     06AF                     _WDT_Initialize:	
  2539                           ;psect for function _WDT_Initialize
  2540                           
  2541     06AF                     l2118:	
  2542                           ;incstack = 0
  2543                           ; Regs used in _WDT_Initialize: [wreg]
  2544                           
  2545                           
  2546                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x12;
  2547     06AF  3012               	movlw	18
  2548     06B0  0021               	movlb	1	; select bank1
  2549     06B1  0097               	movwf	23	;volatile
  2550     06B2                     l438:
  2551     06B2  0008               	return
  2552     06B3                     __end_of_WDT_Initialize:
  2553                           
  2554                           	psect	text3
  2555     05F4                     __ptext3:	
  2556 ;; *************** function _TMR0_Initialize *****************
  2557 ;; Defined at:
  2558 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2572 ;;      Params:         0       0       0       0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 7
  2579 ;; This function calls:
  2580 ;;		_TMR0_SetInterruptHandler
  2581 ;; This function is called by:
  2582 ;;		_SYSTEM_Initialize
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586     05F4                     _TMR0_Initialize:	
  2587                           ;psect for function _TMR0_Initialize
  2588                           
  2589     05F4                     l2120:	
  2590                           ;incstack = 0
  2591                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2592                           
  2593                           
  2594                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD4 
      +                          & 0x3F));
  2595     05F4  0021               	movlb	1	; select bank1
  2596     05F5  0815               	movf	21,w	;volatile
  2597     05F6  39C0               	andlw	192
  2598     05F7  3814               	iorlw	20
  2599     05F8  0095               	movwf	21	;volatile
  2600     05F9                     l2122:
  2601                           
  2602                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x06;
  2603     05F9  3006               	movlw	6
  2604     05FA  0020               	movlb	0	; select bank0
  2605     05FB  0095               	movwf	21	;volatile
  2606     05FC                     l2124:
  2607                           
  2608                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 6;
  2609     05FC  3006               	movlw	6
  2610     05FD  00B0               	movwf	_timer0ReloadVal	;volatile
  2611     05FE                     l2126:
  2612                           
  2613                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  2614     05FE  110B               	bcf	11,2	;volatile
  2615     05FF                     l2128:
  2616                           
  2617                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  2618     05FF  168B               	bsf	11,5	;volatile
  2619     0600                     l2130:
  2620                           
  2621                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2622     0600  30CB               	movlw	low _TMR0_DefaultInterruptHandler
  2623     0601  00D3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2624     0602  3006               	movlw	high _TMR0_DefaultInterruptHandler
  2625     0603  00D4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2626     0604  3186  267C  3185   	fcall	_TMR0_SetInterruptHandler
  2627     0607                     l455:
  2628     0607  0008               	return
  2629     0608                     __end_of_TMR0_Initialize:
  2630                           
  2631                           	psect	text4
  2632     0591                     __ptext4:	
  2633 ;; *************** function _PIN_MANAGER_Initialize *****************
  2634 ;; Defined at:
  2635 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2649 ;;      Params:         0       0       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 6
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_SYSTEM_Initialize
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663     0591                     _PIN_MANAGER_Initialize:	
  2664                           ;psect for function _PIN_MANAGER_Initialize
  2665                           
  2666     0591                     l2092:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2669                           
  2670                           
  2671                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2672     0591  0022               	movlb	2	; select bank2
  2673     0592  0190               	clrf	16	;volatile
  2674                           
  2675                           ;mcc_generated_files/pin_manager.c: 61:     LATA = 0x00;
  2676     0593  018C               	clrf	12	;volatile
  2677                           
  2678                           ;mcc_generated_files/pin_manager.c: 62:     LATB = 0x00;
  2679     0594  018D               	clrf	13	;volatile
  2680                           
  2681                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  2682     0595  018E               	clrf	14	;volatile
  2683     0596                     l2094:
  2684                           
  2685                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0x08;
  2686     0596  3008               	movlw	8
  2687     0597  0021               	movlb	1	; select bank1
  2688     0598  0090               	movwf	16	;volatile
  2689     0599                     l2096:
  2690                           
  2691                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xFF;
  2692     0599  30FF               	movlw	255
  2693     059A  008C               	movwf	12	;volatile
  2694     059B                     l2098:
  2695                           
  2696                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xC0;
  2697     059B  30C0               	movlw	192
  2698     059C  008D               	movwf	13	;volatile
  2699     059D                     l2100:
  2700                           
  2701                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xBF;
  2702     059D  30BF               	movlw	191
  2703     059E  008E               	movwf	14	;volatile
  2704                           
  2705                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x00;
  2706     059F  0023               	movlb	3	; select bank3
  2707     05A0  018D               	clrf	13	;volatile
  2708     05A1                     l2102:
  2709                           
  2710                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x20;
  2711     05A1  3020               	movlw	32
  2712     05A2  008C               	movwf	12	;volatile
  2713     05A3                     l2104:
  2714                           
  2715                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
  2716     05A3  0024               	movlb	4	; select bank4
  2717     05A4  0190               	clrf	16	;volatile
  2718     05A5                     l2106:
  2719                           
  2720                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  2721     05A5  018D               	clrf	13	;volatile
  2722     05A6                     l2108:
  2723                           
  2724                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  2725     05A6  0021               	movlb	1	; select bank1
  2726     05A7  1795               	bsf	21,7	;volatile
  2727     05A8                     l2110:
  2728                           
  2729                           ;mcc_generated_files/pin_manager.c: 90:     APFCON = 0x00;
  2730     05A8  0022               	movlb	2	; select bank2
  2731     05A9  019D               	clrf	29	;volatile
  2732     05AA                     l368:
  2733     05AA  0008               	return
  2734     05AB                     __end_of_PIN_MANAGER_Initialize:
  2735                           
  2736                           	psect	text5
  2737     0646                     __ptext5:	
  2738 ;; *************** function _OSCILLATOR_Initialize *****************
  2739 ;; Defined at:
  2740 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2754 ;;      Params:         0       0       0       0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0       0       0       0
  2757 ;;      Totals:         0       0       0       0       0       0       0       0
  2758 ;;Total ram usage:        0 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 6
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_SYSTEM_Initialize
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768     0646                     _OSCILLATOR_Initialize:	
  2769                           ;psect for function _OSCILLATOR_Initialize
  2770                           
  2771     0646                     l2112:	
  2772                           ;incstack = 0
  2773                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2774                           
  2775                           
  2776                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  2777     0646  3070               	movlw	112
  2778     0647  0021               	movlb	1	; select bank1
  2779     0648  0099               	movwf	25	;volatile
  2780     0649                     l2114:
  2781                           
  2782                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  2783     0649  0198               	clrf	24	;volatile
  2784     064A                     l2116:
  2785                           
  2786                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  2787     064A  0022               	movlb	2	; select bank2
  2788     064B  0196               	clrf	22	;volatile
  2789     064C                     l432:	
  2790                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  2791                           
  2792                           
  2793                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  2794     064C  0021               	movlb	1	; select bank1
  2795     064D  1F1A               	btfss	26,6	;volatile
  2796     064E  2E50               	goto	u1501
  2797     064F  2E51               	goto	u1500
  2798     0650                     u1501:
  2799     0650  2E4C               	goto	l432
  2800     0651                     u1500:
  2801     0651                     l435:
  2802     0651  0008               	return
  2803     0652                     __end_of_OSCILLATOR_Initialize:
  2804                           
  2805                           	psect	text6
  2806     062B                     __ptext6:	
  2807 ;; *************** function _LIN_Master_Initialize *****************
  2808 ;; Defined at:
  2809 ;;		line 43 in file "mcc_generated_files/LINDrivers/lin_app.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2823 ;;      Params:         0       0       0       0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 9
  2830 ;; This function calls:
  2831 ;;		_LIN_init
  2832 ;; This function is called by:
  2833 ;;		_SYSTEM_Initialize
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837     062B                     _LIN_Master_Initialize:	
  2838                           ;psect for function _LIN_Master_Initialize
  2839                           
  2840     062B                     l2048:	
  2841                           ;incstack = 0
  2842                           ; Regs used in _LIN_Master_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2843                           
  2844                           
  2845                           ;mcc_generated_files/LINDrivers/lin_app.c: 45:     LIN_init((sizeof(scheduleTable)/sizeo
      +                          f(lin_cmd_packet_t)), scheduleTable, processLIN);
  2846     062B  3070               	movlw	low (_scheduleTable| (0+32768))
  2847     062C  0020               	movlb	0	; select bank0
  2848     062D  00D5               	movwf	LIN_init@table
  2849     062E  3086               	movlw	high (_scheduleTable| (0+32768))
  2850     062F  00D6               	movwf	LIN_init@table+1
  2851     0630  3052               	movlw	low _processLIN
  2852     0631  00D7               	movwf	LIN_init@processData
  2853     0632  3006               	movlw	high _processLIN
  2854     0633  00D8               	movwf	LIN_init@processData+1
  2855     0634  3001               	movlw	1
  2856     0635  3185  25DE  3186   	fcall	_LIN_init
  2857     0638                     l186:
  2858     0638  0008               	return
  2859     0639                     __end_of_LIN_Master_Initialize:
  2860                           
  2861                           	psect	text7
  2862     05DE                     __ptext7:	
  2863 ;; *************** function _LIN_init *****************
  2864 ;; Defined at:
  2865 ;;		line 60 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  tableLength     1    wreg     unsigned char 
  2868 ;;  table           2   11[BANK0 ] const PTR const struct .
  2869 ;;		 -> scheduleTable(6), 
  2870 ;;  processData     2   13[BANK0 ] PTR FTN()void 
  2871 ;;		 -> processLIN(1), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  tableLength     1   15[BANK0 ] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0, pclath, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2883 ;;      Params:         0       4       0       0       0       0       0       0
  2884 ;;      Locals:         0       1       0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0
  2886 ;;      Totals:         0       5       0       0       0       0       0       0
  2887 ;;Total ram usage:        5 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 8
  2890 ;; This function calls:
  2891 ;;		_LIN_setTimerHandler
  2892 ;;		_LIN_startPeriod
  2893 ;;		_LIN_stopTimer
  2894 ;; This function is called by:
  2895 ;;		_LIN_Master_Initialize
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899     05DE                     _LIN_init:	
  2900                           ;psect for function _LIN_init
  2901                           
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _LIN_init: [wreg+status,2+status,0+pclath+cstack]
  2905                           ;LIN_init@tableLength stored from wreg
  2906     05DE  0020               	movlb	0	; select bank0
  2907     05DF  00D9               	movwf	LIN_init@tableLength
  2908     05E0                     l1860:
  2909                           
  2910                           ;mcc_generated_files/LINDrivers/lin_master.c: 61:     schedule = table;
  2911     05E0  0856               	movf	LIN_init@table+1,w
  2912     05E1  00AD               	movwf	_schedule+1
  2913     05E2  0855               	movf	LIN_init@table,w
  2914     05E3  00AC               	movwf	_schedule
  2915                           
  2916                           ;mcc_generated_files/LINDrivers/lin_master.c: 62:     scheduleLength = tableLength;
  2917     05E4  0859               	movf	LIN_init@tableLength,w
  2918     05E5  00C0               	movwf	_scheduleLength
  2919                           
  2920                           ;mcc_generated_files/LINDrivers/lin_master.c: 63:     LIN_processData = processData;
  2921     05E6  0858               	movf	LIN_init@processData+1,w
  2922     05E7  00AF               	movwf	_LIN_processData+1
  2923     05E8  0857               	movf	LIN_init@processData,w
  2924     05E9  00AE               	movwf	_LIN_processData
  2925     05EA                     l1862:
  2926                           
  2927                           ;mcc_generated_files/LINDrivers/lin_master.c: 64:     LIN_stopTimer();
  2928     05EA  3186  26B3  3185   	fcall	_LIN_stopTimer
  2929                           
  2930                           ;mcc_generated_files/LINDrivers/lin_master.c: 65:     LIN_setTimerHandler();
  2931     05ED  3186  265E  3185   	fcall	_LIN_setTimerHandler
  2932     05F0                     l1864:
  2933                           
  2934                           ;mcc_generated_files/LINDrivers/lin_master.c: 67:     LIN_startPeriod();
  2935     05F0  3186  26B7  3185   	fcall	_LIN_startPeriod
  2936     05F3                     l73:
  2937     05F3  0008               	return
  2938     05F4                     __end_of_LIN_init:
  2939                           
  2940                           	psect	text8
  2941     06B3                     __ptext8:	
  2942 ;; *************** function _LIN_stopTimer *****************
  2943 ;; Defined at:
  2944 ;;		line 270 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		status,2
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2958 ;;      Params:         0       0       0       0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0
  2961 ;;      Totals:         0       0       0       0       0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 6
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_LIN_init
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972     06B3                     _LIN_stopTimer:	
  2973                           ;psect for function _LIN_stopTimer
  2974                           
  2975     06B3                     l1790:	
  2976                           ;incstack = 0
  2977                           ; Regs used in _LIN_stopTimer: [status,2]
  2978                           
  2979                           
  2980                           ;mcc_generated_files/LINDrivers/lin_master.c: 272:     LIN_timerCallBack = 0;
  2981     06B3  0020               	movlb	0	; select bank0
  2982     06B4  01BC               	clrf	_LIN_timerCallBack	;volatile
  2983                           
  2984                           ;mcc_generated_files/LINDrivers/lin_master.c: 273:     LIN_timerRunning = 0;
  2985     06B5  01BE               	clrf	_LIN_timerRunning
  2986     06B6                     l149:
  2987     06B6  0008               	return
  2988     06B7                     __end_of_LIN_stopTimer:
  2989                           
  2990                           	psect	text9
  2991     06B7                     __ptext9:	
  2992 ;; *************** function _LIN_startPeriod *****************
  2993 ;; Defined at:
  2994 ;;		line 276 in file "mcc_generated_files/LINDrivers/lin_master.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		None
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3008 ;;      Params:         0       0       0       0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0
  3011 ;;      Totals:         0       0       0       0       0       0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; Hardware stack levels required when called: 6
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_LIN_init
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022     06B7                     _LIN_startPeriod:	
  3023                           ;psect for function _LIN_startPeriod
  3024                           
  3025     06B7                     l1794:	
  3026                           ;incstack = 0
  3027                           ; Regs used in _LIN_startPeriod: []
  3028                           
  3029                           
  3030                           ;mcc_generated_files/LINDrivers/lin_master.c: 277:     LIN_enablePeriodTx = 1;
  3031     06B7  0020               	movlb	0	; select bank0
  3032     06B8  01BD               	clrf	_LIN_enablePeriodTx
  3033     06B9  0ABD               	incf	_LIN_enablePeriodTx,f
  3034     06BA                     l152:
  3035     06BA  0008               	return
  3036     06BB                     __end_of_LIN_startPeriod:
  3037                           
  3038                           	psect	text10
  3039     065E                     __ptext10:	
  3040 ;; *************** function _LIN_setTimerHandler *****************
  3041 ;; Defined at:
  3042 ;;		line 266 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;		None
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3056 ;;      Params:         0       0       0       0       0       0       0       0
  3057 ;;      Locals:         0       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0
  3059 ;;      Totals:         0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        0 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 7
  3063 ;; This function calls:
  3064 ;;		_TMR0_SetInterruptHandler
  3065 ;; This function is called by:
  3066 ;;		_LIN_init
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070     065E                     _LIN_setTimerHandler:	
  3071                           ;psect for function _LIN_setTimerHandler
  3072                           
  3073     065E                     l1792:	
  3074                           ;incstack = 0
  3075                           ; Regs used in _LIN_setTimerHandler: [wreg+status,2+status,0+pclath+cstack]
  3076                           
  3077                           
  3078                           ;mcc_generated_files/LINDrivers/lin_master.c: 267:     TMR0_SetInterruptHandler(LIN_time
      +                          rHandler);
  3079     065E  30A3               	movlw	low _LIN_timerHandler
  3080     065F  0020               	movlb	0	; select bank0
  3081     0660  00D3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3082     0661  3004               	movlw	high _LIN_timerHandler
  3083     0662  00D4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3084     0663  3186  267C  3186   	fcall	_TMR0_SetInterruptHandler
  3085     0666                     l146:
  3086     0666  0008               	return
  3087     0667                     __end_of_LIN_setTimerHandler:
  3088                           
  3089                           	psect	text11
  3090     067C                     __ptext11:	
  3091 ;; *************** function _TMR0_SetInterruptHandler *****************
  3092 ;; Defined at:
  3093 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  InterruptHan    2    9[BANK0 ] PTR FTN()void 
  3096 ;;		 -> TMR0_DefaultInterruptHandler(1), LIN_timerHandler(1), 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3108 ;;      Params:         0       2       0       0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0
  3111 ;;      Totals:         0       2       0       0       0       0       0       0
  3112 ;;Total ram usage:        2 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 6
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_LIN_setTimerHandler
  3119 ;;		_TMR0_Initialize
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123     067C                     _TMR0_SetInterruptHandler:	
  3124                           ;psect for function _TMR0_SetInterruptHandler
  3125                           
  3126     067C                     l1752:	
  3127                           ;incstack = 0
  3128                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3129                           
  3130                           
  3131                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  3132     067C  0020               	movlb	0	; select bank0
  3133     067D  0854               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3134     067E  00A1               	movwf	_TMR0_InterruptHandler+1
  3135     067F  0853               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3136     0680  00A0               	movwf	_TMR0_InterruptHandler
  3137     0681                     l471:
  3138     0681  0008               	return
  3139     0682                     __end_of_TMR0_SetInterruptHandler:
  3140                           
  3141                           	psect	text12
  3142     0307                     __ptext12:	
  3143 ;; *************** function _EUSART_Initialize *****************
  3144 ;; Defined at:
  3145 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, pclath, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3159 ;;      Params:         0       0       0       0       0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0
  3162 ;;      Totals:         0       0       0       0       0       0       0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 7
  3166 ;; This function calls:
  3167 ;;		_EUSART_SetErrorHandler
  3168 ;;		_EUSART_SetFramingErrorHandler
  3169 ;;		_EUSART_SetOverrunErrorHandler
  3170 ;;		_EUSART_SetRxInterruptHandler
  3171 ;;		_EUSART_SetTxInterruptHandler
  3172 ;; This function is called by:
  3173 ;;		_SYSTEM_Initialize
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177     0307                     _EUSART_Initialize:	
  3178                           ;psect for function _EUSART_Initialize
  3179                           
  3180     0307                     l2056:	
  3181                           ;incstack = 0
  3182                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3183                           
  3184                           
  3185                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3186     0307  0021               	movlb	1	; select bank1
  3187     0308  1291               	bcf	17,5	;volatile
  3188     0309                     l2058:
  3189                           
  3190                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3191     0309  304A               	movlw	low _EUSART_Receive_ISR
  3192     030A  0020               	movlb	0	; select bank0
  3193     030B  00D3               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3194     030C  3003               	movlw	high _EUSART_Receive_ISR
  3195     030D  00D4               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3196     030E  3186  2688  3183   	fcall	_EUSART_SetRxInterruptHandler
  3197     0311                     l2060:
  3198                           
  3199                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  3200     0311  0021               	movlb	1	; select bank1
  3201     0312  1211               	bcf	17,4	;volatile
  3202                           
  3203                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3204     0313  3015               	movlw	low _EUSART_Transmit_ISR
  3205     0314  0020               	movlb	0	; select bank0
  3206     0315  00D3               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3207     0316  3005               	movlw	high _EUSART_Transmit_ISR
  3208     0317  00D4               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3209     0318  3186  2682  3183   	fcall	_EUSART_SetTxInterruptHandler
  3210     031B                     l2062:
  3211                           
  3212                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x18;
  3213     031B  3018               	movlw	24
  3214     031C  0023               	movlb	3	; select bank3
  3215     031D  009F               	movwf	31	;volatile
  3216     031E                     l2064:
  3217                           
  3218                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3219     031E  3090               	movlw	144
  3220     031F  009D               	movwf	29	;volatile
  3221     0320                     l2066:
  3222                           
  3223                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3224     0320  3024               	movlw	36
  3225     0321  009E               	movwf	30	;volatile
  3226     0322                     l2068:
  3227                           
  3228                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xFF;
  3229     0322  30FF               	movlw	255
  3230     0323  009B               	movwf	27	;volatile
  3231     0324                     l2070:
  3232                           
  3233                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x02;
  3234     0324  3002               	movlw	2
  3235     0325  009C               	movwf	28	;volatile
  3236     0326                     l2072:
  3237                           
  3238                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3239     0326  30CC               	movlw	low _EUSART_DefaultFramingErrorHandler
  3240     0327  0020               	movlb	0	; select bank0
  3241     0328  00D3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3242     0329  3006               	movlw	high _EUSART_DefaultFramingErrorHandler
  3243     032A  00D4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3244     032B  3186  2694  3183   	fcall	_EUSART_SetFramingErrorHandler
  3245     032E                     l2074:
  3246                           
  3247                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3248     032E  30BF               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3249     032F  0020               	movlb	0	; select bank0
  3250     0330  00D3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3251     0331  3006               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3252     0332  00D4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3253     0333  3186  268E  3183   	fcall	_EUSART_SetOverrunErrorHandler
  3254     0336                     l2076:
  3255                           
  3256                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3257     0336  30C3               	movlw	low _EUSART_DefaultErrorHandler
  3258     0337  0020               	movlb	0	; select bank0
  3259     0338  00D3               	movwf	EUSART_SetErrorHandler@interruptHandler
  3260     0339  3006               	movlw	high _EUSART_DefaultErrorHandler
  3261     033A  00D4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3262     033B  3186  269A  3183   	fcall	_EUSART_SetErrorHandler
  3263     033E                     l2078:
  3264                           
  3265                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3266     033E  0020               	movlb	0	; select bank0
  3267     033F  01B1               	clrf	_eusartRxLastError	;volatile
  3268     0340                     l2080:
  3269                           
  3270                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3271     0340  01B7               	clrf	_eusartTxHead	;volatile
  3272     0341                     l2082:
  3273                           
  3274                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3275     0341  01B6               	clrf	_eusartTxTail	;volatile
  3276     0342                     l2084:
  3277                           
  3278                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3279     0342  3008               	movlw	8
  3280     0343  00B5               	movwf	_eusartTxBufferRemaining	;volatile
  3281                           
  3282                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3283     0344  01B4               	clrf	_eusartRxHead	;volatile
  3284                           
  3285                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3286     0345  01B3               	clrf	_eusartRxTail	;volatile
  3287                           
  3288                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3289     0346  01B2               	clrf	_eusartRxCount	;volatile
  3290     0347                     l2086:
  3291                           
  3292                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  3293     0347  0021               	movlb	1	; select bank1
  3294     0348  1691               	bsf	17,5	;volatile
  3295     0349                     l268:
  3296     0349  0008               	return
  3297     034A                     __end_of_EUSART_Initialize:
  3298                           
  3299                           	psect	text13
  3300     0682                     __ptext13:	
  3301 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3302 ;; Defined at:
  3303 ;;		line 276 in file "mcc_generated_files/eusart.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3306 ;;		 -> EUSART_Transmit_ISR(1), 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3318 ;;      Params:         0       2       0       0       0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0
  3321 ;;      Totals:         0       2       0       0       0       0       0       0
  3322 ;;Total ram usage:        2 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 6
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_EUSART_Initialize
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332     0682                     _EUSART_SetTxInterruptHandler:	
  3333                           ;psect for function _EUSART_SetTxInterruptHandler
  3334                           
  3335     0682                     l1960:	
  3336                           ;incstack = 0
  3337                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3338                           
  3339                           
  3340                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3341     0682  0020               	movlb	0	; select bank0
  3342     0683  0854               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3343     0684  00AB               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3344     0685  0853               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3345     0686  00AA               	movwf	_EUSART_TxDefaultInterruptHandler
  3346     0687                     l334:
  3347     0687  0008               	return
  3348     0688                     __end_of_EUSART_SetTxInterruptHandler:
  3349                           
  3350                           	psect	text14
  3351     0688                     __ptext14:	
  3352 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3353 ;; Defined at:
  3354 ;;		line 280 in file "mcc_generated_files/eusart.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3357 ;;		 -> EUSART_Receive_ISR(1), 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3369 ;;      Params:         0       2       0       0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0
  3372 ;;      Totals:         0       2       0       0       0       0       0       0
  3373 ;;Total ram usage:        2 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 6
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_EUSART_Initialize
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383     0688                     _EUSART_SetRxInterruptHandler:	
  3384                           ;psect for function _EUSART_SetRxInterruptHandler
  3385                           
  3386     0688                     l1958:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3389                           
  3390                           
  3391                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3392     0688  0020               	movlb	0	; select bank0
  3393     0689  0854               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3394     068A  00A9               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3395     068B  0853               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3396     068C  00A8               	movwf	_EUSART_RxDefaultInterruptHandler
  3397     068D                     l337:
  3398     068D  0008               	return
  3399     068E                     __end_of_EUSART_SetRxInterruptHandler:
  3400                           
  3401                           	psect	text15
  3402     068E                     __ptext15:	
  3403 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3404 ;; Defined at:
  3405 ;;		line 268 in file "mcc_generated_files/eusart.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3408 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3420 ;;      Params:         0       2       0       0       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0
  3423 ;;      Totals:         0       2       0       0       0       0       0       0
  3424 ;;Total ram usage:        2 bytes
  3425 ;; Hardware stack levels used: 1
  3426 ;; Hardware stack levels required when called: 6
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_EUSART_Initialize
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434     068E                     _EUSART_SetOverrunErrorHandler:	
  3435                           ;psect for function _EUSART_SetOverrunErrorHandler
  3436                           
  3437     068E                     l1964:	
  3438                           ;incstack = 0
  3439                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3440                           
  3441                           
  3442                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  3443     068E  0020               	movlb	0	; select bank0
  3444     068F  0854               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3445     0690  00A5               	movwf	_EUSART_OverrunErrorHandler+1
  3446     0691  0853               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3447     0692  00A4               	movwf	_EUSART_OverrunErrorHandler
  3448     0693                     l328:
  3449     0693  0008               	return
  3450     0694                     __end_of_EUSART_SetOverrunErrorHandler:
  3451                           
  3452                           	psect	text16
  3453     0694                     __ptext16:	
  3454 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3455 ;; Defined at:
  3456 ;;		line 264 in file "mcc_generated_files/eusart.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3459 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3471 ;;      Params:         0       2       0       0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0
  3474 ;;      Totals:         0       2       0       0       0       0       0       0
  3475 ;;Total ram usage:        2 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 6
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_EUSART_Initialize
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485     0694                     _EUSART_SetFramingErrorHandler:	
  3486                           ;psect for function _EUSART_SetFramingErrorHandler
  3487                           
  3488     0694                     l1962:	
  3489                           ;incstack = 0
  3490                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3491                           
  3492                           
  3493                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  3494     0694  0020               	movlb	0	; select bank0
  3495     0695  0854               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3496     0696  00A7               	movwf	_EUSART_FramingErrorHandler+1
  3497     0697  0853               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3498     0698  00A6               	movwf	_EUSART_FramingErrorHandler
  3499     0699                     l325:
  3500     0699  0008               	return
  3501     069A                     __end_of_EUSART_SetFramingErrorHandler:
  3502                           
  3503                           	psect	text17
  3504     069A                     __ptext17:	
  3505 ;; *************** function _EUSART_SetErrorHandler *****************
  3506 ;; Defined at:
  3507 ;;		line 272 in file "mcc_generated_files/eusart.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  interruptHan    2    9[BANK0 ] PTR FTN()void 
  3510 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3522 ;;      Params:         0       2       0       0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0
  3525 ;;      Totals:         0       2       0       0       0       0       0       0
  3526 ;;Total ram usage:        2 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 6
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_EUSART_Initialize
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536     069A                     _EUSART_SetErrorHandler:	
  3537                           ;psect for function _EUSART_SetErrorHandler
  3538                           
  3539     069A                     l1966:	
  3540                           ;incstack = 0
  3541                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3542                           
  3543                           
  3544                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  3545     069A  0020               	movlb	0	; select bank0
  3546     069B  0854               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3547     069C  00A3               	movwf	_EUSART_ErrorHandler+1
  3548     069D  0853               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3549     069E  00A2               	movwf	_EUSART_ErrorHandler
  3550     069F                     l331:
  3551     069F  0008               	return
  3552     06A0                     __end_of_EUSART_SetErrorHandler:
  3553                           
  3554                           	psect	text18
  3555     028E                     __ptext18:	
  3556 ;; *************** function _LIN_handler *****************
  3557 ;; Defined at:
  3558 ;;		line 109 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      enum E204
  3565 ;; Registers used:
  3566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3572 ;;      Params:         0       0       0       0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0
  3574 ;;      Temps:          0       0       2       0       0       0       0       0
  3575 ;;      Totals:         0       0       2       0       0       0       0       0
  3576 ;;Total ram usage:        2 bytes
  3577 ;; Hardware stack levels used: 1
  3578 ;; Hardware stack levels required when called: 9
  3579 ;; This function calls:
  3580 ;;		NULL
  3581 ;;		_EUSART_is_rx_ready
  3582 ;;		_LIN_disableRx
  3583 ;;		_LIN_enableRx
  3584 ;;		_LIN_receivePacket
  3585 ;;		_LIN_sendPacket
  3586 ;;		_LIN_startTimer
  3587 ;;		_memset
  3588 ;;		_processLIN
  3589 ;; This function is called by:
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594     028E                     _LIN_handler:	
  3595                           ;psect for function _LIN_handler
  3596                           
  3597     028E                     l2310:	
  3598                           ;incstack = 0
  3599                           ; Regs used in _LIN_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3600                           
  3601                           
  3602                           ;mcc_generated_files/LINDrivers/lin_master.c: 110:     static lin_state_t LIN_state = LI
      +                          N_IDLE;;mcc_generated_files/LINDrivers/lin_master.c: 113:     switch(LIN_state){
  3603     028E  2AEE               	goto	l2352
  3604     028F                     l2312:
  3605                           
  3606                           ;mcc_generated_files/LINDrivers/lin_master.c: 115:             if(LIN_txReady == 1){
  3607     028F  0020               	movlb	0	; select bank0
  3608     0290  0341               	decf	_LIN_txReady,w
  3609     0291  1D03               	btfss	3,2
  3610     0292  2A94               	goto	u1771
  3611     0293  2A95               	goto	u1770
  3612     0294                     u1771:
  3613     0294  2B06               	goto	l105
  3614     0295                     u1770:
  3615     0295                     l2314:
  3616                           
  3617                           ;mcc_generated_files/LINDrivers/lin_master.c: 116:                 LIN_txReady = 0;
  3618     0295  01C1               	clrf	_LIN_txReady
  3619     0296                     l2316:
  3620                           
  3621                           ;mcc_generated_files/LINDrivers/lin_master.c: 117:                 LIN_disableRx();
  3622     0296  3186  26AA  3182   	fcall	_LIN_disableRx
  3623     0299                     l2318:
  3624                           
  3625                           ;mcc_generated_files/LINDrivers/lin_master.c: 119:                 LIN_sendPacket();
  3626     0299  3183  2384  3182   	fcall	_LIN_sendPacket
  3627     029C                     l2320:
  3628                           
  3629                           ;mcc_generated_files/LINDrivers/lin_master.c: 120:                 LIN_state = LIN_TX_IP
      +                          ;
  3630     029C  0020               	movlb	0	; select bank0
  3631     029D  01BA               	clrf	LIN_handler@LIN_state
  3632     029E  0ABA               	incf	LIN_handler@LIN_state,f
  3633                           
  3634                           ;mcc_generated_files/LINDrivers/lin_master.c: 121:             } else {
  3635     029F  2B06               	goto	l105
  3636     02A0                     l94:	
  3637                           ;mcc_generated_files/LINDrivers/lin_master.c: 125:         case LIN_TX_IP:
  3638                           
  3639                           
  3640                           ;mcc_generated_files/LINDrivers/lin_master.c: 127:             if(PIE1bits.TXIE == 0){
  3641     02A0  1A11               	btfsc	17,4	;volatile
  3642     02A1  2AA3               	goto	u1781
  3643     02A2  2AA4               	goto	u1780
  3644     02A3                     u1781:
  3645     02A3  2B06               	goto	l105
  3646     02A4                     u1780:
  3647     02A4                     l2322:
  3648                           
  3649                           ;mcc_generated_files/LINDrivers/lin_master.c: 128:                 if(TXSTAbits.TRMT == 
      +                          1){
  3650     02A4  0023               	movlb	3	; select bank3
  3651     02A5  1C9E               	btfss	30,1	;volatile
  3652     02A6  2AA8               	goto	u1791
  3653     02A7  2AA9               	goto	u1790
  3654     02A8                     u1791:
  3655     02A8  2B06               	goto	l105
  3656     02A9                     u1790:
  3657     02A9                     l2324:
  3658                           
  3659                           ;mcc_generated_files/LINDrivers/lin_master.c: 130:                     if(LIN_rxPacket.r
      +                          xLength > 0){
  3660     02A9  0021               	movlb	1	; select bank1
  3661     02AA  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  3662     02AB  1903               	btfsc	3,2
  3663     02AC  2AAE               	goto	u1801
  3664     02AD  2AAF               	goto	u1800
  3665     02AE                     u1801:
  3666     02AE  2ABA               	goto	l2330
  3667     02AF                     u1800:
  3668     02AF                     l2326:
  3669                           
  3670                           ;mcc_generated_files/LINDrivers/lin_master.c: 132:                         LIN_startTime
      +                          r(LIN_rxPacket.timeout);
  3671     02AF  0843               	movf	(_LIN_rxPacket^(0+128)+11),w
  3672     02B0  3186  2639  3182   	fcall	_LIN_startTimer
  3673     02B3                     l2328:
  3674                           
  3675                           ;mcc_generated_files/LINDrivers/lin_master.c: 133:                         LIN_enableRx(
      +                          );
  3676     02B3  3186  26A5  3182   	fcall	_LIN_enableRx
  3677                           
  3678                           ;mcc_generated_files/LINDrivers/lin_master.c: 134:                         LIN_state = L
      +                          IN_RX_IP;
  3679     02B6  3002               	movlw	2
  3680     02B7  0020               	movlb	0	; select bank0
  3681     02B8  00BA               	movwf	LIN_handler@LIN_state
  3682                           
  3683                           ;mcc_generated_files/LINDrivers/lin_master.c: 135:                     } else {
  3684     02B9  2B06               	goto	l105
  3685     02BA                     l2330:
  3686                           
  3687                           ;mcc_generated_files/LINDrivers/lin_master.c: 136:                         LIN_state = L
      +                          IN_IDLE;
  3688     02BA  0020               	movlb	0	; select bank0
  3689     02BB  01BA               	clrf	LIN_handler@LIN_state
  3690     02BC  2B06               	goto	l105
  3691     02BD                     l2332:
  3692                           
  3693                           ;mcc_generated_files/LINDrivers/lin_master.c: 143:             if(LIN_timerRunning == 0)
      +                          {
  3694     02BD  0020               	movlb	0	; select bank0
  3695     02BE  083E               	movf	_LIN_timerRunning,w
  3696     02BF  1D03               	btfss	3,2
  3697     02C0  2AC2               	goto	u1811
  3698     02C1  2AC3               	goto	u1810
  3699     02C2                     u1811:
  3700     02C2  2AD0               	goto	l2338
  3701     02C3                     u1810:
  3702     02C3                     l2334:
  3703                           
  3704                           ;mcc_generated_files/LINDrivers/lin_master.c: 145:                 LIN_state = LIN_IDLE;
  3705     02C3  01BA               	clrf	LIN_handler@LIN_state
  3706     02C4                     l2336:
  3707                           
  3708                           ;mcc_generated_files/LINDrivers/lin_master.c: 146:                 memset(LIN_rxPacket.r
      +                          awPacket, 0, sizeof(LIN_rxPacket.rawPacket));
  3709     02C4  3000               	movlw	0
  3710     02C5  00D3               	movwf	memset@c
  3711     02C6  00D4               	movwf	memset@c+1
  3712     02C7  300C               	movlw	12
  3713     02C8  00D5               	movwf	memset@n
  3714     02C9  3000               	movlw	0
  3715     02CA  00D6               	movwf	memset@n+1
  3716     02CB  30B8               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3717     02CC  3185  2576  3182   	fcall	_memset
  3718                           
  3719                           ;mcc_generated_files/LINDrivers/lin_master.c: 147:             } else if(EUSART_is_rx_re
      +                          ady()){
  3720     02CF  2B06               	goto	l105
  3721     02D0                     l2338:
  3722     02D0  3186  2667  3182   	fcall	_EUSART_is_rx_ready
  3723     02D3  3A00               	xorlw	0
  3724     02D4  1903               	skipnz
  3725     02D5  2AD7               	goto	u1821
  3726     02D6  2AD8               	goto	u1820
  3727     02D7                     u1821:
  3728     02D7  2B06               	goto	l105
  3729     02D8                     u1820:
  3730     02D8                     l2340:
  3731                           
  3732                           ;mcc_generated_files/LINDrivers/lin_master.c: 148:                 if(LIN_receivePacket(
      +                          ) == 1){
  3733     02D8  3183  23B8  3182   	fcall	_LIN_receivePacket
  3734     02DB  3A01               	xorlw	1
  3735     02DC  1D03               	skipz
  3736     02DD  2ADF               	goto	u1831
  3737     02DE  2AE0               	goto	u1830
  3738     02DF                     u1831:
  3739     02DF  2B06               	goto	l105
  3740     02E0                     u1830:
  3741     02E0                     l2342:
  3742                           
  3743                           ;mcc_generated_files/LINDrivers/lin_master.c: 150:                     LIN_disableRx();
  3744     02E0  3186  26AA  3182   	fcall	_LIN_disableRx
  3745     02E3                     l2344:
  3746                           
  3747                           ;mcc_generated_files/LINDrivers/lin_master.c: 151:                     LIN_state = LIN_R
      +                          X_RDY;
  3748     02E3  3003               	movlw	3
  3749     02E4  0020               	movlb	0	; select bank0
  3750     02E5  00BA               	movwf	LIN_handler@LIN_state
  3751     02E6  2B06               	goto	l105
  3752     02E7                     l2346:
  3753                           
  3754                           ;mcc_generated_files/LINDrivers/lin_master.c: 157:             LIN_processData();
  3755     02E7  0020               	movlb	0	; select bank0
  3756     02E8  082F               	movf	_LIN_processData+1,w
  3757     02E9  008A               	movwf	10
  3758     02EA  082E               	movf	_LIN_processData,w
  3759     02EB  000A               	callw
  3760     02EC  3182               	pagesel	$
  3761     02ED  2ABA               	goto	l2330
  3762     02EE                     l2352:
  3763     02EE  0020               	movlb	0	; select bank0
  3764     02EF  083A               	movf	LIN_handler@LIN_state,w
  3765     02F0  0021               	movlb	1	; select bank1
  3766     02F1  00CF               	movwf	??_LIN_handler^(0+128)
  3767     02F2  01D0               	clrf	(??_LIN_handler^(0+128)+1)
  3768                           
  3769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3770                           ; Switch size 1, requested type "simple"
  3771                           ; Number of cases is 1, Range of values is 0 to 0
  3772                           ; switch strategies available:
  3773                           ; Name         Instructions Cycles
  3774                           ; simple_byte            4     3 (average)
  3775                           ; direct_byte            8     6 (fixed)
  3776                           ; jumptable            260     6 (fixed)
  3777                           ;	Chosen strategy is simple_byte
  3778     02F3  0850               	movf	(??_LIN_handler+1)^(0+128),w
  3779     02F4  3A00               	xorlw	0	; case 0
  3780     02F5  1903               	skipnz
  3781     02F6  2AF8               	goto	l2438
  3782     02F7  2B06               	goto	l105
  3783     02F8                     l2438:
  3784                           
  3785                           ; Switch size 1, requested type "simple"
  3786                           ; Number of cases is 4, Range of values is 0 to 3
  3787                           ; switch strategies available:
  3788                           ; Name         Instructions Cycles
  3789                           ; simple_byte           13     7 (average)
  3790                           ; direct_byte           14     6 (fixed)
  3791                           ; jumptable            260     6 (fixed)
  3792                           ;	Chosen strategy is simple_byte
  3793     02F8  084F               	movf	??_LIN_handler^(0+128),w
  3794     02F9  3A00               	xorlw	0	; case 0
  3795     02FA  1903               	skipnz
  3796     02FB  2A8F               	goto	l2312
  3797     02FC  3A01               	xorlw	1	; case 1
  3798     02FD  1903               	skipnz
  3799     02FE  2AA0               	goto	l94
  3800     02FF  3A03               	xorlw	3	; case 2
  3801     0300  1903               	skipnz
  3802     0301  2ABD               	goto	l2332
  3803     0302  3A01               	xorlw	1	; case 3
  3804     0303  1903               	skipnz
  3805     0304  2AE7               	goto	l2346
  3806     0305  2B06               	goto	l105
  3807     0306                     l105:
  3808     0306  0008               	return
  3809     0307                     __end_of_LIN_handler:
  3810                           
  3811                           	psect	text19
  3812     0652                     __ptext19:	
  3813 ;; *************** function _processLIN *****************
  3814 ;; Defined at:
  3815 ;;		line 49 in file "mcc_generated_files/LINDrivers/lin_app.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  tempRxData      8   19[BANK0 ] unsigned char [8]
  3820 ;;  cmd             1   27[BANK0 ] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3830 ;;      Params:         0       0       0       0       0       0       0       0
  3831 ;;      Locals:         0       9       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0
  3833 ;;      Totals:         0       9       0       0       0       0       0       0
  3834 ;;Total ram usage:        9 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 8
  3837 ;; This function calls:
  3838 ;;		_LIN_getPacket
  3839 ;; This function is called by:
  3840 ;;		_LIN_Master_Initialize
  3841 ;;		_LIN_handler
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845     0652                     _processLIN:	
  3846                           ;psect for function _processLIN
  3847                           
  3848     0652                     l2050:	
  3849                           ;incstack = 0
  3850                           ; Regs used in _processLIN: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3851                           
  3852                           
  3853                           ;mcc_generated_files/LINDrivers/lin_app.c: 50:     uint8_t tempRxData[8];;mcc_generated_
      +                          files/LINDrivers/lin_app.c: 51:     uint8_t cmd;;mcc_generated_files/LINDrivers/lin_app.
      +                          c: 53:     cmd = LIN_getPacket(tempRxData);
  3854     0652  305D               	movlw	(low (processLIN@tempRxData| 0))& (0+255)
  3855     0653  3185  2537  3186   	fcall	_LIN_getPacket
  3856     0656  0020               	movlb	0	; select bank0
  3857     0657  00E5               	movwf	processLIN@cmd
  3858     0658                     l2054:	
  3859                           ;mcc_generated_files/LINDrivers/lin_app.c: 54:     switch(cmd){
  3860                           
  3861     0658  0865               	movf	processLIN@cmd,w
  3862                           
  3863                           ; Switch size 1, requested type "simple"
  3864                           ; Number of cases is 1, Range of values is 1 to 1
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte            4     3 (average)
  3868                           ; direct_byte           11     9 (fixed)
  3869                           ; jumptable            263     9 (fixed)
  3870                           ;	Chosen strategy is simple_byte
  3871     0659  3A01               	xorlw	1	; case 1
  3872     065A  1903               	skipnz
  3873     065B  2E5D               	goto	l193
  3874     065C  2E5D               	goto	l193
  3875     065D                     l193:
  3876     065D  0008               	return
  3877     065E                     __end_of_processLIN:
  3878                           
  3879                           	psect	text20
  3880     0537                     __ptext20:	
  3881 ;; *************** function _LIN_getPacket *****************
  3882 ;; Defined at:
  3883 ;;		line 203 in file "mcc_generated_files/LINDrivers/lin_master.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  data            1    wreg     PTR unsigned char 
  3886 ;;		 -> processLIN@tempRxData(8), 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  data            1   18[BANK0 ] PTR unsigned char 
  3889 ;;		 -> processLIN@tempRxData(8), 
  3890 ;;  cmd             1   17[BANK0 ] unsigned char 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      unsigned char 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3900 ;;      Params:         0       0       0       0       0       0       0       0
  3901 ;;      Locals:         0       2       0       0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0
  3903 ;;      Totals:         0       2       0       0       0       0       0       0
  3904 ;;Total ram usage:        2 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 7
  3907 ;; This function calls:
  3908 ;;		_memcpy
  3909 ;;		_memset
  3910 ;; This function is called by:
  3911 ;;		_processLIN
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915     0537                     _LIN_getPacket:	
  3916                           ;psect for function _LIN_getPacket
  3917                           
  3918                           
  3919                           ;incstack = 0
  3920                           ; Regs used in _LIN_getPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3921                           ;LIN_getPacket@data stored from wreg
  3922     0537  0020               	movlb	0	; select bank0
  3923     0538  00DC               	movwf	LIN_getPacket@data
  3924     0539                     l1928:
  3925                           
  3926                           ;mcc_generated_files/LINDrivers/lin_master.c: 204:     uint8_t cmd = LIN_rxPacket.cmd & 
      +                          0x3F;
  3927     0539  0021               	movlb	1	; select bank1
  3928     053A  0838               	movf	_LIN_rxPacket^(0+128),w
  3929     053B  393F               	andlw	63
  3930     053C  0020               	movlb	0	; select bank0
  3931     053D  00DB               	movwf	LIN_getPacket@cmd
  3932     053E                     l1930:
  3933                           
  3934                           ;mcc_generated_files/LINDrivers/lin_master.c: 206:     memcpy(data, LIN_rxPacket.data, s
      +                          izeof(LIN_rxPacket.data));
  3935     053E  30BA               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  3936     053F  00D3               	movwf	memcpy@s1
  3937     0540  3008               	movlw	8
  3938     0541  00D4               	movwf	memcpy@n
  3939     0542  3000               	movlw	0
  3940     0543  00D5               	movwf	memcpy@n+1
  3941     0544  085C               	movf	LIN_getPacket@data,w
  3942     0545  3184  24CA  3185   	fcall	_memcpy
  3943     0548                     l1932:
  3944                           
  3945                           ;mcc_generated_files/LINDrivers/lin_master.c: 207:     memset(LIN_rxPacket.rawPacket, 0,
      +                           sizeof(LIN_rxPacket.rawPacket));
  3946     0548  3000               	movlw	0
  3947     0549  0020               	movlb	0	; select bank0
  3948     054A  00D3               	movwf	memset@c
  3949     054B  00D4               	movwf	memset@c+1
  3950     054C  300C               	movlw	12
  3951     054D  00D5               	movwf	memset@n
  3952     054E  3000               	movlw	0
  3953     054F  00D6               	movwf	memset@n+1
  3954     0550  30B8               	movlw	(low (_LIN_rxPacket| 0))& (0+255)
  3955     0551  3185  2576  3185   	fcall	_memset
  3956     0554                     l1934:
  3957                           
  3958                           ;mcc_generated_files/LINDrivers/lin_master.c: 209:     return cmd;
  3959     0554  0020               	movlb	0	; select bank0
  3960     0555  085B               	movf	LIN_getPacket@cmd,w
  3961     0556                     l123:
  3962     0556  0008               	return
  3963     0557                     __end_of_LIN_getPacket:
  3964                           
  3965                           	psect	text21
  3966     0576                     __ptext21:	
  3967 ;; *************** function _memset *****************
  3968 ;; Defined at:
  3969 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  dest            1    wreg     PTR void 
  3972 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3973 ;;  c               2    9[BANK0 ] int 
  3974 ;;  n               2   11[BANK0 ] unsigned int 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  dest            1   15[BANK0 ] PTR void 
  3977 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3978 ;;  p               1   14[BANK0 ] PTR unsigned char 
  3979 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      PTR void 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3989 ;;      Params:         0       4       0       0       0       0       0       0
  3990 ;;      Locals:         0       2       0       0       0       0       0       0
  3991 ;;      Temps:          0       1       0       0       0       0       0       0
  3992 ;;      Totals:         0       7       0       0       0       0       0       0
  3993 ;;Total ram usage:        7 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 6
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_LIN_handler
  4000 ;;		_LIN_getPacket
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004     0576                     _memset:	
  4005                           ;psect for function _memset
  4006                           
  4007                           
  4008                           ;incstack = 0
  4009                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4010                           ;memset@dest stored from wreg
  4011     0576  0020               	movlb	0	; select bank0
  4012     0577  00D9               	movwf	memset@dest
  4013     0578                     l1830:
  4014     0578  0859               	movf	memset@dest,w
  4015     0579  00D8               	movwf	memset@p
  4016     057A  2D84               	goto	l1836
  4017     057B                     l1832:
  4018     057B  0858               	movf	memset@p,w
  4019     057C  0086               	movwf	6
  4020     057D  0187               	clrf	7
  4021     057E  0853               	movf	memset@c,w
  4022     057F  0081               	movwf	1
  4023     0580                     l1834:
  4024     0580  3001               	movlw	1
  4025     0581  00D7               	movwf	??_memset
  4026     0582  0857               	movf	??_memset,w
  4027     0583  07D8               	addwf	memset@p,f
  4028     0584                     l1836:
  4029     0584  3001               	movlw	1
  4030     0585  02D5               	subwf	memset@n,f
  4031     0586  3000               	movlw	0
  4032     0587  3BD6               	subwfb	memset@n+1,f
  4033     0588  0A55               	incf	memset@n,w
  4034     0589  1D03               	skipz
  4035     058A  2D8F               	goto	u1231
  4036     058B  0A56               	incf	memset@n+1,w
  4037     058C  1D03               	btfss	3,2
  4038     058D  2D8F               	goto	u1231
  4039     058E  2D90               	goto	u1230
  4040     058F                     u1231:
  4041     058F  2D7B               	goto	l1832
  4042     0590                     u1230:
  4043     0590                     l1152:
  4044     0590  0008               	return
  4045     0591                     __end_of_memset:
  4046                           
  4047                           	psect	text22
  4048     04CA                     __ptext22:	
  4049 ;; *************** function _memcpy *****************
  4050 ;; Defined at:
  4051 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  d1              1    wreg     PTR void 
  4054 ;;		 -> processLIN@tempRxData(8), LIN_packet(11), 
  4055 ;;  s1              1    9[BANK0 ] PTR const void 
  4056 ;;		 -> SW_STATE_Data(8), LIN_rxPacket$data(8), LIN_rxPacket(12), 
  4057 ;;  n               2   10[BANK0 ] unsigned int 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  d1              1   16[BANK0 ] PTR void 
  4060 ;;		 -> processLIN@tempRxData(8), LIN_packet(11), 
  4061 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  4062 ;;		 -> SW_STATE_Data(8), LIN_rxPacket$data(8), LIN_rxPacket(12), 
  4063 ;;  d               1   14[BANK0 ] PTR unsigned char 
  4064 ;;		 -> processLIN@tempRxData(8), LIN_packet(11), 
  4065 ;;  tmp             1   13[BANK0 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      PTR void 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4075 ;;      Params:         0       3       0       0       0       0       0       0
  4076 ;;      Locals:         0       4       0       0       0       0       0       0
  4077 ;;      Temps:          0       1       0       0       0       0       0       0
  4078 ;;      Totals:         0       8       0       0       0       0       0       0
  4079 ;;Total ram usage:        8 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 6
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_LIN_getPacket
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089     04CA                     _memcpy:	
  4090                           ;psect for function _memcpy
  4091                           
  4092                           
  4093                           ;incstack = 0
  4094                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4095                           ;memcpy@d1 stored from wreg
  4096     04CA  0020               	movlb	0	; select bank0
  4097     04CB  00DA               	movwf	memcpy@d1
  4098     04CC                     l1838:
  4099     04CC  0853               	movf	memcpy@s1,w
  4100     04CD  00D9               	movwf	memcpy@s
  4101     04CE  085A               	movf	memcpy@d1,w
  4102     04CF  00D8               	movwf	memcpy@d
  4103     04D0  2CE3               	goto	l1143
  4104     04D1                     l1840:
  4105     04D1  0859               	movf	memcpy@s,w
  4106     04D2  0086               	movwf	6
  4107     04D3  0187               	clrf	7
  4108     04D4  0801               	movf	1,w
  4109     04D5  00D7               	movwf	memcpy@tmp
  4110     04D6                     l1842:
  4111     04D6  3001               	movlw	1
  4112     04D7  00D6               	movwf	??_memcpy
  4113     04D8  0856               	movf	??_memcpy,w
  4114     04D9  07D9               	addwf	memcpy@s,f
  4115     04DA                     l1844:
  4116     04DA  0858               	movf	memcpy@d,w
  4117     04DB  0086               	movwf	6
  4118     04DC  0187               	clrf	7
  4119     04DD  0857               	movf	memcpy@tmp,w
  4120     04DE  0081               	movwf	1
  4121     04DF  3001               	movlw	1
  4122     04E0  00D6               	movwf	??_memcpy
  4123     04E1  0856               	movf	??_memcpy,w
  4124     04E2  07D8               	addwf	memcpy@d,f
  4125     04E3                     l1143:
  4126     04E3  3001               	movlw	1
  4127     04E4  02D4               	subwf	memcpy@n,f
  4128     04E5  3000               	movlw	0
  4129     04E6  3BD5               	subwfb	memcpy@n+1,f
  4130     04E7  0A54               	incf	memcpy@n,w
  4131     04E8  1D03               	skipz
  4132     04E9  2CEE               	goto	u1241
  4133     04EA  0A55               	incf	memcpy@n+1,w
  4134     04EB  1D03               	btfss	3,2
  4135     04EC  2CEE               	goto	u1241
  4136     04ED  2CEF               	goto	u1240
  4137     04EE                     u1241:
  4138     04EE  2CD1               	goto	l1840
  4139     04EF                     u1240:
  4140     04EF                     l1146:
  4141     04EF  0008               	return
  4142     04F0                     __end_of_memcpy:
  4143                           
  4144                           	psect	text23
  4145     0639                     __ptext23:	
  4146 ;; *************** function _LIN_startTimer *****************
  4147 ;; Defined at:
  4148 ;;		line 243 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  timeout         1    wreg     unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  timeout         1   10[BANK0 ] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, pclath, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4162 ;;      Params:         0       0       0       0       0       0       0       0
  4163 ;;      Locals:         0       1       0       0       0       0       0       0
  4164 ;;      Temps:          0       0       0       0       0       0       0       0
  4165 ;;      Totals:         0       1       0       0       0       0       0       0
  4166 ;;Total ram usage:        1 bytes
  4167 ;; Hardware stack levels used: 1
  4168 ;; Hardware stack levels required when called: 7
  4169 ;; This function calls:
  4170 ;;		_TMR0_WriteTimer
  4171 ;; This function is called by:
  4172 ;;		_LIN_handler
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176     0639                     _LIN_startTimer:	
  4177                           ;psect for function _LIN_startTimer
  4178                           
  4179                           
  4180                           ;incstack = 0
  4181                           ; Regs used in _LIN_startTimer: [wreg+status,2+status,0+pclath+cstack]
  4182                           ;LIN_startTimer@timeout stored from wreg
  4183     0639  0020               	movlb	0	; select bank0
  4184     063A  00D4               	movwf	LIN_startTimer@timeout
  4185     063B                     l2002:
  4186                           
  4187                           ;mcc_generated_files/LINDrivers/lin_master.c: 244:     LIN_timeout = timeout;
  4188     063B  0854               	movf	LIN_startTimer@timeout,w
  4189     063C  00E6               	movwf	_LIN_timeout
  4190     063D                     l2004:
  4191                           
  4192                           ;mcc_generated_files/LINDrivers/lin_master.c: 245:     TMR0_WriteTimer(0);
  4193     063D  3000               	movlw	0
  4194     063E  3186  26A0  3186   	fcall	_TMR0_WriteTimer
  4195     0641                     l2006:
  4196                           
  4197                           ;mcc_generated_files/LINDrivers/lin_master.c: 246:     __nop();
  4198     0641  0000               	nop
  4199     0642                     l2008:
  4200                           
  4201                           ;mcc_generated_files/LINDrivers/lin_master.c: 247:     LIN_timerRunning = 1;
  4202     0642  0020               	movlb	0	; select bank0
  4203     0643  01BE               	clrf	_LIN_timerRunning
  4204     0644  0ABE               	incf	_LIN_timerRunning,f
  4205     0645                     l136:
  4206     0645  0008               	return
  4207     0646                     __end_of_LIN_startTimer:
  4208                           
  4209                           	psect	text24
  4210     06A0                     __ptext24:	
  4211 ;; *************** function _TMR0_WriteTimer *****************
  4212 ;; Defined at:
  4213 ;;		line 96 in file "mcc_generated_files/tmr0.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  timerVal        1    wreg     unsigned char 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  timerVal        1    9[BANK0 ] unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4227 ;;      Params:         0       0       0       0       0       0       0       0
  4228 ;;      Locals:         0       1       0       0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0       0
  4230 ;;      Totals:         0       1       0       0       0       0       0       0
  4231 ;;Total ram usage:        1 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 6
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_LIN_startTimer
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241     06A0                     _TMR0_WriteTimer:	
  4242                           ;psect for function _TMR0_WriteTimer
  4243                           
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in _TMR0_WriteTimer: [wreg]
  4247                           ;TMR0_WriteTimer@timerVal stored from wreg
  4248     06A0  0020               	movlb	0	; select bank0
  4249     06A1  00D3               	movwf	TMR0_WriteTimer@timerVal
  4250     06A2                     l1938:
  4251                           
  4252                           ;mcc_generated_files/tmr0.c: 96: void TMR0_WriteTimer(uint8_t timerVal);mcc_generated_fi
      +                          les/tmr0.c: 97: {;mcc_generated_files/tmr0.c: 99:     TMR0 = timerVal;
  4253     06A2  0853               	movf	TMR0_WriteTimer@timerVal,w
  4254     06A3  0095               	movwf	21	;volatile
  4255     06A4                     l461:
  4256     06A4  0008               	return
  4257     06A5                     __end_of_TMR0_WriteTimer:
  4258                           
  4259                           	psect	text25
  4260     0384                     __ptext25:	
  4261 ;; *************** function _LIN_sendPacket *****************
  4262 ;; Defined at:
  4263 ;;		line 182 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;		None
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  i               1   12[BANK0 ] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      void 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4277 ;;      Params:         0       0       0       0       0       0       0       0
  4278 ;;      Locals:         0       1       0       0       0       0       0       0
  4279 ;;      Temps:          0       1       0       0       0       0       0       0
  4280 ;;      Totals:         0       2       0       0       0       0       0       0
  4281 ;;Total ram usage:        2 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 7
  4284 ;; This function calls:
  4285 ;;		_EUSART_Write
  4286 ;;		_LIN_sendBreak
  4287 ;; This function is called by:
  4288 ;;		_LIN_handler
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292     0384                     _LIN_sendPacket:	
  4293                           ;psect for function _LIN_sendPacket
  4294                           
  4295     0384                     l1982:	
  4296                           ;incstack = 0
  4297                           ; Regs used in _LIN_sendPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4298                           
  4299                           
  4300                           ;mcc_generated_files/LINDrivers/lin_master.c: 185:     LIN_sendBreak();
  4301     0384  3186  26C7  3183   	fcall	_LIN_sendBreak
  4302     0387                     l1984:
  4303                           
  4304                           ;mcc_generated_files/LINDrivers/lin_master.c: 186:     EUSART_Write(0x00);
  4305     0387  3000               	movlw	0
  4306     0388  3184  2453  3183   	fcall	_EUSART_Write
  4307     038B                     l1986:
  4308                           
  4309                           ;mcc_generated_files/LINDrivers/lin_master.c: 188:     EUSART_Write(0x55);
  4310     038B  3055               	movlw	85
  4311     038C  3184  2453  3183   	fcall	_EUSART_Write
  4312     038F                     l1988:
  4313                           
  4314                           ;mcc_generated_files/LINDrivers/lin_master.c: 190:     EUSART_Write(LIN_packet.PID);
  4315     038F  0021               	movlb	1	; select bank1
  4316     0390  0844               	movf	_LIN_packet^(0+128),w
  4317     0391  3184  2453  3183   	fcall	_EUSART_Write
  4318     0394                     l1990:
  4319                           
  4320                           ;mcc_generated_files/LINDrivers/lin_master.c: 192:     if(LIN_rxPacket.rxLength == 0){
  4321     0394  0021               	movlb	1	; select bank1
  4322     0395  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  4323     0396  1D03               	btfss	3,2
  4324     0397  2B99               	goto	u1401
  4325     0398  2B9A               	goto	u1400
  4326     0399                     u1401:
  4327     0399  2BB7               	goto	l120
  4328     039A                     u1400:
  4329     039A                     l1992:
  4330                           
  4331                           ;mcc_generated_files/LINDrivers/lin_master.c: 195:         for(uint8_t i = 0; i < LIN_pa
      +                          cket.length; i++){
  4332     039A  0020               	movlb	0	; select bank0
  4333     039B  01D6               	clrf	LIN_sendPacket@i
  4334     039C  2BAA               	goto	l1998
  4335     039D                     l1994:
  4336                           
  4337                           ;mcc_generated_files/LINDrivers/lin_master.c: 196:             EUSART_Write(LIN_packet.d
      +                          ata[i]);
  4338     039D  0856               	movf	LIN_sendPacket@i,w
  4339     039E  3EC5               	addlw	(low ((_LIN_packet| 0+1)))& (0+255)
  4340     039F  0086               	movwf	6
  4341     03A0  0187               	clrf	7
  4342     03A1  0801               	movf	1,w
  4343     03A2  3184  2453  3183   	fcall	_EUSART_Write
  4344     03A5                     l1996:
  4345                           
  4346                           ;mcc_generated_files/LINDrivers/lin_master.c: 197:         }
  4347     03A5  3001               	movlw	1
  4348     03A6  0020               	movlb	0	; select bank0
  4349     03A7  00D5               	movwf	??_LIN_sendPacket
  4350     03A8  0855               	movf	??_LIN_sendPacket,w
  4351     03A9  07D6               	addwf	LIN_sendPacket@i,f
  4352     03AA                     l1998:
  4353     03AA  0021               	movlb	1	; select bank1
  4354     03AB  084E               	movf	(_LIN_packet^(0+128)+10),w
  4355     03AC  0020               	movlb	0	; select bank0
  4356     03AD  0256               	subwf	LIN_sendPacket@i,w
  4357     03AE  1C03               	skipc
  4358     03AF  2BB1               	goto	u1411
  4359     03B0  2BB2               	goto	u1410
  4360     03B1                     u1411:
  4361     03B1  2B9D               	goto	l1994
  4362     03B2                     u1410:
  4363     03B2                     l2000:
  4364                           
  4365                           ;mcc_generated_files/LINDrivers/lin_master.c: 199:         EUSART_Write(LIN_packet.check
      +                          sum);
  4366     03B2  0021               	movlb	1	; select bank1
  4367     03B3  084D               	movf	(_LIN_packet^(0+128)+9),w
  4368     03B4  3184  2453  3183   	fcall	_EUSART_Write
  4369     03B7                     l120:
  4370     03B7  0008               	return
  4371     03B8                     __end_of_LIN_sendPacket:
  4372                           
  4373                           	psect	text26
  4374     06C7                     __ptext26:	
  4375 ;; *************** function _LIN_sendBreak *****************
  4376 ;; Defined at:
  4377 ;;		line 296 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;		None
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		None
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4391 ;;      Params:         0       0       0       0       0       0       0       0
  4392 ;;      Locals:         0       0       0       0       0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0       0       0       0
  4394 ;;      Totals:         0       0       0       0       0       0       0       0
  4395 ;;Total ram usage:        0 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; Hardware stack levels required when called: 6
  4398 ;; This function calls:
  4399 ;;		Nothing
  4400 ;; This function is called by:
  4401 ;;		_LIN_sendPacket
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405     06C7                     _LIN_sendBreak:	
  4406                           ;psect for function _LIN_sendBreak
  4407                           
  4408     06C7                     l1908:	
  4409                           ;incstack = 0
  4410                           ; Regs used in _LIN_sendBreak: []
  4411                           
  4412                           
  4413                           ;mcc_generated_files/LINDrivers/lin_master.c: 297:     TXSTAbits.SENDB = 1;
  4414     06C7  0023               	movlb	3	; select bank3
  4415     06C8  159E               	bsf	30,3	;volatile
  4416     06C9                     l164:
  4417     06C9  0008               	return
  4418     06CA                     __end_of_LIN_sendBreak:
  4419                           
  4420                           	psect	text27
  4421     0453                     __ptext27:	
  4422 ;; *************** function _EUSART_Write *****************
  4423 ;; Defined at:
  4424 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  txData          1    wreg     unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  txData          1   10[BANK0 ] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4438 ;;      Params:         0       0       0       0       0       0       0       0
  4439 ;;      Locals:         0       1       0       0       0       0       0       0
  4440 ;;      Temps:          0       1       0       0       0       0       0       0
  4441 ;;      Totals:         0       2       0       0       0       0       0       0
  4442 ;;Total ram usage:        2 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: 6
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_LIN_sendPacket
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452     0453                     _EUSART_Write:	
  4453                           ;psect for function _EUSART_Write
  4454                           
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4458                           ;EUSART_Write@txData stored from wreg
  4459     0453  0020               	movlb	0	; select bank0
  4460     0454  00D4               	movwf	EUSART_Write@txData
  4461     0455                     l1910:
  4462     0455                     l1912:	
  4463                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4464                           
  4465                           
  4466                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4467     0455  0835               	movf	_eusartTxBufferRemaining,w	;volatile
  4468     0456  1903               	btfsc	3,2
  4469     0457  2C59               	goto	u1331
  4470     0458  2C5A               	goto	u1330
  4471     0459                     u1331:
  4472     0459  2C55               	goto	l1912
  4473     045A                     u1330:
  4474     045A                     l292:
  4475                           
  4476                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4477     045A  0021               	movlb	1	; select bank1
  4478     045B  1A11               	btfsc	17,4	;volatile
  4479     045C  2C5E               	goto	u1341
  4480     045D  2C5F               	goto	u1340
  4481     045E                     u1341:
  4482     045E  2C64               	goto	l293
  4483     045F                     u1340:
  4484     045F                     l1914:
  4485                           
  4486                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4487     045F  0020               	movlb	0	; select bank0
  4488     0460  0854               	movf	EUSART_Write@txData,w
  4489     0461  0023               	movlb	3	; select bank3
  4490     0462  009A               	movwf	26	;volatile
  4491                           
  4492                           ;mcc_generated_files/eusart.c: 182:     }
  4493     0463  2C79               	goto	l1926
  4494     0464                     l293:	
  4495                           ;mcc_generated_files/eusart.c: 183:     else
  4496                           
  4497                           
  4498                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4499     0464  1211               	bcf	17,4	;volatile
  4500     0465                     l1916:
  4501                           
  4502                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4503     0465  0020               	movlb	0	; select bank0
  4504     0466  0837               	movf	_eusartTxHead,w
  4505     0467  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4506     0468  0086               	movwf	6
  4507     0469  0187               	clrf	7
  4508     046A  0854               	movf	EUSART_Write@txData,w
  4509     046B  0081               	movwf	1
  4510     046C                     l1918:
  4511     046C  3001               	movlw	1
  4512     046D  00D3               	movwf	??_EUSART_Write
  4513     046E  0853               	movf	??_EUSART_Write,w
  4514     046F  07B7               	addwf	_eusartTxHead,f	;volatile
  4515     0470                     l1920:
  4516                           
  4517                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4518     0470  3008               	movlw	8
  4519     0471  0237               	subwf	_eusartTxHead,w	;volatile
  4520     0472  1C03               	skipc
  4521     0473  2C75               	goto	u1351
  4522     0474  2C76               	goto	u1350
  4523     0475                     u1351:
  4524     0475  2C77               	goto	l1924
  4525     0476                     u1350:
  4526     0476                     l1922:
  4527                           
  4528                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4529     0476  01B7               	clrf	_eusartTxHead	;volatile
  4530     0477                     l1924:
  4531                           
  4532                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4533     0477  3001               	movlw	1
  4534     0478  02B5               	subwf	_eusartTxBufferRemaining,f	;volatile
  4535     0479                     l1926:
  4536                           
  4537                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4538     0479  0021               	movlb	1	; select bank1
  4539     047A  1611               	bsf	17,4	;volatile
  4540     047B                     l296:
  4541     047B  0008               	return
  4542     047C                     __end_of_EUSART_Write:
  4543                           
  4544                           	psect	text28
  4545     03B8                     __ptext28:	
  4546 ;; *************** function _LIN_receivePacket *****************
  4547 ;; Defined at:
  4548 ;;		line 164 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      _Bool 
  4555 ;; Registers used:
  4556 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4562 ;;      Params:         0       0       0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0
  4564 ;;      Temps:          0       1       0       0       0       0       0       0
  4565 ;;      Totals:         0       1       0       0       0       0       0       0
  4566 ;;Total ram usage:        1 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; Hardware stack levels required when called: 7
  4569 ;; This function calls:
  4570 ;;		_EUSART_Read
  4571 ;;		_LIN_getChecksum
  4572 ;; This function is called by:
  4573 ;;		_LIN_handler
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577     03B8                     _LIN_receivePacket:	
  4578                           ;psect for function _LIN_receivePacket
  4579                           
  4580     03B8                     l2016:	
  4581                           ;incstack = 0
  4582                           ; Regs used in _LIN_receivePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4583                           
  4584                           
  4585                           ;mcc_generated_files/LINDrivers/lin_master.c: 165:     static uint8_t rxIndex = 0;;mcc_g
      +                          enerated_files/LINDrivers/lin_master.c: 167:     if(rxIndex < LIN_rxPacket.rxLength){
  4586     03B8  0021               	movlb	1	; select bank1
  4587     03B9  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  4588     03BA  0020               	movlb	0	; select bank0
  4589     03BB  0239               	subwf	LIN_receivePacket@rxIndex,w
  4590     03BC  1803               	skipnc
  4591     03BD  2BBF               	goto	u1441
  4592     03BE  2BC0               	goto	u1440
  4593     03BF                     u1441:
  4594     03BF  2BD1               	goto	l2024
  4595     03C0                     u1440:
  4596     03C0                     l2018:
  4597                           
  4598                           ;mcc_generated_files/LINDrivers/lin_master.c: 169:         LIN_rxPacket.data[rxIndex++] 
      +                          = EUSART_Read();
  4599     03C0  3184  247C  3183   	fcall	_EUSART_Read
  4600     03C3  0020               	movlb	0	; select bank0
  4601     03C4  00DB               	movwf	??_LIN_receivePacket
  4602     03C5  0839               	movf	LIN_receivePacket@rxIndex,w
  4603     03C6  3EBA               	addlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  4604     03C7  0086               	movwf	6
  4605     03C8  0187               	clrf	7
  4606     03C9  085B               	movf	??_LIN_receivePacket,w
  4607     03CA  0081               	movwf	1
  4608     03CB                     l2020:
  4609     03CB  3001               	movlw	1
  4610     03CC  00DB               	movwf	??_LIN_receivePacket
  4611     03CD  085B               	movf	??_LIN_receivePacket,w
  4612     03CE  07B9               	addwf	LIN_receivePacket@rxIndex,f
  4613     03CF                     l2022:
  4614                           
  4615                           ;mcc_generated_files/LINDrivers/lin_master.c: 170:         __nop();
  4616     03CF  0000               	nop
  4617                           
  4618                           ;mcc_generated_files/LINDrivers/lin_master.c: 171:     } else {
  4619     03D0  2BEA               	goto	l2032
  4620     03D1                     l2024:
  4621                           
  4622                           ;mcc_generated_files/LINDrivers/lin_master.c: 172:         rxIndex = 0;
  4623     03D1  01B9               	clrf	LIN_receivePacket@rxIndex
  4624     03D2                     l2026:
  4625                           
  4626                           ;mcc_generated_files/LINDrivers/lin_master.c: 174:         if(EUSART_Read() == LIN_getCh
      +                          ecksum(LIN_rxPacket.rxLength, LIN_packet.PID, LIN_rxPacket.data))
  4627     03D2  0021               	movlb	1	; select bank1
  4628     03D3  0844               	movf	_LIN_packet^(0+128),w
  4629     03D4  0020               	movlb	0	; select bank0
  4630     03D5  00D3               	movwf	LIN_getChecksum@pid
  4631     03D6  30BA               	movlw	(low ((_LIN_rxPacket| 0+2)))& (0+255)
  4632     03D7  00D4               	movwf	LIN_getChecksum@data
  4633     03D8  0021               	movlb	1	; select bank1
  4634     03D9  0839               	movf	(_LIN_rxPacket^(0+128)+1),w
  4635     03DA  3183  23EC  3183   	fcall	_LIN_getChecksum
  4636     03DD  0020               	movlb	0	; select bank0
  4637     03DE  00DB               	movwf	??_LIN_receivePacket
  4638     03DF  3184  247C  3183   	fcall	_EUSART_Read
  4639     03E2  0020               	movlb	0	; select bank0
  4640     03E3  065B               	xorwf	??_LIN_receivePacket,w
  4641     03E4  1D03               	skipz
  4642     03E5  2BE7               	goto	u1451
  4643     03E6  2BE8               	goto	u1450
  4644     03E7                     u1451:
  4645     03E7  2BEA               	goto	l2032
  4646     03E8                     u1450:
  4647     03E8                     l2028:
  4648                           
  4649                           ;mcc_generated_files/LINDrivers/lin_master.c: 175:             return 1;
  4650     03E8  3001               	movlw	1
  4651     03E9  2BEB               	goto	l113
  4652     03EA                     l2032:
  4653                           
  4654                           ;mcc_generated_files/LINDrivers/lin_master.c: 179:     return 0;
  4655     03EA  3000               	movlw	0
  4656     03EB                     l113:
  4657     03EB  0008               	return
  4658     03EC                     __end_of_LIN_receivePacket:
  4659                           
  4660                           	psect	text29
  4661     03EC                     __ptext29:	
  4662 ;; *************** function _LIN_getChecksum *****************
  4663 ;; Defined at:
  4664 ;;		line 230 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  length          1    wreg     unsigned char 
  4667 ;;  pid             1    9[BANK0 ] unsigned char 
  4668 ;;  data            1   10[BANK0 ] PTR unsigned char 
  4669 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  length          1   13[BANK0 ] unsigned char 
  4672 ;;  i               1   14[BANK0 ] unsigned char 
  4673 ;;  checksum        2   15[BANK0 ] unsigned short 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      unsigned char 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4683 ;;      Params:         0       2       0       0       0       0       0       0
  4684 ;;      Locals:         0       4       0       0       0       0       0       0
  4685 ;;      Temps:          0       2       0       0       0       0       0       0
  4686 ;;      Totals:         0       8       0       0       0       0       0       0
  4687 ;;Total ram usage:        8 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 6
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_LIN_receivePacket
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697     03EC                     _LIN_getChecksum:	
  4698                           ;psect for function _LIN_getChecksum
  4699                           
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in _LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  4703                           ;LIN_getChecksum@length stored from wreg
  4704     03EC  0020               	movlb	0	; select bank0
  4705     03ED  00D7               	movwf	LIN_getChecksum@length
  4706     03EE                     l1866:
  4707                           
  4708                           ;mcc_generated_files/LINDrivers/lin_master.c: 231:     uint16_t checksum = pid;
  4709     03EE  0853               	movf	LIN_getChecksum@pid,w
  4710     03EF  00D5               	movwf	??_LIN_getChecksum
  4711     03F0  01D6               	clrf	??_LIN_getChecksum+1
  4712     03F1  0855               	movf	??_LIN_getChecksum,w
  4713     03F2  00D9               	movwf	LIN_getChecksum@checksum
  4714     03F3  0856               	movf	??_LIN_getChecksum+1,w
  4715     03F4  00DA               	movwf	LIN_getChecksum@checksum+1
  4716     03F5                     l1868:
  4717                           
  4718                           ;mcc_generated_files/LINDrivers/lin_master.c: 233:     for (uint8_t i = 0; i < length; i
      +                          ++){
  4719     03F5  01D8               	clrf	LIN_getChecksum@i
  4720     03F6  2C16               	goto	l1880
  4721     03F7                     l1870:
  4722                           
  4723                           ;mcc_generated_files/LINDrivers/lin_master.c: 234:         checksum = checksum + *data++
      +                          ;
  4724     03F7  0854               	movf	LIN_getChecksum@data,w
  4725     03F8  0086               	movwf	6
  4726     03F9  0187               	clrf	7
  4727     03FA  0801               	movf	1,w
  4728     03FB  0759               	addwf	LIN_getChecksum@checksum,w
  4729     03FC  00D9               	movwf	LIN_getChecksum@checksum
  4730     03FD  085A               	movf	LIN_getChecksum@checksum+1,w
  4731     03FE  1803               	skipnc
  4732     03FF  0A5A               	incf	LIN_getChecksum@checksum+1,w
  4733     0400  00DA               	movwf	LIN_getChecksum@checksum+1
  4734     0401                     l1872:
  4735     0401  3001               	movlw	1
  4736     0402  00D5               	movwf	??_LIN_getChecksum
  4737     0403  0855               	movf	??_LIN_getChecksum,w
  4738     0404  07D4               	addwf	LIN_getChecksum@data,f
  4739     0405                     l1874:
  4740                           
  4741                           ;mcc_generated_files/LINDrivers/lin_master.c: 235:         if(checksum > 0xFF)
  4742     0405  3001               	movlw	1
  4743     0406  025A               	subwf	LIN_getChecksum@checksum+1,w
  4744     0407  3000               	movlw	0
  4745     0408  1903               	skipnz
  4746     0409  0259               	subwf	LIN_getChecksum@checksum,w
  4747     040A  1C03               	skipc
  4748     040B  2C0D               	goto	u1291
  4749     040C  2C0E               	goto	u1290
  4750     040D                     u1291:
  4751     040D  2C12               	goto	l1878
  4752     040E                     u1290:
  4753     040E                     l1876:
  4754                           
  4755                           ;mcc_generated_files/LINDrivers/lin_master.c: 236:             checksum -= 0xFF;
  4756     040E  30FF               	movlw	255
  4757     040F  02D9               	subwf	LIN_getChecksum@checksum,f
  4758     0410  3000               	movlw	0
  4759     0411  3BDA               	subwfb	LIN_getChecksum@checksum+1,f
  4760     0412                     l1878:
  4761                           
  4762                           ;mcc_generated_files/LINDrivers/lin_master.c: 237:     }
  4763     0412  3001               	movlw	1
  4764     0413  00D5               	movwf	??_LIN_getChecksum
  4765     0414  0855               	movf	??_LIN_getChecksum,w
  4766     0415  07D8               	addwf	LIN_getChecksum@i,f
  4767     0416                     l1880:
  4768     0416  0857               	movf	LIN_getChecksum@length,w
  4769     0417  0258               	subwf	LIN_getChecksum@i,w
  4770     0418  1C03               	skipc
  4771     0419  2C1B               	goto	u1301
  4772     041A  2C1C               	goto	u1300
  4773     041B                     u1301:
  4774     041B  2BF7               	goto	l1870
  4775     041C                     u1300:
  4776     041C                     l132:
  4777                           
  4778                           ;mcc_generated_files/LINDrivers/lin_master.c: 238:     checksum = ~checksum;
  4779     041C  09D9               	comf	LIN_getChecksum@checksum,f
  4780     041D  09DA               	comf	LIN_getChecksum@checksum+1,f
  4781     041E                     l1882:
  4782                           
  4783                           ;mcc_generated_files/LINDrivers/lin_master.c: 240:     return (uint8_t)checksum;
  4784     041E  0859               	movf	LIN_getChecksum@checksum,w
  4785     041F                     l133:
  4786     041F  0008               	return
  4787     0420                     __end_of_LIN_getChecksum:
  4788                           
  4789                           	psect	text30
  4790     047C                     __ptext30:	
  4791 ;; *************** function _EUSART_Read *****************
  4792 ;; Defined at:
  4793 ;;		line 151 in file "mcc_generated_files/eusart.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  readValue       1   10[BANK0 ] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      unsigned char 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4807 ;;      Params:         0       0       0       0       0       0       0       0
  4808 ;;      Locals:         0       1       0       0       0       0       0       0
  4809 ;;      Temps:          0       1       0       0       0       0       0       0
  4810 ;;      Totals:         0       2       0       0       0       0       0       0
  4811 ;;Total ram usage:        2 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 6
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_LIN_receivePacket
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821     047C                     _EUSART_Read:	
  4822                           ;psect for function _EUSART_Read
  4823                           
  4824     047C                     l1886:	
  4825                           ;incstack = 0
  4826                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4827                           
  4828     047C                     l1888:	
  4829                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  4830                           
  4831                           
  4832                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  4833     047C  0020               	movlb	0	; select bank0
  4834     047D  0832               	movf	_eusartRxCount,w	;volatile
  4835     047E  1903               	btfsc	3,2
  4836     047F  2C81               	goto	u1311
  4837     0480  2C82               	goto	u1310
  4838     0481                     u1311:
  4839     0481  2C7C               	goto	l1888
  4840     0482                     u1310:
  4841     0482                     l1890:
  4842                           
  4843                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  4844     0482  0833               	movf	_eusartRxTail,w	;volatile
  4845     0483  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4846     0484  0086               	movwf	6
  4847     0485  0187               	clrf	7
  4848     0486  0801               	movf	1,w
  4849     0487  00B1               	movwf	_eusartRxLastError	;volatile
  4850                           
  4851                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  4852     0488  0833               	movf	_eusartRxTail,w
  4853     0489  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4854     048A  0086               	movwf	6
  4855     048B  0187               	clrf	7
  4856     048C  0801               	movf	1,w
  4857     048D  00D4               	movwf	EUSART_Read@readValue
  4858     048E                     l1892:
  4859     048E  3001               	movlw	1
  4860     048F  00D3               	movwf	??_EUSART_Read
  4861     0490  0853               	movf	??_EUSART_Read,w
  4862     0491  07B3               	addwf	_eusartRxTail,f	;volatile
  4863     0492                     l1894:
  4864                           
  4865                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4866     0492  3008               	movlw	8
  4867     0493  0233               	subwf	_eusartRxTail,w	;volatile
  4868     0494  1C03               	skipc
  4869     0495  2C97               	goto	u1321
  4870     0496  2C98               	goto	u1320
  4871     0497                     u1321:
  4872     0497  2C99               	goto	l1898
  4873     0498                     u1320:
  4874     0498                     l1896:
  4875                           
  4876                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  4877     0498  01B3               	clrf	_eusartRxTail	;volatile
  4878     0499                     l1898:
  4879                           
  4880                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  4881     0499  0021               	movlb	1	; select bank1
  4882     049A  1291               	bcf	17,5	;volatile
  4883     049B                     l1900:
  4884                           
  4885                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  4886     049B  3001               	movlw	1
  4887     049C  0020               	movlb	0	; select bank0
  4888     049D  02B2               	subwf	_eusartRxCount,f	;volatile
  4889     049E                     l1902:
  4890                           
  4891                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  4892     049E  0021               	movlb	1	; select bank1
  4893     049F  1691               	bsf	17,5	;volatile
  4894     04A0                     l1904:
  4895                           
  4896                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  4897     04A0  0020               	movlb	0	; select bank0
  4898     04A1  0854               	movf	EUSART_Read@readValue,w
  4899     04A2                     l287:
  4900     04A2  0008               	return
  4901     04A3                     __end_of_EUSART_Read:
  4902                           
  4903                           	psect	text31
  4904     06A5                     __ptext31:	
  4905 ;; *************** function _LIN_enableRx *****************
  4906 ;; Defined at:
  4907 ;;		line 286 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		None
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4921 ;;      Params:         0       0       0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 6
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_LIN_handler
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935     06A5                     _LIN_enableRx:	
  4936                           ;psect for function _LIN_enableRx
  4937                           
  4938     06A5                     l2010:	
  4939                           ;incstack = 0
  4940                           ; Regs used in _LIN_enableRx: []
  4941                           
  4942                           
  4943                           ;mcc_generated_files/LINDrivers/lin_master.c: 287:     RCSTAbits.CREN = 1;
  4944     06A5  0023               	movlb	3	; select bank3
  4945     06A6  161D               	bsf	29,4	;volatile
  4946                           
  4947                           ;mcc_generated_files/LINDrivers/lin_master.c: 288:     PIE1bits.RCIE = 1;
  4948     06A7  0021               	movlb	1	; select bank1
  4949     06A8  1691               	bsf	17,5	;volatile
  4950     06A9                     l158:
  4951     06A9  0008               	return
  4952     06AA                     __end_of_LIN_enableRx:
  4953                           
  4954                           	psect	text32
  4955     06AA                     __ptext32:	
  4956 ;; *************** function _LIN_disableRx *****************
  4957 ;; Defined at:
  4958 ;;		line 291 in file "mcc_generated_files/LINDrivers/lin_master.c"
  4959 ;; Parameters:    Size  Location     Type
  4960 ;;		None
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		None
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4972 ;;      Params:         0       0       0       0       0       0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0
  4975 ;;      Totals:         0       0       0       0       0       0       0       0
  4976 ;;Total ram usage:        0 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 6
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_LIN_handler
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986     06AA                     _LIN_disableRx:	
  4987                           ;psect for function _LIN_disableRx
  4988                           
  4989     06AA                     l1980:	
  4990                           ;incstack = 0
  4991                           ; Regs used in _LIN_disableRx: []
  4992                           
  4993                           
  4994                           ;mcc_generated_files/LINDrivers/lin_master.c: 292:     RCSTAbits.CREN = 0;
  4995     06AA  0023               	movlb	3	; select bank3
  4996     06AB  121D               	bcf	29,4	;volatile
  4997                           
  4998                           ;mcc_generated_files/LINDrivers/lin_master.c: 293:     PIE1bits.RCIE = 0;
  4999     06AC  0021               	movlb	1	; select bank1
  5000     06AD  1291               	bcf	17,5	;volatile
  5001     06AE                     l161:
  5002     06AE  0008               	return
  5003     06AF                     __end_of_LIN_disableRx:
  5004                           
  5005                           	psect	text33
  5006     0667                     __ptext33:	
  5007 ;; *************** function _EUSART_is_rx_ready *****************
  5008 ;; Defined at:
  5009 ;;		line 137 in file "mcc_generated_files/eusart.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      _Bool 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5023 ;;      Params:         0       0       0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; Hardware stack levels required when called: 6
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_LIN_handler
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037     0667                     _EUSART_is_rx_ready:	
  5038                           ;psect for function _EUSART_is_rx_ready
  5039                           
  5040     0667                     l2012:	
  5041                           ;incstack = 0
  5042                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5043                           
  5044                           
  5045                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  5046     0667  0020               	movlb	0	; select bank0
  5047     0668  0832               	movf	_eusartRxCount,w	;volatile
  5048     0669  1D03               	btfss	3,2
  5049     066A  2E6C               	goto	u1421
  5050     066B  2E6E               	goto	u1420
  5051     066C                     u1421:
  5052     066C  3001               	movlw	1
  5053     066D  2E6F               	goto	u1430
  5054     066E                     u1420:
  5055     066E  3000               	movlw	0
  5056     066F                     u1430:
  5057     066F                     l274:
  5058     066F  0008               	return
  5059     0670                     __end_of_EUSART_is_rx_ready:
  5060                           
  5061                           	psect	intentry
  5062     0004                     __pintentry:	
  5063 ;; *************** function _INTERRUPT_InterruptManager *****************
  5064 ;; Defined at:
  5065 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5079 ;;      Params:         0       0       0       0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0
  5082 ;;      Totals:         0       0       0       0       0       0       0       0
  5083 ;;Total ram usage:        0 bytes
  5084 ;; Hardware stack levels used: 1
  5085 ;; Hardware stack levels required when called: 5
  5086 ;; This function calls:
  5087 ;;		NULL
  5088 ;;		_EUSART_Receive_ISR
  5089 ;;		_EUSART_Transmit_ISR
  5090 ;;		_TMR0_ISR
  5091 ;; This function is called by:
  5092 ;;		Interrupt level 1
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096     0004                     _INTERRUPT_InterruptManager:
  5097                           
  5098                           ;incstack = 0
  5099     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5100                           
  5101                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5102     0005  3180               	pagesel	$
  5103     0006                     i1l2224:
  5104                           
  5105                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5106     0006  1E8B               	btfss	11,5	;volatile
  5107     0007  2809               	goto	u164_21
  5108     0008  280A               	goto	u164_20
  5109     0009                     u164_21:
  5110     0009  2812               	goto	i1l392
  5111     000A                     u164_20:
  5112     000A                     i1l2226:
  5113     000A  1D0B               	btfss	11,2	;volatile
  5114     000B  280D               	goto	u165_21
  5115     000C  280E               	goto	u165_20
  5116     000D                     u165_21:
  5117     000D  2812               	goto	i1l392
  5118     000E                     u165_20:
  5119     000E                     i1l2228:
  5120                           
  5121                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5122     000E  3186  261B  3180   	fcall	_TMR0_ISR
  5123                           
  5124                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5125     0011  2836               	goto	i1l400
  5126     0012                     i1l392:	
  5127                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5128                           
  5129     0012  1F0B               	btfss	11,6	;volatile
  5130     0013  2815               	goto	u166_21
  5131     0014  2816               	goto	u166_20
  5132     0015                     u166_21:
  5133     0015  2836               	goto	i1l400
  5134     0016                     u166_20:
  5135     0016                     i1l2230:
  5136                           
  5137                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5138     0016  0021               	movlb	1	; select bank1
  5139     0017  1E11               	btfss	17,4	;volatile
  5140     0018  281A               	goto	u167_21
  5141     0019  281B               	goto	u167_20
  5142     001A                     u167_21:
  5143     001A  2826               	goto	i1l395
  5144     001B                     u167_20:
  5145     001B                     i1l2232:
  5146     001B  0020               	movlb	0	; select bank0
  5147     001C  1E11               	btfss	17,4	;volatile
  5148     001D  281F               	goto	u168_21
  5149     001E  2820               	goto	u168_20
  5150     001F                     u168_21:
  5151     001F  2826               	goto	i1l395
  5152     0020                     u168_20:
  5153     0020                     i1l2234:
  5154                           
  5155                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  5156     0020  082B               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5157     0021  008A               	movwf	10
  5158     0022  082A               	movf	_EUSART_TxDefaultInterruptHandler,w
  5159     0023  000A               	callw
  5160     0024  3180               	pagesel	$
  5161                           
  5162                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5163     0025  2836               	goto	i1l400
  5164     0026                     i1l395:	
  5165                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5166                           
  5167     0026  0021               	movlb	1	; select bank1
  5168     0027  1E91               	btfss	17,5	;volatile
  5169     0028  282A               	goto	u169_21
  5170     0029  282B               	goto	u169_20
  5171     002A                     u169_21:
  5172     002A  2836               	goto	i1l399
  5173     002B                     u169_20:
  5174     002B                     i1l2236:
  5175     002B  0020               	movlb	0	; select bank0
  5176     002C  1E91               	btfss	17,5	;volatile
  5177     002D  282F               	goto	u170_21
  5178     002E  2830               	goto	u170_20
  5179     002F                     u170_21:
  5180     002F  2836               	goto	i1l399
  5181     0030                     u170_20:
  5182     0030                     i1l2238:
  5183                           
  5184                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  5185     0030  0829               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5186     0031  008A               	movwf	10
  5187     0032  0828               	movf	_EUSART_RxDefaultInterruptHandler,w
  5188     0033  000A               	callw
  5189     0034  3180               	pagesel	$
  5190                           
  5191                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5192     0035  2836               	goto	i1l400
  5193     0036                     i1l399:	
  5194                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  5195                           
  5196     0036                     i1l400:
  5197     0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5198     0037  0009               	retfie
  5199     0038                     __end_of_INTERRUPT_InterruptManager:
  5200                           
  5201                           	psect	text35
  5202     061B                     __ptext35:	
  5203 ;; *************** function _TMR0_ISR *****************
  5204 ;; Defined at:
  5205 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5219 ;;      Params:         0       0       0       0       0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 4
  5226 ;; This function calls:
  5227 ;;		NULL
  5228 ;;		_LIN_timerHandler
  5229 ;;		_TMR0_DefaultInterruptHandler
  5230 ;; This function is called by:
  5231 ;;		_INTERRUPT_InterruptManager
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235     061B                     _TMR0_ISR:	
  5236                           ;psect for function _TMR0_ISR
  5237                           
  5238     061B                     i1l2212:	
  5239                           ;incstack = 0
  5240                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5241                           
  5242                           
  5243                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  5244     061B  110B               	bcf	11,2	;volatile
  5245     061C                     i1l2214:
  5246                           
  5247                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  5248     061C  0020               	movlb	0	; select bank0
  5249     061D  0830               	movf	_timer0ReloadVal,w	;volatile
  5250     061E  0095               	movwf	21	;volatile
  5251     061F                     i1l2216:
  5252                           
  5253                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  5254     061F  0820               	movf	_TMR0_InterruptHandler,w
  5255     0620  0421               	iorwf	_TMR0_InterruptHandler+1,w
  5256     0621  1903               	btfsc	3,2
  5257     0622  2E24               	goto	u163_21
  5258     0623  2E25               	goto	u163_20
  5259     0624                     u163_21:
  5260     0624  2E2A               	goto	i1l468
  5261     0625                     u163_20:
  5262     0625                     i1l2218:
  5263                           
  5264                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  5265     0625  0821               	movf	_TMR0_InterruptHandler+1,w
  5266     0626  008A               	movwf	10
  5267     0627  0820               	movf	_TMR0_InterruptHandler,w
  5268     0628  000A               	callw
  5269     0629  3186               	pagesel	$
  5270     062A                     i1l468:
  5271     062A  0008               	return
  5272     062B                     __end_of_TMR0_ISR:
  5273                           
  5274                           	psect	text36
  5275     04A3                     __ptext36:	
  5276 ;; *************** function _LIN_timerHandler *****************
  5277 ;; Defined at:
  5278 ;;		line 250 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5292 ;;      Params:         0       0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0
  5294 ;;      Temps:          1       0       0       0       0       0       0       0
  5295 ;;      Totals:         1       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        1 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 3
  5299 ;; This function calls:
  5300 ;;		_LIN_sendPeriodicTx
  5301 ;;		i1_LIN_stopTimer
  5302 ;; This function is called by:
  5303 ;;		_LIN_setTimerHandler
  5304 ;;		_TMR0_ISR
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308     04A3                     _LIN_timerHandler:	
  5309                           ;psect for function _LIN_timerHandler
  5310                           
  5311     04A3                     i1l2036:	
  5312                           ;incstack = 0
  5313                           ; Regs used in _LIN_timerHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5314                           
  5315                           
  5316                           ;mcc_generated_files/LINDrivers/lin_master.c: 252:     if(LIN_timerRunning == 1){
  5317     04A3  0020               	movlb	0	; select bank0
  5318     04A4  033E               	decf	_LIN_timerRunning,w
  5319     04A5  1D03               	btfss	3,2
  5320     04A6  2CA8               	goto	u146_21
  5321     04A7  2CA9               	goto	u146_20
  5322     04A8                     u146_21:
  5323     04A8  2CB6               	goto	i1l2042
  5324     04A9                     u146_20:
  5325     04A9                     i1l2038:
  5326                           
  5327                           ;mcc_generated_files/LINDrivers/lin_master.c: 253:         if (++LIN_timerCallBack >= LI
      +                          N_timeout){
  5328     04A9  3001               	movlw	1
  5329     04AA  00FD               	movwf	??_LIN_timerHandler
  5330     04AB  087D               	movf	??_LIN_timerHandler,w
  5331     04AC  07BC               	addwf	_LIN_timerCallBack,f	;volatile
  5332     04AD  0866               	movf	_LIN_timeout,w
  5333     04AE  023C               	subwf	_LIN_timerCallBack,w	;volatile
  5334     04AF  1C03               	skipc
  5335     04B0  2CB2               	goto	u147_21
  5336     04B1  2CB3               	goto	u147_20
  5337     04B2                     u147_21:
  5338     04B2  2CB6               	goto	i1l2042
  5339     04B3                     u147_20:
  5340     04B3                     i1l2040:
  5341                           
  5342                           ;mcc_generated_files/LINDrivers/lin_master.c: 255:             LIN_stopTimer();
  5343     04B3  3186  26BB  3184   	fcall	i1_LIN_stopTimer
  5344     04B6                     i1l2042:
  5345                           
  5346                           ;mcc_generated_files/LINDrivers/lin_master.c: 258:     if(LIN_enablePeriodTx == 1){
  5347     04B6  0020               	movlb	0	; select bank0
  5348     04B7  033D               	decf	_LIN_enablePeriodTx,w
  5349     04B8  1D03               	btfss	3,2
  5350     04B9  2CBB               	goto	u148_21
  5351     04BA  2CBC               	goto	u148_20
  5352     04BB                     u148_21:
  5353     04BB  2CC9               	goto	i1l143
  5354     04BC                     u148_20:
  5355     04BC                     i1l2044:
  5356                           
  5357                           ;mcc_generated_files/LINDrivers/lin_master.c: 259:         if(++LIN_periodCallBack >= LI
      +                          N_period){
  5358     04BC  3001               	movlw	1
  5359     04BD  00FD               	movwf	??_LIN_timerHandler
  5360     04BE  087D               	movf	??_LIN_timerHandler,w
  5361     04BF  07BB               	addwf	_LIN_periodCallBack,f	;volatile
  5362     04C0  083F               	movf	_LIN_period,w
  5363     04C1  023B               	subwf	_LIN_periodCallBack,w	;volatile
  5364     04C2  1C03               	skipc
  5365     04C3  2CC5               	goto	u149_21
  5366     04C4  2CC6               	goto	u149_20
  5367     04C5                     u149_21:
  5368     04C5  2CC9               	goto	i1l143
  5369     04C6                     u149_20:
  5370     04C6                     i1l2046:
  5371                           
  5372                           ;mcc_generated_files/LINDrivers/lin_master.c: 260:             LIN_sendPeriodicTx();
  5373     04C6  3182  2213  3184   	fcall	_LIN_sendPeriodicTx
  5374     04C9                     i1l143:
  5375     04C9  0008               	return
  5376     04CA                     __end_of_LIN_timerHandler:
  5377                           
  5378                           	psect	text37
  5379     06CB                     __ptext37:	
  5380 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5381 ;; Defined at:
  5382 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;		None
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		None
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5396 ;;      Params:         0       0       0       0       0       0       0       0
  5397 ;;      Locals:         0       0       0       0       0       0       0       0
  5398 ;;      Temps:          0       0       0       0       0       0       0       0
  5399 ;;      Totals:         0       0       0       0       0       0       0       0
  5400 ;;Total ram usage:        0 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_TMR0_Initialize
  5406 ;;		_TMR0_ISR
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410     06CB                     _TMR0_DefaultInterruptHandler:	
  5411                           ;psect for function _TMR0_DefaultInterruptHandler
  5412                           
  5413     06CB                     i1l474:	
  5414                           ;incstack = 0
  5415                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  5416                           
  5417     06CB  0008               	return
  5418     06CC                     __end_of_TMR0_DefaultInterruptHandler:
  5419                           
  5420                           	psect	text38
  5421     06BB                     __ptext38:	
  5422 ;; *************** function i1_LIN_stopTimer *****************
  5423 ;; Defined at:
  5424 ;;		line 270 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;		None
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		status,2
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5438 ;;      Params:         0       0       0       0       0       0       0       0
  5439 ;;      Locals:         0       0       0       0       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0       0       0       0
  5441 ;;      Totals:         0       0       0       0       0       0       0       0
  5442 ;;Total ram usage:        0 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_LIN_timerHandler
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451     06BB                     i1_LIN_stopTimer:	
  5452                           ;psect for function i1_LIN_stopTimer
  5453                           
  5454     06BB                     i1l1978:	
  5455                           ;incstack = 0
  5456                           ; Regs used in i1_LIN_stopTimer: [status,2]
  5457                           
  5458                           
  5459                           ;mcc_generated_files/LINDrivers/lin_master.c: 272:     LIN_timerCallBack = 0;
  5460     06BB  0020               	movlb	0	; select bank0
  5461     06BC  01BC               	clrf	_LIN_timerCallBack	;volatile
  5462                           
  5463                           ;mcc_generated_files/LINDrivers/lin_master.c: 273:     LIN_timerRunning = 0;
  5464     06BD  01BE               	clrf	_LIN_timerRunning
  5465     06BE                     i1l149:
  5466     06BE  0008               	return
  5467     06BF                     __end_ofi1_LIN_stopTimer:
  5468                           
  5469                           	psect	text39
  5470     0213                     __ptext39:	
  5471 ;; *************** function _LIN_sendPeriodicTx *****************
  5472 ;; Defined at:
  5473 ;;		line 300 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  periodicTx      2    7[BANK0 ] PTR const struct .
  5478 ;;		 -> NULL(0), scheduleTable(6), 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5488 ;;      Params:         0       0       0       0       0       0       0       0
  5489 ;;      Locals:         0       2       0       0       0       0       0       0
  5490 ;;      Temps:          0       3       0       0       0       0       0       0
  5491 ;;      Totals:         0       5       0       0       0       0       0       0
  5492 ;;Total ram usage:        5 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; Hardware stack levels required when called: 2
  5495 ;; This function calls:
  5496 ;;		_LIN_queuePacket
  5497 ;;		___wmul
  5498 ;; This function is called by:
  5499 ;;		_LIN_timerHandler
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503     0213                     _LIN_sendPeriodicTx:	
  5504                           ;psect for function _LIN_sendPeriodicTx
  5505                           
  5506     0213                     i1l1940:	
  5507                           ;incstack = 0
  5508                           ; Regs used in _LIN_sendPeriodicTx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5509                           
  5510                           
  5511                           ;mcc_generated_files/LINDrivers/lin_master.c: 301:     static volatile uint8_t scheduleI
      +                          ndex = 0;;mcc_generated_files/LINDrivers/lin_master.c: 302:     const lin_cmd_packet_t* 
      +                          periodicTx;;mcc_generated_files/LINDrivers/lin_master.c: 304:     LIN_periodCallBack = 0
      +                          ;
  5512     0213  0020               	movlb	0	; select bank0
  5513     0214  01BB               	clrf	_LIN_periodCallBack	;volatile
  5514     0215                     i1l1942:
  5515                           
  5516                           ;mcc_generated_files/LINDrivers/lin_master.c: 305:     periodicTx = schedule + scheduleI
      +                          ndex;
  5517     0215  0838               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5518     0216  00CE               	movwf	??_LIN_sendPeriodicTx
  5519     0217  01CF               	clrf	??_LIN_sendPeriodicTx+1
  5520     0218  084E               	movf	??_LIN_sendPeriodicTx,w
  5521     0219  00F0               	movwf	___wmul@multiplier
  5522     021A  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5523     021B  00F1               	movwf	___wmul@multiplier+1
  5524     021C  3006               	movlw	6
  5525     021D  00F2               	movwf	___wmul@multiplicand
  5526     021E  3000               	movlw	0
  5527     021F  00F3               	movwf	___wmul@multiplicand+1
  5528     0220  3185  2557  3182   	fcall	___wmul
  5529     0223  0870               	movf	?___wmul,w
  5530     0224  0020               	movlb	0	; select bank0
  5531     0225  072C               	addwf	_schedule,w
  5532     0226  00D1               	movwf	LIN_sendPeriodicTx@periodicTx
  5533     0227  0871               	movf	?___wmul+1,w
  5534     0228  3D2D               	addwfc	_schedule+1,w
  5535     0229  00D2               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5536     022A                     i1l1944:
  5537                           
  5538                           ;mcc_generated_files/LINDrivers/lin_master.c: 307:     if(periodicTx->period > 0){
  5539     022A  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5540     022B  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5541     022C  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5542     022D  00CE               	movwf	??_LIN_sendPeriodicTx
  5543     022E  3004               	movlw	4
  5544     022F  074E               	addwf	??_LIN_sendPeriodicTx,w
  5545     0230  0084               	movwf	4
  5546     0231  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5547     0232  1803               	skipnc
  5548     0233  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5549     0234  0085               	movwf	5
  5550     0235  0012               	moviw fsr0++
  5551     0236  1903               	btfsc	3,2
  5552     0237  2A39               	goto	u136_21
  5553     0238  2A3A               	goto	u136_20
  5554     0239                     u136_21:
  5555     0239  2A4F               	goto	i1l1948
  5556     023A                     u136_20:
  5557     023A                     i1l1946:
  5558                           
  5559                           ;mcc_generated_files/LINDrivers/lin_master.c: 308:         LIN_queuePacket(periodicTx->c
      +                          md, periodicTx->data);
  5560     023A  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5561     023B  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5562     023C  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5563     023D  00CE               	movwf	??_LIN_sendPeriodicTx
  5564     023E  3005               	movlw	5
  5565     023F  074E               	addwf	??_LIN_sendPeriodicTx,w
  5566     0240  0084               	movwf	4
  5567     0241  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5568     0242  1803               	skipnc
  5569     0243  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5570     0244  0085               	movwf	5
  5571     0245  0800               	movf	0,w	;code access
  5572     0246  00F8               	movwf	LIN_queuePacket@data
  5573     0247  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5574     0248  0084               	movwf	4
  5575     0249  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5576     024A  0085               	movwf	5
  5577     024B  0800               	movf	0,w	;code access
  5578     024C  3180  2052  3182   	fcall	_LIN_queuePacket
  5579     024F                     i1l1948:
  5580                           
  5581                           ;mcc_generated_files/LINDrivers/lin_master.c: 312:         if(++scheduleIndex >= schedul
      +                          eLength){
  5582     024F  3001               	movlw	1
  5583     0250  0020               	movlb	0	; select bank0
  5584     0251  00CE               	movwf	??_LIN_sendPeriodicTx
  5585     0252  084E               	movf	??_LIN_sendPeriodicTx,w
  5586     0253  07B8               	addwf	LIN_sendPeriodicTx@scheduleIndex,f	;volatile
  5587     0254  0840               	movf	_scheduleLength,w
  5588     0255  0238               	subwf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5589     0256  1C03               	skipc
  5590     0257  2A59               	goto	u137_21
  5591     0258  2A5A               	goto	u137_20
  5592     0259                     u137_21:
  5593     0259  2A5B               	goto	i1l1952
  5594     025A                     u137_20:
  5595     025A                     i1l1950:
  5596                           
  5597                           ;mcc_generated_files/LINDrivers/lin_master.c: 313:             scheduleIndex = 0;
  5598     025A  01B8               	clrf	LIN_sendPeriodicTx@scheduleIndex	;volatile
  5599     025B                     i1l1952:
  5600                           
  5601                           ;mcc_generated_files/LINDrivers/lin_master.c: 315:         periodicTx = schedule + sched
      +                          uleIndex;
  5602     025B  0838               	movf	LIN_sendPeriodicTx@scheduleIndex,w	;volatile
  5603     025C  00CE               	movwf	??_LIN_sendPeriodicTx
  5604     025D  01CF               	clrf	??_LIN_sendPeriodicTx+1
  5605     025E  084E               	movf	??_LIN_sendPeriodicTx,w
  5606     025F  00F0               	movwf	___wmul@multiplier
  5607     0260  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5608     0261  00F1               	movwf	___wmul@multiplier+1
  5609     0262  3006               	movlw	6
  5610     0263  00F2               	movwf	___wmul@multiplicand
  5611     0264  3000               	movlw	0
  5612     0265  00F3               	movwf	___wmul@multiplicand+1
  5613     0266  3185  2557  3182   	fcall	___wmul
  5614     0269  0870               	movf	?___wmul,w
  5615     026A  0020               	movlb	0	; select bank0
  5616     026B  072C               	addwf	_schedule,w
  5617     026C  00D1               	movwf	LIN_sendPeriodicTx@periodicTx
  5618     026D  0871               	movf	?___wmul+1,w
  5619     026E  3D2D               	addwfc	_schedule+1,w
  5620     026F  00D2               	movwf	LIN_sendPeriodicTx@periodicTx+1
  5621     0270                     i1l1954:
  5622                           
  5623                           ;mcc_generated_files/LINDrivers/lin_master.c: 316:     } while(periodicTx->period == 0);
  5624     0270  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5625     0271  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5626     0272  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5627     0273  00CE               	movwf	??_LIN_sendPeriodicTx
  5628     0274  3004               	movlw	4
  5629     0275  074E               	addwf	??_LIN_sendPeriodicTx,w
  5630     0276  0084               	movwf	4
  5631     0277  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5632     0278  1803               	skipnc
  5633     0279  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5634     027A  0085               	movwf	5
  5635     027B  0012               	moviw fsr0++
  5636     027C  1903               	btfsc	3,2
  5637     027D  2A7F               	goto	u138_21
  5638     027E  2A80               	goto	u138_20
  5639     027F                     u138_21:
  5640     027F  2A4F               	goto	i1l1948
  5641     0280                     u138_20:
  5642     0280                     i1l1956:
  5643                           
  5644                           ;mcc_generated_files/LINDrivers/lin_master.c: 318:     LIN_period = periodicTx->period;
  5645     0280  0852               	movf	LIN_sendPeriodicTx@periodicTx+1,w
  5646     0281  00CF               	movwf	??_LIN_sendPeriodicTx+1
  5647     0282  0851               	movf	LIN_sendPeriodicTx@periodicTx,w
  5648     0283  00CE               	movwf	??_LIN_sendPeriodicTx
  5649     0284  3004               	movlw	4
  5650     0285  074E               	addwf	??_LIN_sendPeriodicTx,w
  5651     0286  0084               	movwf	4
  5652     0287  084F               	movf	??_LIN_sendPeriodicTx+1,w
  5653     0288  1803               	skipnc
  5654     0289  0A4F               	incf	??_LIN_sendPeriodicTx+1,w
  5655     028A  0085               	movwf	5
  5656     028B  0800               	movf	0,w	;code access
  5657     028C  00BF               	movwf	_LIN_period
  5658     028D                     i1l173:
  5659     028D  0008               	return
  5660     028E                     __end_of_LIN_sendPeriodicTx:
  5661                           
  5662                           	psect	text40
  5663     0557                     __ptext40:	
  5664 ;; *************** function ___wmul *****************
  5665 ;; Defined at:
  5666 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  multiplier      2    0[COMMON] unsigned int 
  5669 ;;  multiplicand    2    2[COMMON] unsigned int 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  product         2    4[COMMON] unsigned int 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  2    0[COMMON] unsigned int 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5681 ;;      Params:         4       0       0       0       0       0       0       0
  5682 ;;      Locals:         2       0       0       0       0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0
  5684 ;;      Totals:         6       0       0       0       0       0       0       0
  5685 ;;Total ram usage:        6 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_LIN_sendPeriodicTx
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694     0557                     ___wmul:	
  5695                           ;psect for function ___wmul
  5696                           
  5697     0557                     i1l1846:	
  5698                           ;incstack = 0
  5699                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5700                           
  5701     0557  01F4               	clrf	___wmul@product
  5702     0558  01F5               	clrf	___wmul@product+1
  5703     0559                     i1l1848:
  5704     0559  1C70               	btfss	___wmul@multiplier,0
  5705     055A  2D5C               	goto	u125_21
  5706     055B  2D5D               	goto	u125_20
  5707     055C                     u125_21:
  5708     055C  2D61               	goto	i1l684
  5709     055D                     u125_20:
  5710     055D                     i1l1850:
  5711     055D  0872               	movf	___wmul@multiplicand,w
  5712     055E  07F4               	addwf	___wmul@product,f
  5713     055F  0873               	movf	___wmul@multiplicand+1,w
  5714     0560  3DF5               	addwfc	___wmul@product+1,f
  5715     0561                     i1l684:
  5716     0561  3001               	movlw	1
  5717     0562                     u126_25:
  5718     0562  35F2               	lslf	___wmul@multiplicand,f
  5719     0563  0DF3               	rlf	___wmul@multiplicand+1,f
  5720     0564  0B89               	decfsz	9,f
  5721     0565  2D62               	goto	u126_25
  5722     0566                     i1l1852:
  5723     0566  3001               	movlw	1
  5724     0567                     u127_25:
  5725     0567  36F1               	lsrf	___wmul@multiplier+1,f
  5726     0568  0CF0               	rrf	___wmul@multiplier,f
  5727     0569  0B89               	decfsz	9,f
  5728     056A  2D67               	goto	u127_25
  5729     056B                     i1l1854:
  5730     056B  0870               	movf	___wmul@multiplier,w
  5731     056C  0471               	iorwf	___wmul@multiplier+1,w
  5732     056D  1D03               	btfss	3,2
  5733     056E  2D70               	goto	u128_21
  5734     056F  2D71               	goto	u128_20
  5735     0570                     u128_21:
  5736     0570  2D59               	goto	i1l1848
  5737     0571                     u128_20:
  5738     0571                     i1l1856:
  5739     0571  0875               	movf	___wmul@product+1,w
  5740     0572  00F1               	movwf	?___wmul+1
  5741     0573  0874               	movf	___wmul@product,w
  5742     0574  00F0               	movwf	?___wmul
  5743     0575                     i1l686:
  5744     0575  0008               	return
  5745     0576                     __end_of___wmul:
  5746                           
  5747                           	psect	text41
  5748     0052                     __ptext41:	
  5749 ;; *************** function _LIN_queuePacket *****************
  5750 ;; Defined at:
  5751 ;;		line 70 in file "mcc_generated_files/LINDrivers/lin_master.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  cmd             1    wreg     unsigned char 
  5754 ;;  data            1    8[COMMON] PTR unsigned char 
  5755 ;;		 -> SW_STATE_Data(8), 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  cmd             1    0[BANK0 ] unsigned char 
  5758 ;;  i               1    1[BANK0 ] unsigned char 
  5759 ;;  tempSchedule    2    2[BANK0 ] PTR const struct .
  5760 ;;		 -> NULL(0), scheduleTable(6), 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5770 ;;      Params:         1       0       0       0       0       0       0       0
  5771 ;;      Locals:         0       4       0       0       0       0       0       0
  5772 ;;      Temps:          4       0       0       0       0       0       0       0
  5773 ;;      Totals:         5       4       0       0       0       0       0       0
  5774 ;;Total ram usage:        9 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 1
  5777 ;; This function calls:
  5778 ;;		_LIN_calcParity
  5779 ;;		i1_LIN_getChecksum
  5780 ;;		i1_memcpy
  5781 ;;		i1_memset
  5782 ;; This function is called by:
  5783 ;;		_LIN_sendPeriodicTx
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787     0052                     _LIN_queuePacket:	
  5788                           ;psect for function _LIN_queuePacket
  5789                           
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in _LIN_queuePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5793                           ;LIN_queuePacket@cmd stored from wreg
  5794     0052  0020               	movlb	0	; select bank0
  5795     0053  00CA               	movwf	LIN_queuePacket@cmd
  5796     0054                     i1l1796:
  5797                           
  5798                           ;mcc_generated_files/LINDrivers/lin_master.c: 71:     const lin_cmd_packet_t* tempSchedu
      +                          le = schedule;
  5799     0054  082D               	movf	_schedule+1,w
  5800     0055  00CD               	movwf	LIN_queuePacket@tempSchedule+1
  5801     0056  082C               	movf	_schedule,w
  5802     0057  00CC               	movwf	LIN_queuePacket@tempSchedule
  5803     0058                     i1l1798:
  5804                           
  5805                           ;mcc_generated_files/LINDrivers/lin_master.c: 73:     for(uint8_t i = 0; i < scheduleLen
      +                          gth; i++){
  5806     0058  01CB               	clrf	LIN_queuePacket@i
  5807     0059  286D               	goto	i1l1808
  5808     005A                     i1l1800:
  5809                           
  5810                           ;mcc_generated_files/LINDrivers/lin_master.c: 74:         if(cmd == tempSchedule->cmd){
  5811     005A  084C               	movf	LIN_queuePacket@tempSchedule,w
  5812     005B  0084               	movwf	4
  5813     005C  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5814     005D  0085               	movwf	5
  5815     005E  0800               	movf	0,w	;code access
  5816     005F  064A               	xorwf	LIN_queuePacket@cmd,w
  5817     0060  1D03               	skipz
  5818     0061  2863               	goto	u119_21
  5819     0062  2864               	goto	u119_20
  5820     0063                     u119_21:
  5821     0063  2865               	goto	i1l1804
  5822     0064                     u119_20:
  5823     0064  2873               	goto	i1l1810
  5824     0065                     i1l1804:
  5825                           
  5826                           ;mcc_generated_files/LINDrivers/lin_master.c: 77:         tempSchedule++;
  5827     0065  3006               	movlw	6
  5828     0066  07CC               	addwf	LIN_queuePacket@tempSchedule,f
  5829     0067  3000               	movlw	0
  5830     0068  3DCD               	addwfc	LIN_queuePacket@tempSchedule+1,f
  5831     0069                     i1l1806:
  5832                           
  5833                           ;mcc_generated_files/LINDrivers/lin_master.c: 78:     }
  5834     0069  3001               	movlw	1
  5835     006A  00F9               	movwf	??_LIN_queuePacket
  5836     006B  0879               	movf	??_LIN_queuePacket,w
  5837     006C  07CB               	addwf	LIN_queuePacket@i,f
  5838     006D                     i1l1808:
  5839     006D  0840               	movf	_scheduleLength,w
  5840     006E  024B               	subwf	LIN_queuePacket@i,w
  5841     006F  1C03               	skipc
  5842     0070  2872               	goto	u120_21
  5843     0071  2873               	goto	u120_20
  5844     0072                     u120_21:
  5845     0072  285A               	goto	i1l1800
  5846     0073                     u120_20:
  5847     0073                     i1l1810:
  5848                           
  5849                           ;mcc_generated_files/LINDrivers/lin_master.c: 81:     memset(LIN_packet.rawPacket, 0, si
      +                          zeof(LIN_packet.rawPacket));
  5850     0073  3000               	movlw	0
  5851     0074  00F0               	movwf	i1memset@c
  5852     0075  00F1               	movwf	i1memset@c+1
  5853     0076  300B               	movlw	11
  5854     0077  00F2               	movwf	i1memset@n
  5855     0078  3000               	movlw	0
  5856     0079  00F3               	movwf	i1memset@n+1
  5857     007A  30C4               	movlw	(low (_LIN_packet| 0))& (0+255)
  5858     007B  3185  25AB  3180   	fcall	i1_memset
  5859     007E                     i1l1812:
  5860                           
  5861                           ;mcc_generated_files/LINDrivers/lin_master.c: 84:     LIN_packet.PID = LIN_calcParity(te
      +                          mpSchedule->cmd);
  5862     007E  0020               	movlb	0	; select bank0
  5863     007F  084C               	movf	LIN_queuePacket@tempSchedule,w
  5864     0080  0084               	movwf	4
  5865     0081  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5866     0082  0085               	movwf	5
  5867     0083  0800               	movf	0,w	;code access
  5868     0084  3181  210C  3180   	fcall	_LIN_calcParity
  5869     0087  0021               	movlb	1	; select bank1
  5870     0088  00C4               	movwf	_LIN_packet^(0+128)
  5871     0089                     i1l1814:
  5872                           
  5873                           ;mcc_generated_files/LINDrivers/lin_master.c: 86:     if(tempSchedule->type == TRANSMIT)
      +                          {
  5874     0089  0020               	movlb	0	; select bank0
  5875     008A  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5876     008B  00FA               	movwf	??_LIN_queuePacket+1
  5877     008C  084C               	movf	LIN_queuePacket@tempSchedule,w
  5878     008D  00F9               	movwf	??_LIN_queuePacket
  5879     008E  3001               	movlw	1
  5880     008F  0779               	addwf	??_LIN_queuePacket,w
  5881     0090  0084               	movwf	4
  5882     0091  087A               	movf	??_LIN_queuePacket+1,w
  5883     0092  1803               	skipnc
  5884     0093  0A7A               	incf	??_LIN_queuePacket+1,w
  5885     0094  0085               	movwf	5
  5886     0095  0012               	moviw fsr0++
  5887     0096  1D03               	btfss	3,2
  5888     0097  2899               	goto	u121_21
  5889     0098  289A               	goto	u121_20
  5890     0099                     u121_21:
  5891     0099  28E3               	goto	i1l1826
  5892     009A                     u121_20:
  5893     009A                     i1l1816:
  5894                           
  5895                           ;mcc_generated_files/LINDrivers/lin_master.c: 89:         if(tempSchedule->length > 0){
  5896     009A  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5897     009B  00FA               	movwf	??_LIN_queuePacket+1
  5898     009C  084C               	movf	LIN_queuePacket@tempSchedule,w
  5899     009D  00F9               	movwf	??_LIN_queuePacket
  5900     009E  3002               	movlw	2
  5901     009F  0779               	addwf	??_LIN_queuePacket,w
  5902     00A0  0084               	movwf	4
  5903     00A1  087A               	movf	??_LIN_queuePacket+1,w
  5904     00A2  1803               	skipnc
  5905     00A3  0A7A               	incf	??_LIN_queuePacket+1,w
  5906     00A4  0085               	movwf	5
  5907     00A5  0012               	moviw fsr0++
  5908     00A6  1903               	btfsc	3,2
  5909     00A7  28A9               	goto	u122_21
  5910     00A8  28AA               	goto	u122_20
  5911     00A9                     u122_21:
  5912     00A9  28D2               	goto	i1l81
  5913     00AA                     u122_20:
  5914     00AA                     i1l1818:
  5915                           
  5916                           ;mcc_generated_files/LINDrivers/lin_master.c: 90:             LIN_packet.length = tempSc
      +                          hedule->length;
  5917     00AA  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5918     00AB  00FA               	movwf	??_LIN_queuePacket+1
  5919     00AC  084C               	movf	LIN_queuePacket@tempSchedule,w
  5920     00AD  00F9               	movwf	??_LIN_queuePacket
  5921     00AE  3002               	movlw	2
  5922     00AF  0779               	addwf	??_LIN_queuePacket,w
  5923     00B0  0084               	movwf	4
  5924     00B1  087A               	movf	??_LIN_queuePacket+1,w
  5925     00B2  1803               	skipnc
  5926     00B3  0A7A               	incf	??_LIN_queuePacket+1,w
  5927     00B4  0085               	movwf	5
  5928     00B5  0800               	movf	0,w	;code access
  5929     00B6  0021               	movlb	1	; select bank1
  5930     00B7  00CE               	movwf	(_LIN_packet^(0+128)+10)
  5931     00B8                     i1l1820:
  5932                           
  5933                           ;mcc_generated_files/LINDrivers/lin_master.c: 91:             memcpy(LIN_packet.data, da
      +                          ta, tempSchedule->length);
  5934     00B8  0878               	movf	LIN_queuePacket@data,w
  5935     00B9  00F0               	movwf	i1memcpy@s1
  5936     00BA  0020               	movlb	0	; select bank0
  5937     00BB  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5938     00BC  00FA               	movwf	??_LIN_queuePacket+1
  5939     00BD  084C               	movf	LIN_queuePacket@tempSchedule,w
  5940     00BE  00F9               	movwf	??_LIN_queuePacket
  5941     00BF  3002               	movlw	2
  5942     00C0  0779               	addwf	??_LIN_queuePacket,w
  5943     00C1  0084               	movwf	4
  5944     00C2  087A               	movf	??_LIN_queuePacket+1,w
  5945     00C3  1803               	skipnc
  5946     00C4  0A7A               	incf	??_LIN_queuePacket+1,w
  5947     00C5  0085               	movwf	5
  5948     00C6  0800               	movf	0,w	;code access
  5949     00C7  00FB               	movwf	??_LIN_queuePacket+2
  5950     00C8  01FC               	clrf	??_LIN_queuePacket+3
  5951     00C9  087B               	movf	??_LIN_queuePacket+2,w
  5952     00CA  00F1               	movwf	i1memcpy@n
  5953     00CB  087C               	movf	??_LIN_queuePacket+3,w
  5954     00CC  00F2               	movwf	i1memcpy@n+1
  5955     00CD  30C5               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5956     00CE  3184  24F0  3180   	fcall	i1_memcpy
  5957                           
  5958                           ;mcc_generated_files/LINDrivers/lin_master.c: 92:         } else {
  5959     00D1  28D7               	goto	i1l1824
  5960     00D2                     i1l81:
  5961                           
  5962                           ;mcc_generated_files/LINDrivers/lin_master.c: 93:             LIN_packet.length = 1;
  5963     00D2  0021               	movlb	1	; select bank1
  5964     00D3  01CE               	clrf	(_LIN_packet^(0+128)+10)
  5965     00D4  0ACE               	incf	(_LIN_packet^(0+128)+10),f
  5966     00D5                     i1l1822:
  5967                           
  5968                           ;mcc_generated_files/LINDrivers/lin_master.c: 94:             LIN_packet.data[0] = 0xAA;
  5969     00D5  30AA               	movlw	170
  5970     00D6  00C5               	movwf	(_LIN_packet^(0+128)+1)
  5971     00D7                     i1l1824:
  5972                           
  5973                           ;mcc_generated_files/LINDrivers/lin_master.c: 98:         LIN_packet.checksum = LIN_getC
      +                          hecksum(LIN_packet.length, LIN_packet.PID, LIN_packet.data);
  5974     00D7  0021               	movlb	1	; select bank1
  5975     00D8  0844               	movf	_LIN_packet^(0+128),w
  5976     00D9  00F0               	movwf	i1LIN_getChecksum@pid
  5977     00DA  30C5               	movlw	(low ((_LIN_packet| 0+1)))& (0+255)
  5978     00DB  00F1               	movwf	i1LIN_getChecksum@data
  5979     00DC  084E               	movf	(_LIN_packet^(0+128)+10),w
  5980     00DD  3184  2420  3180   	fcall	i1_LIN_getChecksum
  5981     00E0  0021               	movlb	1	; select bank1
  5982     00E1  00CD               	movwf	(_LIN_packet^(0+128)+9)
  5983                           
  5984                           ;mcc_generated_files/LINDrivers/lin_master.c: 100:     } else {
  5985     00E2  2908               	goto	i1l1828
  5986     00E3                     i1l1826:
  5987                           
  5988                           ;mcc_generated_files/LINDrivers/lin_master.c: 101:         LIN_rxPacket.rxLength = tempS
      +                          chedule->length;
  5989     00E3  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  5990     00E4  00FA               	movwf	??_LIN_queuePacket+1
  5991     00E5  084C               	movf	LIN_queuePacket@tempSchedule,w
  5992     00E6  00F9               	movwf	??_LIN_queuePacket
  5993     00E7  3002               	movlw	2
  5994     00E8  0779               	addwf	??_LIN_queuePacket,w
  5995     00E9  0084               	movwf	4
  5996     00EA  087A               	movf	??_LIN_queuePacket+1,w
  5997     00EB  1803               	skipnc
  5998     00EC  0A7A               	incf	??_LIN_queuePacket+1,w
  5999     00ED  0085               	movwf	5
  6000     00EE  0800               	movf	0,w	;code access
  6001     00EF  0021               	movlb	1	; select bank1
  6002     00F0  00B9               	movwf	(_LIN_rxPacket^(0+128)+1)
  6003                           
  6004                           ;mcc_generated_files/LINDrivers/lin_master.c: 102:         LIN_rxPacket.cmd = tempSchedu
      +                          le->cmd;
  6005     00F1  0020               	movlb	0	; select bank0
  6006     00F2  084C               	movf	LIN_queuePacket@tempSchedule,w
  6007     00F3  0084               	movwf	4
  6008     00F4  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  6009     00F5  0085               	movwf	5
  6010     00F6  0800               	movf	0,w	;code access
  6011     00F7  0021               	movlb	1	; select bank1
  6012     00F8  00B8               	movwf	_LIN_rxPacket^(0+128)
  6013                           
  6014                           ;mcc_generated_files/LINDrivers/lin_master.c: 103:         LIN_rxPacket.timeout = tempSc
      +                          hedule->timeout;
  6015     00F9  0020               	movlb	0	; select bank0
  6016     00FA  084D               	movf	LIN_queuePacket@tempSchedule+1,w
  6017     00FB  00FA               	movwf	??_LIN_queuePacket+1
  6018     00FC  084C               	movf	LIN_queuePacket@tempSchedule,w
  6019     00FD  00F9               	movwf	??_LIN_queuePacket
  6020     00FE  3003               	movlw	3
  6021     00FF  0779               	addwf	??_LIN_queuePacket,w
  6022     0100  0084               	movwf	4
  6023     0101  087A               	movf	??_LIN_queuePacket+1,w
  6024     0102  1803               	skipnc
  6025     0103  0A7A               	incf	??_LIN_queuePacket+1,w
  6026     0104  0085               	movwf	5
  6027     0105  0800               	movf	0,w	;code access
  6028     0106  0021               	movlb	1	; select bank1
  6029     0107  00C3               	movwf	(_LIN_rxPacket^(0+128)+11)
  6030     0108                     i1l1828:
  6031                           
  6032                           ;mcc_generated_files/LINDrivers/lin_master.c: 106:     LIN_txReady = 1;
  6033     0108  0020               	movlb	0	; select bank0
  6034     0109  01C1               	clrf	_LIN_txReady
  6035     010A  0AC1               	incf	_LIN_txReady,f
  6036     010B                     i1l84:
  6037     010B  0008               	return
  6038     010C                     __end_of_LIN_queuePacket:
  6039                           
  6040                           	psect	text42
  6041     05AB                     __ptext42:	
  6042 ;; *************** function i1_memset *****************
  6043 ;; Defined at:
  6044 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  dest            1    wreg     PTR void 
  6047 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6048 ;;  c               2    0[COMMON] int 
  6049 ;;  n               2    2[COMMON] unsigned int 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  dest            1    5[COMMON] PTR void 
  6052 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6053 ;;  p               1    6[COMMON] PTR unsigned char 
  6054 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2    0[COMMON] PTR void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6064 ;;      Params:         4       0       0       0       0       0       0       0
  6065 ;;      Locals:         2       0       0       0       0       0       0       0
  6066 ;;      Temps:          1       0       0       0       0       0       0       0
  6067 ;;      Totals:         7       0       0       0       0       0       0       0
  6068 ;;Total ram usage:        7 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_LIN_queuePacket
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077     05AB                     i1_memset:	
  6078                           ;psect for function i1_memset
  6079                           
  6080                           
  6081                           ;incstack = 0
  6082                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6083                           ;i1memset@dest stored from wreg
  6084     05AB  00F5               	movwf	i1memset@dest
  6085     05AC                     i1l1782:
  6086     05AC  0875               	movf	i1memset@dest,w
  6087     05AD  00F6               	movwf	i1memset@p
  6088     05AE  2DB8               	goto	i1l1788
  6089     05AF                     i1l1784:
  6090     05AF  0876               	movf	i1memset@p,w
  6091     05B0  0086               	movwf	6
  6092     05B1  0187               	clrf	7
  6093     05B2  0870               	movf	i1memset@c,w
  6094     05B3  0081               	movwf	1
  6095     05B4                     i1l1786:
  6096     05B4  3001               	movlw	1
  6097     05B5  00F4               	movwf	??i1_memset
  6098     05B6  0874               	movf	??i1_memset,w
  6099     05B7  07F6               	addwf	i1memset@p,f
  6100     05B8                     i1l1788:
  6101     05B8  3001               	movlw	1
  6102     05B9  02F2               	subwf	i1memset@n,f
  6103     05BA  3000               	movlw	0
  6104     05BB  3BF3               	subwfb	i1memset@n+1,f
  6105     05BC  0A72               	incf	i1memset@n,w
  6106     05BD  1D03               	skipz
  6107     05BE  2DC3               	goto	u118_21
  6108     05BF  0A73               	incf	i1memset@n+1,w
  6109     05C0  1D03               	btfss	3,2
  6110     05C1  2DC3               	goto	u118_21
  6111     05C2  2DC4               	goto	u118_20
  6112     05C3                     u118_21:
  6113     05C3  2DAF               	goto	i1l1784
  6114     05C4                     u118_20:
  6115     05C4                     i1l1152:
  6116     05C4  0008               	return
  6117     05C5                     __end_ofi1_memset:
  6118                           
  6119                           	psect	text43
  6120     04F0                     __ptext43:	
  6121 ;; *************** function i1_memcpy *****************
  6122 ;; Defined at:
  6123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  d1              1    wreg     PTR void 
  6126 ;;		 -> processLIN@tempRxData(8), LIN_packet(11), 
  6127 ;;  s1              1    0[COMMON] PTR const void 
  6128 ;;		 -> SW_STATE_Data(8), LIN_rxPacket(12), 
  6129 ;;  n               2    1[COMMON] unsigned int 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  d1              1    4[COMMON] PTR void 
  6132 ;;		 -> processLIN@tempRxData(8), LIN_packet(11), 
  6133 ;;  s               1    7[COMMON] PTR const unsigned char 
  6134 ;;		 -> SW_STATE_Data(8), LIN_rxPacket(12), 
  6135 ;;  d               1    6[COMMON] PTR unsigned char 
  6136 ;;		 -> processLIN@tempRxData(8), LIN_packet(11), 
  6137 ;;  tmp             1    5[COMMON] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  2    0[COMMON] PTR void 
  6140 ;; Registers used:
  6141 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6147 ;;      Params:         3       0       0       0       0       0       0       0
  6148 ;;      Locals:         4       0       0       0       0       0       0       0
  6149 ;;      Temps:          1       0       0       0       0       0       0       0
  6150 ;;      Totals:         8       0       0       0       0       0       0       0
  6151 ;;Total ram usage:        8 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_LIN_queuePacket
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160     04F0                     i1_memcpy:	
  6161                           ;psect for function i1_memcpy
  6162                           
  6163                           
  6164                           ;incstack = 0
  6165                           ; Regs used in i1_memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6166                           ;i1memcpy@d1 stored from wreg
  6167     04F0  00F4               	movwf	i1memcpy@d1
  6168     04F1                     i1l1774:
  6169     04F1  0870               	movf	i1memcpy@s1,w
  6170     04F2  00F7               	movwf	i1memcpy@s
  6171     04F3  0874               	movf	i1memcpy@d1,w
  6172     04F4  00F6               	movwf	i1memcpy@d
  6173     04F5  2D08               	goto	i1l1143
  6174     04F6                     i1l1776:
  6175     04F6  0877               	movf	i1memcpy@s,w
  6176     04F7  0086               	movwf	6
  6177     04F8  0187               	clrf	7
  6178     04F9  0801               	movf	1,w
  6179     04FA  00F5               	movwf	i1memcpy@tmp
  6180     04FB                     i1l1778:
  6181     04FB  3001               	movlw	1
  6182     04FC  00F3               	movwf	??i1_memcpy
  6183     04FD  0873               	movf	??i1_memcpy,w
  6184     04FE  07F7               	addwf	i1memcpy@s,f
  6185     04FF                     i1l1780:
  6186     04FF  0876               	movf	i1memcpy@d,w
  6187     0500  0086               	movwf	6
  6188     0501  0187               	clrf	7
  6189     0502  0875               	movf	i1memcpy@tmp,w
  6190     0503  0081               	movwf	1
  6191     0504  3001               	movlw	1
  6192     0505  00F3               	movwf	??i1_memcpy
  6193     0506  0873               	movf	??i1_memcpy,w
  6194     0507  07F6               	addwf	i1memcpy@d,f
  6195     0508                     i1l1143:
  6196     0508  3001               	movlw	1
  6197     0509  02F1               	subwf	i1memcpy@n,f
  6198     050A  3000               	movlw	0
  6199     050B  3BF2               	subwfb	i1memcpy@n+1,f
  6200     050C  0A71               	incf	i1memcpy@n,w
  6201     050D  1D03               	skipz
  6202     050E  2D13               	goto	u117_21
  6203     050F  0A72               	incf	i1memcpy@n+1,w
  6204     0510  1D03               	btfss	3,2
  6205     0511  2D13               	goto	u117_21
  6206     0512  2D14               	goto	u117_20
  6207     0513                     u117_21:
  6208     0513  2CF6               	goto	i1l1776
  6209     0514                     u117_20:
  6210     0514                     i1l1146:
  6211     0514  0008               	return
  6212     0515                     __end_ofi1_memcpy:
  6213                           
  6214                           	psect	text44
  6215     0420                     __ptext44:	
  6216 ;; *************** function i1_LIN_getChecksum *****************
  6217 ;; Defined at:
  6218 ;;		line 230 in file "mcc_generated_files/LINDrivers/lin_master.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  length          1    wreg     unsigned char 
  6221 ;;  pid             1    0[COMMON] unsigned char 
  6222 ;;  data            1    1[COMMON] PTR unsigned char 
  6223 ;;		 -> LIN_rxPacket(12), LIN_packet(11), 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  length          1    4[COMMON] unsigned char 
  6226 ;;  checksum        2    6[COMMON] unsigned short 
  6227 ;;  i               1    5[COMMON] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      unsigned char 
  6230 ;; Registers used:
  6231 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6237 ;;      Params:         2       0       0       0       0       0       0       0
  6238 ;;      Locals:         4       0       0       0       0       0       0       0
  6239 ;;      Temps:          2       0       0       0       0       0       0       0
  6240 ;;      Totals:         8       0       0       0       0       0       0       0
  6241 ;;Total ram usage:        8 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_LIN_queuePacket
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250     0420                     i1_LIN_getChecksum:	
  6251                           ;psect for function i1_LIN_getChecksum
  6252                           
  6253                           
  6254                           ;incstack = 0
  6255                           ; Regs used in i1_LIN_getChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  6256                           ;i1LIN_getChecksum@length stored from wreg
  6257     0420  00F4               	movwf	i1LIN_getChecksum@length
  6258     0421                     i1l1754:
  6259                           
  6260                           ;mcc_generated_files/LINDrivers/lin_master.c: 231:     uint16_t checksum = pid;
  6261     0421  0870               	movf	i1LIN_getChecksum@pid,w
  6262     0422  00F2               	movwf	??i1_LIN_getChecksum
  6263     0423  01F3               	clrf	??i1_LIN_getChecksum+1
  6264     0424  0872               	movf	??i1_LIN_getChecksum,w
  6265     0425  00F6               	movwf	i1LIN_getChecksum@checksum
  6266     0426  0873               	movf	??i1_LIN_getChecksum+1,w
  6267     0427  00F7               	movwf	i1LIN_getChecksum@checksum+1
  6268     0428                     i1l1756:
  6269                           
  6270                           ;mcc_generated_files/LINDrivers/lin_master.c: 233:     for (uint8_t i = 0; i < length; i
      +                          ++){
  6271     0428  01F5               	clrf	i1LIN_getChecksum@i
  6272     0429  2C49               	goto	i1l1768
  6273     042A                     i1l1758:
  6274                           
  6275                           ;mcc_generated_files/LINDrivers/lin_master.c: 234:         checksum = checksum + *data++
      +                          ;
  6276     042A  0871               	movf	i1LIN_getChecksum@data,w
  6277     042B  0086               	movwf	6
  6278     042C  0187               	clrf	7
  6279     042D  0801               	movf	1,w
  6280     042E  0776               	addwf	i1LIN_getChecksum@checksum,w
  6281     042F  00F6               	movwf	i1LIN_getChecksum@checksum
  6282     0430  0877               	movf	i1LIN_getChecksum@checksum+1,w
  6283     0431  1803               	skipnc
  6284     0432  0A77               	incf	i1LIN_getChecksum@checksum+1,w
  6285     0433  00F7               	movwf	i1LIN_getChecksum@checksum+1
  6286     0434                     i1l1760:
  6287     0434  3001               	movlw	1
  6288     0435  00F2               	movwf	??i1_LIN_getChecksum
  6289     0436  0872               	movf	??i1_LIN_getChecksum,w
  6290     0437  07F1               	addwf	i1LIN_getChecksum@data,f
  6291     0438                     i1l1762:
  6292                           
  6293                           ;mcc_generated_files/LINDrivers/lin_master.c: 235:         if(checksum > 0xFF)
  6294     0438  3001               	movlw	1
  6295     0439  0277               	subwf	i1LIN_getChecksum@checksum+1,w
  6296     043A  3000               	movlw	0
  6297     043B  1903               	skipnz
  6298     043C  0276               	subwf	i1LIN_getChecksum@checksum,w
  6299     043D  1C03               	skipc
  6300     043E  2C40               	goto	u115_21
  6301     043F  2C41               	goto	u115_20
  6302     0440                     u115_21:
  6303     0440  2C45               	goto	i1l1766
  6304     0441                     u115_20:
  6305     0441                     i1l1764:
  6306                           
  6307                           ;mcc_generated_files/LINDrivers/lin_master.c: 236:             checksum -= 0xFF;
  6308     0441  30FF               	movlw	255
  6309     0442  02F6               	subwf	i1LIN_getChecksum@checksum,f
  6310     0443  3000               	movlw	0
  6311     0444  3BF7               	subwfb	i1LIN_getChecksum@checksum+1,f
  6312     0445                     i1l1766:
  6313                           
  6314                           ;mcc_generated_files/LINDrivers/lin_master.c: 237:     }
  6315     0445  3001               	movlw	1
  6316     0446  00F2               	movwf	??i1_LIN_getChecksum
  6317     0447  0872               	movf	??i1_LIN_getChecksum,w
  6318     0448  07F5               	addwf	i1LIN_getChecksum@i,f
  6319     0449                     i1l1768:
  6320     0449  0874               	movf	i1LIN_getChecksum@length,w
  6321     044A  0275               	subwf	i1LIN_getChecksum@i,w
  6322     044B  1C03               	skipc
  6323     044C  2C4E               	goto	u116_21
  6324     044D  2C4F               	goto	u116_20
  6325     044E                     u116_21:
  6326     044E  2C2A               	goto	i1l1758
  6327     044F                     u116_20:
  6328     044F                     i1l132:
  6329                           
  6330                           ;mcc_generated_files/LINDrivers/lin_master.c: 238:     checksum = ~checksum;
  6331     044F  09F6               	comf	i1LIN_getChecksum@checksum,f
  6332     0450  09F7               	comf	i1LIN_getChecksum@checksum+1,f
  6333     0451                     i1l1770:
  6334                           
  6335                           ;mcc_generated_files/LINDrivers/lin_master.c: 240:     return (uint8_t)checksum;
  6336     0451  0876               	movf	i1LIN_getChecksum@checksum,w
  6337     0452                     i1l133:
  6338     0452  0008               	return
  6339     0453                     __end_ofi1_LIN_getChecksum:
  6340                           
  6341                           	psect	text45
  6342     010C                     __ptext45:	
  6343 ;; *************** function _LIN_calcParity *****************
  6344 ;; Defined at:
  6345 ;;		line 212 in file "mcc_generated_files/LINDrivers/lin_master.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  CMD             1    wreg     unsigned char 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  CMD             1    1[COMMON] unsigned char 
  6350 ;;  PID             1    2[COMMON] struct .
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      unsigned char 
  6353 ;; Registers used:
  6354 ;;		wreg, status,0
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6360 ;;      Params:         0       0       0       0       0       0       0       0
  6361 ;;      Locals:         2       0       0       0       0       0       0       0
  6362 ;;      Temps:          1       0       0       0       0       0       0       0
  6363 ;;      Totals:         3       0       0       0       0       0       0       0
  6364 ;;Total ram usage:        3 bytes
  6365 ;; Hardware stack levels used: 1
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_LIN_queuePacket
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373     010C                     _LIN_calcParity:	
  6374                           ;psect for function _LIN_calcParity
  6375                           
  6376                           
  6377                           ;incstack = 0
  6378                           ; Regs used in _LIN_calcParity: [wreg+status,0]
  6379                           ;LIN_calcParity@CMD stored from wreg
  6380     010C  00F1               	movwf	LIN_calcParity@CMD
  6381     010D                     i1l1744:
  6382                           
  6383                           ;mcc_generated_files/LINDrivers/lin_master.c: 213:     lin_pid_t PID;;mcc_generated_file
      +                          s/LINDrivers/lin_master.c: 214:     PID.rawPID = CMD;
  6384     010D  0871               	movf	LIN_calcParity@CMD,w
  6385     010E  00F2               	movwf	LIN_calcParity@PID
  6386                           
  6387                           ;mcc_generated_files/LINDrivers/lin_master.c: 219:     PID.P0 = PID.ID0 ^ PID.ID1;
  6388     010F  18F2               	btfsc	LIN_calcParity@PID,1
  6389     0110  2912               	goto	u89_21
  6390     0111  2914               	goto	u89_20
  6391     0112                     u89_21:
  6392     0112  3001               	movlw	1
  6393     0113  2915               	goto	u89_22
  6394     0114                     u89_20:
  6395     0114  3000               	movlw	0
  6396     0115                     u89_22:
  6397     0115  00F0               	movwf	??_LIN_calcParity
  6398     0116  1872               	btfsc	LIN_calcParity@PID,0
  6399     0117  2919               	goto	u90_21
  6400     0118  291B               	goto	u90_20
  6401     0119                     u90_21:
  6402     0119  3001               	movlw	1
  6403     011A  291C               	goto	u90_22
  6404     011B                     u90_20:
  6405     011B  3000               	movlw	0
  6406     011C                     u90_22:
  6407     011C  0670               	xorwf	??_LIN_calcParity,w
  6408     011D  1D03               	skipz
  6409     011E  2920               	goto	u91_21
  6410     011F  2922               	goto	u91_20
  6411     0120                     u91_21:
  6412     0120  1772               	bsf	LIN_calcParity@PID,6
  6413     0121  2923               	goto	u92_24
  6414     0122                     u91_20:
  6415     0122  1372               	bcf	LIN_calcParity@PID,6
  6416     0123                     u92_24:
  6417                           
  6418                           ;mcc_generated_files/LINDrivers/lin_master.c: 220:     PID.P0 = PID.P0 ^ PID.ID2;
  6419     0123  1972               	btfsc	LIN_calcParity@PID,2
  6420     0124  2926               	goto	u93_21
  6421     0125  2928               	goto	u93_20
  6422     0126                     u93_21:
  6423     0126  3001               	movlw	1
  6424     0127  2929               	goto	u93_22
  6425     0128                     u93_20:
  6426     0128  3000               	movlw	0
  6427     0129                     u93_22:
  6428     0129  00F0               	movwf	??_LIN_calcParity
  6429     012A  1B72               	btfsc	LIN_calcParity@PID,6
  6430     012B  292D               	goto	u94_21
  6431     012C  292F               	goto	u94_20
  6432     012D                     u94_21:
  6433     012D  3001               	movlw	1
  6434     012E  2930               	goto	u94_22
  6435     012F                     u94_20:
  6436     012F  3000               	movlw	0
  6437     0130                     u94_22:
  6438     0130  0670               	xorwf	??_LIN_calcParity,w
  6439     0131  1D03               	skipz
  6440     0132  2934               	goto	u95_21
  6441     0133  2936               	goto	u95_20
  6442     0134                     u95_21:
  6443     0134  1772               	bsf	LIN_calcParity@PID,6
  6444     0135  2937               	goto	u96_24
  6445     0136                     u95_20:
  6446     0136  1372               	bcf	LIN_calcParity@PID,6
  6447     0137                     u96_24:
  6448                           
  6449                           ;mcc_generated_files/LINDrivers/lin_master.c: 221:     PID.P0 = PID.P0 ^ PID.ID4;
  6450     0137  1A72               	btfsc	LIN_calcParity@PID,4
  6451     0138  293A               	goto	u97_21
  6452     0139  293C               	goto	u97_20
  6453     013A                     u97_21:
  6454     013A  3001               	movlw	1
  6455     013B  293D               	goto	u97_22
  6456     013C                     u97_20:
  6457     013C  3000               	movlw	0
  6458     013D                     u97_22:
  6459     013D  00F0               	movwf	??_LIN_calcParity
  6460     013E  1B72               	btfsc	LIN_calcParity@PID,6
  6461     013F  2941               	goto	u98_21
  6462     0140  2943               	goto	u98_20
  6463     0141                     u98_21:
  6464     0141  3001               	movlw	1
  6465     0142  2944               	goto	u98_22
  6466     0143                     u98_20:
  6467     0143  3000               	movlw	0
  6468     0144                     u98_22:
  6469     0144  0670               	xorwf	??_LIN_calcParity,w
  6470     0145  1D03               	skipz
  6471     0146  2948               	goto	u99_21
  6472     0147  294A               	goto	u99_20
  6473     0148                     u99_21:
  6474     0148  1772               	bsf	LIN_calcParity@PID,6
  6475     0149  294B               	goto	u100_24
  6476     014A                     u99_20:
  6477     014A  1372               	bcf	LIN_calcParity@PID,6
  6478     014B                     u100_24:
  6479                           
  6480                           ;mcc_generated_files/LINDrivers/lin_master.c: 222:     PID.P1 = PID.ID1 ^ PID.ID3;
  6481     014B  19F2               	btfsc	LIN_calcParity@PID,3
  6482     014C  294E               	goto	u101_21
  6483     014D  2950               	goto	u101_20
  6484     014E                     u101_21:
  6485     014E  3001               	movlw	1
  6486     014F  2951               	goto	u101_22
  6487     0150                     u101_20:
  6488     0150  3000               	movlw	0
  6489     0151                     u101_22:
  6490     0151  00F0               	movwf	??_LIN_calcParity
  6491     0152  18F2               	btfsc	LIN_calcParity@PID,1
  6492     0153  2955               	goto	u102_21
  6493     0154  2957               	goto	u102_20
  6494     0155                     u102_21:
  6495     0155  3001               	movlw	1
  6496     0156  2958               	goto	u102_22
  6497     0157                     u102_20:
  6498     0157  3000               	movlw	0
  6499     0158                     u102_22:
  6500     0158  0670               	xorwf	??_LIN_calcParity,w
  6501     0159  1D03               	skipz
  6502     015A  295C               	goto	u103_21
  6503     015B  295E               	goto	u103_20
  6504     015C                     u103_21:
  6505     015C  17F2               	bsf	LIN_calcParity@PID,7
  6506     015D  295F               	goto	u104_24
  6507     015E                     u103_20:
  6508     015E  13F2               	bcf	LIN_calcParity@PID,7
  6509     015F                     u104_24:
  6510                           
  6511                           ;mcc_generated_files/LINDrivers/lin_master.c: 223:     PID.P1 = PID.P1 ^ PID.ID4;
  6512     015F  1A72               	btfsc	LIN_calcParity@PID,4
  6513     0160  2962               	goto	u105_21
  6514     0161  2964               	goto	u105_20
  6515     0162                     u105_21:
  6516     0162  3001               	movlw	1
  6517     0163  2965               	goto	u105_22
  6518     0164                     u105_20:
  6519     0164  3000               	movlw	0
  6520     0165                     u105_22:
  6521     0165  00F0               	movwf	??_LIN_calcParity
  6522     0166  1BF2               	btfsc	LIN_calcParity@PID,7
  6523     0167  2969               	goto	u106_21
  6524     0168  296B               	goto	u106_20
  6525     0169                     u106_21:
  6526     0169  3001               	movlw	1
  6527     016A  296C               	goto	u106_22
  6528     016B                     u106_20:
  6529     016B  3000               	movlw	0
  6530     016C                     u106_22:
  6531     016C  0670               	xorwf	??_LIN_calcParity,w
  6532     016D  1D03               	skipz
  6533     016E  2970               	goto	u107_21
  6534     016F  2972               	goto	u107_20
  6535     0170                     u107_21:
  6536     0170  17F2               	bsf	LIN_calcParity@PID,7
  6537     0171  2973               	goto	u108_24
  6538     0172                     u107_20:
  6539     0172  13F2               	bcf	LIN_calcParity@PID,7
  6540     0173                     u108_24:
  6541                           
  6542                           ;mcc_generated_files/LINDrivers/lin_master.c: 224:     PID.P1 = PID.P1 ^ PID.ID5;
  6543     0173  1AF2               	btfsc	LIN_calcParity@PID,5
  6544     0174  2976               	goto	u109_21
  6545     0175  2978               	goto	u109_20
  6546     0176                     u109_21:
  6547     0176  3001               	movlw	1
  6548     0177  2979               	goto	u109_22
  6549     0178                     u109_20:
  6550     0178  3000               	movlw	0
  6551     0179                     u109_22:
  6552     0179  00F0               	movwf	??_LIN_calcParity
  6553     017A  1BF2               	btfsc	LIN_calcParity@PID,7
  6554     017B  297D               	goto	u110_21
  6555     017C  297F               	goto	u110_20
  6556     017D                     u110_21:
  6557     017D  3001               	movlw	1
  6558     017E  2980               	goto	u110_22
  6559     017F                     u110_20:
  6560     017F  3000               	movlw	0
  6561     0180                     u110_22:
  6562     0180  0670               	xorwf	??_LIN_calcParity,w
  6563     0181  1D03               	skipz
  6564     0182  2984               	goto	u111_21
  6565     0183  2986               	goto	u111_20
  6566     0184                     u111_21:
  6567     0184  17F2               	bsf	LIN_calcParity@PID,7
  6568     0185  2987               	goto	u112_24
  6569     0186                     u111_20:
  6570     0186  13F2               	bcf	LIN_calcParity@PID,7
  6571     0187                     u112_24:
  6572     0187                     i1l1746:
  6573                           
  6574                           ;mcc_generated_files/LINDrivers/lin_master.c: 225:     PID.P1 = ~PID.P1;
  6575     0187  1003               	clrc
  6576     0188  1FF2               	btfss	LIN_calcParity@PID,7
  6577     0189  1403               	setc
  6578     018A  1803               	btfsc	3,0
  6579     018B  298D               	goto	u113_21
  6580     018C  298F               	goto	u113_20
  6581     018D                     u113_21:
  6582     018D  17F2               	bsf	LIN_calcParity@PID,7
  6583     018E  2990               	goto	u114_24
  6584     018F                     u113_20:
  6585     018F  13F2               	bcf	LIN_calcParity@PID,7
  6586     0190                     u114_24:
  6587     0190                     i1l1748:
  6588                           
  6589                           ;mcc_generated_files/LINDrivers/lin_master.c: 227:     return PID.rawPID;
  6590     0190  0872               	movf	LIN_calcParity@PID,w
  6591     0191                     i1l126:
  6592     0191  0008               	return
  6593     0192                     __end_of_LIN_calcParity:
  6594                           
  6595                           	psect	text46
  6596     0515                     __ptext46:	
  6597 ;; *************** function _EUSART_Transmit_ISR *****************
  6598 ;; Defined at:
  6599 ;;		line 197 in file "mcc_generated_files/eusart.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;		None
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6613 ;;      Params:         0       0       0       0       0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0
  6615 ;;      Temps:          1       0       0       0       0       0       0       0
  6616 ;;      Totals:         1       0       0       0       0       0       0       0
  6617 ;;Total ram usage:        1 bytes
  6618 ;; Hardware stack levels used: 1
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_EUSART_Initialize
  6623 ;;		_INTERRUPT_InterruptManager
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627     0515                     _EUSART_Transmit_ISR:	
  6628                           ;psect for function _EUSART_Transmit_ISR
  6629                           
  6630     0515                     i1l2180:	
  6631                           ;incstack = 0
  6632                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6633                           
  6634                           
  6635                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  6636     0515  3008               	movlw	8
  6637     0516  0020               	movlb	0	; select bank0
  6638     0517  0235               	subwf	_eusartTxBufferRemaining,w	;volatile
  6639     0518  1803               	skipnc
  6640     0519  2D1B               	goto	u158_21
  6641     051A  2D1C               	goto	u158_20
  6642     051B                     u158_21:
  6643     051B  2D34               	goto	i1l299
  6644     051C                     u158_20:
  6645     051C                     i1l2182:
  6646                           
  6647                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  6648     051C  0836               	movf	_eusartTxTail,w
  6649     051D  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  6650     051E  0086               	movwf	6
  6651     051F  0187               	clrf	7
  6652     0520  0801               	movf	1,w
  6653     0521  0023               	movlb	3	; select bank3
  6654     0522  009A               	movwf	26	;volatile
  6655     0523                     i1l2184:
  6656     0523  3001               	movlw	1
  6657     0524  00F0               	movwf	??_EUSART_Transmit_ISR
  6658     0525  0870               	movf	??_EUSART_Transmit_ISR,w
  6659     0526  0020               	movlb	0	; select bank0
  6660     0527  07B6               	addwf	_eusartTxTail,f	;volatile
  6661     0528                     i1l2186:
  6662                           
  6663                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  6664     0528  3008               	movlw	8
  6665     0529  0236               	subwf	_eusartTxTail,w	;volatile
  6666     052A  1C03               	skipc
  6667     052B  2D2D               	goto	u159_21
  6668     052C  2D2E               	goto	u159_20
  6669     052D                     u159_21:
  6670     052D  2D2F               	goto	i1l2190
  6671     052E                     u159_20:
  6672     052E                     i1l2188:
  6673                           
  6674                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  6675     052E  01B6               	clrf	_eusartTxTail	;volatile
  6676     052F                     i1l2190:
  6677                           
  6678                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  6679     052F  3001               	movlw	1
  6680     0530  00F0               	movwf	??_EUSART_Transmit_ISR
  6681     0531  0870               	movf	??_EUSART_Transmit_ISR,w
  6682     0532  07B5               	addwf	_eusartTxBufferRemaining,f	;volatile
  6683                           
  6684                           ;mcc_generated_files/eusart.c: 209:     }
  6685     0533  2D36               	goto	i1l302
  6686     0534                     i1l299:	
  6687                           ;mcc_generated_files/eusart.c: 210:     else
  6688                           
  6689                           
  6690                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  6691     0534  0021               	movlb	1	; select bank1
  6692     0535  1211               	bcf	17,4	;volatile
  6693     0536                     i1l302:
  6694     0536  0008               	return
  6695     0537                     __end_of_EUSART_Transmit_ISR:
  6696                           
  6697                           	psect	text47
  6698     034A                     __ptext47:	
  6699 ;; *************** function _EUSART_Receive_ISR *****************
  6700 ;; Defined at:
  6701 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;		None
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6715 ;;      Params:         0       0       0       0       0       0       0       0
  6716 ;;      Locals:         0       0       0       0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0
  6718 ;;      Totals:         0       0       0       0       0       0       0       0
  6719 ;;Total ram usage:        0 bytes
  6720 ;; Hardware stack levels used: 1
  6721 ;; Hardware stack levels required when called: 2
  6722 ;; This function calls:
  6723 ;;		NULL
  6724 ;;		_EUSART_DefaultErrorHandler
  6725 ;;		_EUSART_DefaultFramingErrorHandler
  6726 ;;		_EUSART_DefaultOverrunErrorHandler
  6727 ;;		_EUSART_RxDataHandler
  6728 ;; This function is called by:
  6729 ;;		_EUSART_Initialize
  6730 ;;		_INTERRUPT_InterruptManager
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734     034A                     _EUSART_Receive_ISR:	
  6735                           ;psect for function _EUSART_Receive_ISR
  6736                           
  6737     034A                     i1l2192:	
  6738                           ;incstack = 0
  6739                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6740                           
  6741                           
  6742                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  6743     034A  0020               	movlb	0	; select bank0
  6744     034B  0834               	movf	_eusartRxHead,w	;volatile
  6745     034C  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6746     034D  0086               	movwf	6
  6747     034E  0187               	clrf	7
  6748     034F  0181               	clrf	1
  6749     0350                     i1l2194:
  6750                           
  6751                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  6752     0350  0023               	movlb	3	; select bank3
  6753     0351  1D1D               	btfss	29,2	;volatile
  6754     0352  2B54               	goto	u160_21
  6755     0353  2B55               	goto	u160_20
  6756     0354                     u160_21:
  6757     0354  2B60               	goto	i1l2200
  6758     0355                     u160_20:
  6759     0355                     i1l2196:
  6760                           
  6761                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6762     0355  0020               	movlb	0	; select bank0
  6763     0356  0834               	movf	_eusartRxHead,w	;volatile
  6764     0357  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6765     0358  0086               	movwf	6
  6766     0359  0187               	clrf	7
  6767     035A  1481               	bsf	1,1
  6768     035B                     i1l2198:
  6769                           
  6770                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  6771     035B  0827               	movf	_EUSART_FramingErrorHandler+1,w
  6772     035C  008A               	movwf	10
  6773     035D  0826               	movf	_EUSART_FramingErrorHandler,w
  6774     035E  000A               	callw
  6775     035F  3183               	pagesel	$
  6776     0360                     i1l2200:
  6777                           
  6778                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  6779     0360  0023               	movlb	3	; select bank3
  6780     0361  1C9D               	btfss	29,1	;volatile
  6781     0362  2B64               	goto	u161_21
  6782     0363  2B65               	goto	u161_20
  6783     0364                     u161_21:
  6784     0364  2B70               	goto	i1l2206
  6785     0365                     u161_20:
  6786     0365                     i1l2202:
  6787                           
  6788                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6789     0365  0020               	movlb	0	; select bank0
  6790     0366  0834               	movf	_eusartRxHead,w	;volatile
  6791     0367  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6792     0368  0086               	movwf	6
  6793     0369  0187               	clrf	7
  6794     036A  1501               	bsf	1,2
  6795     036B                     i1l2204:
  6796                           
  6797                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  6798     036B  0825               	movf	_EUSART_OverrunErrorHandler+1,w
  6799     036C  008A               	movwf	10
  6800     036D  0824               	movf	_EUSART_OverrunErrorHandler,w
  6801     036E  000A               	callw
  6802     036F  3183               	pagesel	$
  6803     0370                     i1l2206:
  6804                           
  6805                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  6806     0370  0020               	movlb	0	; select bank0
  6807     0371  0834               	movf	_eusartRxHead,w	;volatile
  6808     0372  3EA0               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6809     0373  0086               	movwf	6
  6810     0374  0187               	clrf	7
  6811     0375  0801               	movf	1,w
  6812     0376  1903               	btfsc	3,2
  6813     0377  2B79               	goto	u162_21
  6814     0378  2B7A               	goto	u162_20
  6815     0379                     u162_21:
  6816     0379  2B80               	goto	i1l2210
  6817     037A                     u162_20:
  6818     037A                     i1l2208:
  6819                           
  6820                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  6821     037A  0823               	movf	_EUSART_ErrorHandler+1,w
  6822     037B  008A               	movwf	10
  6823     037C  0822               	movf	_EUSART_ErrorHandler,w
  6824     037D  000A               	callw
  6825     037E  3183               	pagesel	$
  6826                           
  6827                           ;mcc_generated_files/eusart.c: 233:     } else {
  6828     037F  2B83               	goto	i1l309
  6829     0380                     i1l2210:
  6830                           
  6831                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  6832     0380  3185  25C5  3183   	fcall	_EUSART_RxDataHandler
  6833     0383                     i1l309:
  6834     0383  0008               	return
  6835     0384                     __end_of_EUSART_Receive_ISR:
  6836                           
  6837                           	psect	text48
  6838     06BF                     __ptext48:	
  6839 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  6840 ;; Defined at:
  6841 ;;		line 252 in file "mcc_generated_files/eusart.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		None
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6855 ;;      Params:         0       0       0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0
  6858 ;;      Totals:         0       0       0       0       0       0       0       0
  6859 ;;Total ram usage:        0 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_EUSART_Initialize
  6865 ;;		_EUSART_Receive_ISR
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869     06BF                     _EUSART_DefaultOverrunErrorHandler:	
  6870                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  6871                           
  6872     06BF                     i1l2088:	
  6873                           ;incstack = 0
  6874                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  6875                           
  6876                           
  6877                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  6878     06BF  0023               	movlb	3	; select bank3
  6879     06C0  121D               	bcf	29,4	;volatile
  6880                           
  6881                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  6882     06C1  161D               	bsf	29,4	;volatile
  6883     06C2                     i1l319:
  6884     06C2  0008               	return
  6885     06C3                     __end_of_EUSART_DefaultOverrunErrorHandler:
  6886                           
  6887                           	psect	text49
  6888     06CC                     __ptext49:	
  6889 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  6890 ;; Defined at:
  6891 ;;		line 250 in file "mcc_generated_files/eusart.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;		None
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		None
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6905 ;;      Params:         0       0       0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0       0       0
  6908 ;;      Totals:         0       0       0       0       0       0       0       0
  6909 ;;Total ram usage:        0 bytes
  6910 ;; Hardware stack levels used: 1
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_EUSART_Initialize
  6915 ;;		_EUSART_Receive_ISR
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919     06CC                     _EUSART_DefaultFramingErrorHandler:	
  6920                           ;psect for function _EUSART_DefaultFramingErrorHandler
  6921                           
  6922     06CC                     i1l316:	
  6923                           ;incstack = 0
  6924                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  6925                           
  6926     06CC  0008               	return
  6927     06CD                     __end_of_EUSART_DefaultFramingErrorHandler:
  6928                           
  6929                           	psect	text50
  6930     06C3                     __ptext50:	
  6931 ;; *************** function _EUSART_DefaultErrorHandler *****************
  6932 ;; Defined at:
  6933 ;;		line 260 in file "mcc_generated_files/eusart.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;		None
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6947 ;;      Params:         0       0       0       0       0       0       0       0
  6948 ;;      Locals:         0       0       0       0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0       0       0
  6950 ;;      Totals:         0       0       0       0       0       0       0       0
  6951 ;;Total ram usage:        0 bytes
  6952 ;; Hardware stack levels used: 1
  6953 ;; Hardware stack levels required when called: 1
  6954 ;; This function calls:
  6955 ;;		_EUSART_RxDataHandler
  6956 ;; This function is called by:
  6957 ;;		_EUSART_Initialize
  6958 ;;		_EUSART_Receive_ISR
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962     06C3                     _EUSART_DefaultErrorHandler:	
  6963                           ;psect for function _EUSART_DefaultErrorHandler
  6964                           
  6965     06C3                     i1l2090:	
  6966                           ;incstack = 0
  6967                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6968                           
  6969                           
  6970                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  6971     06C3  3185  25C5  3186   	fcall	_EUSART_RxDataHandler
  6972     06C6                     i1l322:
  6973     06C6  0008               	return
  6974     06C7                     __end_of_EUSART_DefaultErrorHandler:
  6975                           
  6976                           	psect	text51
  6977     05C5                     __ptext51:	
  6978 ;; *************** function _EUSART_RxDataHandler *****************
  6979 ;; Defined at:
  6980 ;;		line 240 in file "mcc_generated_files/eusart.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      void 
  6987 ;; Registers used:
  6988 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6994 ;;      Params:         0       0       0       0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0
  6996 ;;      Temps:          1       0       0       0       0       0       0       0
  6997 ;;      Totals:         1       0       0       0       0       0       0       0
  6998 ;;Total ram usage:        1 bytes
  6999 ;; Hardware stack levels used: 1
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_EUSART_Receive_ISR
  7004 ;;		_EUSART_DefaultErrorHandler
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008     05C5                     _EUSART_RxDataHandler:	
  7009                           ;psect for function _EUSART_RxDataHandler
  7010                           
  7011     05C5                     i1l1968:	
  7012                           ;incstack = 0
  7013                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  7014                           
  7015                           
  7016                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7017     05C5  0020               	movlb	0	; select bank0
  7018     05C6  0834               	movf	_eusartRxHead,w
  7019     05C7  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7020     05C8  0086               	movwf	6
  7021     05C9  0187               	clrf	7
  7022     05CA  0023               	movlb	3	; select bank3
  7023     05CB  0819               	movf	25,w	;volatile
  7024     05CC  0081               	movwf	1
  7025     05CD                     i1l1970:
  7026     05CD  3001               	movlw	1
  7027     05CE  00F0               	movwf	??_EUSART_RxDataHandler
  7028     05CF  0870               	movf	??_EUSART_RxDataHandler,w
  7029     05D0  0020               	movlb	0	; select bank0
  7030     05D1  07B4               	addwf	_eusartRxHead,f	;volatile
  7031     05D2                     i1l1972:
  7032                           
  7033                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7034     05D2  3008               	movlw	8
  7035     05D3  0234               	subwf	_eusartRxHead,w	;volatile
  7036     05D4  1C03               	skipc
  7037     05D5  2DD7               	goto	u139_21
  7038     05D6  2DD8               	goto	u139_20
  7039     05D7                     u139_21:
  7040     05D7  2DD9               	goto	i1l1976
  7041     05D8                     u139_20:
  7042     05D8                     i1l1974:
  7043                           
  7044                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  7045     05D8  01B4               	clrf	_eusartRxHead	;volatile
  7046     05D9                     i1l1976:
  7047                           
  7048                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  7049     05D9  3001               	movlw	1
  7050     05DA  00F0               	movwf	??_EUSART_RxDataHandler
  7051     05DB  0870               	movf	??_EUSART_RxDataHandler,w
  7052     05DC  07B2               	addwf	_eusartRxCount,f	;volatile
  7053     05DD                     i1l313:
  7054     05DD  0008               	return
  7055     05DE                     __end_of_EUSART_RxDataHandler:
  7056     007E                     btemp	set	126	;btemp
  7057     007E                     int$flags	set	126
  7058     007E                     wtemp0	set	126
  7059                           
  7060                           	psect	config
  7061                           
  7062                           ;Config register CONFIG1 @ 0x8007
  7063                           ;	Oscillator Selection
  7064                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  7065                           ;	Watchdog Timer Enable
  7066                           ;	WDTE = OFF, WDT disabled
  7067                           ;	Power-up Timer Enable
  7068                           ;	PWRTE = OFF, PWRT disabled
  7069                           ;	MCLR Pin Function Select
  7070                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  7071                           ;	Flash Program Memory Code Protection
  7072                           ;	CP = OFF, Program memory code protection is disabled
  7073                           ;	Data Memory Code Protection
  7074                           ;	CPD = OFF, Data memory code protection is disabled
  7075                           ;	Brown-out Reset Enable
  7076                           ;	BOREN = ON, Brown-out Reset enabled
  7077                           ;	Clock Out Enable
  7078                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7079                           ;	Internal/External Switchover
  7080                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7081                           ;	Fail-Safe Clock Monitor Enable
  7082                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7083     8007                     	org	32775
  7084     8007  3FE4               	dw	16356
  7085                           
  7086                           ;Config register CONFIG2 @ 0x8008
  7087                           ;	Flash Memory Self-Write Protection
  7088                           ;	WRT = OFF, Write protection off
  7089                           ;	Voltage Regulator Capacitor Enable
  7090                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  7091                           ;	PLL Enable
  7092                           ;	PLLEN = ON, 4x PLL enabled
  7093                           ;	Stack Overflow/Underflow Reset Enable
  7094                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7095                           ;	Brown-out Reset Voltage Selection
  7096                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7097                           ;	Low-Voltage Programming Enable
  7098                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7099     8008                     	org	32776
  7100     8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    6
    Data        1
    BSS         89
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      71
    BANK1            80      3      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    LIN_getChecksum@data	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    LIN_getPacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> processLIN@tempRxData(BANK0[8]), 

    LIN_init@processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), 

    LIN_init@table	const PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), 

    LIN_processData	PTR FTN()void  size(2) Largest target is 1
		 -> processLIN(), NULL(), 

    LIN_queuePacket@data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    LIN_queuePacket@tempSchedule	PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), NULL(NULL[0]), 

    LIN_queuePacket@tempSchedule$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    LIN_sendPeriodicTx@periodicTx	PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), NULL(NULL[0]), 

    LIN_sendPeriodicTx@periodicTx$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 11
		 -> LIN_packet(BANK1[11]), processLIN@tempRxData(BANK0[8]), 

    memcpy@d1	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK1[11]), processLIN@tempRxData(BANK0[8]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_rxPacket$data(BANK1[8]), SW_STATE_Data(BANK0[8]), 

    memcpy@s1	PTR const void  size(1) Largest target is 12
		 -> LIN_rxPacket(BANK1[12]), LIN_rxPacket$data(BANK1[8]), SW_STATE_Data(BANK0[8]), 

    memset@dest	PTR void  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    memset@p	PTR unsigned char  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    S43$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    schedule	PTR const struct . size(2) Largest target is 7
		 -> scheduleTable(CODE[6]), NULL(NULL[0]), 

    schedule$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    scheduleTable$data	PTR unsigned char  size(1) Largest target is 8
		 -> SW_STATE_Data(BANK0[8]), 

    sp__memcpy	PTR void  size(1) Largest target is 11
		 -> LIN_packet(BANK1[11]), processLIN@tempRxData(BANK0[8]), 

    sp__memset	PTR void  size(1) Largest target is 12
		 -> LIN_packet(BANK1[11]), LIN_rxPacket(BANK1[12]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> LIN_timerHandler(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_LIN_timerHandler
    _LIN_sendPeriodicTx->_LIN_queuePacket
    _LIN_queuePacket->i1_LIN_getChecksum
    _LIN_queuePacket->i1_memcpy
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LIN_Master_Initialize->_LIN_init
    _LIN_setTimerHandler->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LIN_handler->_processLIN
    _processLIN->_LIN_getPacket
    _LIN_getPacket->_memcpy
    _LIN_startTimer->_TMR0_WriteTimer
    _LIN_sendPacket->_EUSART_Write
    _LIN_receivePacket->_LIN_getChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _LIN_timerHandler->_LIN_sendPeriodicTx
    _LIN_sendPeriodicTx->_LIN_queuePacket

Critical Paths under _main in BANK1

    _main->_LIN_handler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3435
                                              2 BANK1      1     1      0
                        _LIN_handler
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1056
                  _EUSART_Initialize
              _LIN_Master_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_Master_Initialize                                0     0      0     392
                           _LIN_init
 ---------------------------------------------------------------------------------
 (3) _LIN_init                                             5     1      4     392
                                             11 BANK0      5     1      4
                _LIN_setTimerHandler
                    _LIN_startPeriod
                      _LIN_stopTimer
 ---------------------------------------------------------------------------------
 (4) _LIN_stopTimer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_startPeriod                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _LIN_setTimerHandler                                  0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LIN_handler                                          2     2      0    2379
                                              0 BANK1      2     2      0
                                NULL *
                 _EUSART_is_rx_ready
                      _LIN_disableRx
                       _LIN_enableRx
                  _LIN_receivePacket
                     _LIN_sendPacket
                     _LIN_startTimer
                             _memset
                         _processLIN *
 ---------------------------------------------------------------------------------
 (2) _processLIN                                           9     9      0    1187
                                             19 BANK0      9     9      0
                      _LIN_getPacket
 ---------------------------------------------------------------------------------
 (3) _LIN_getPacket                                        2     2      0    1138
                                             17 BANK0      2     2      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     599
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               8     5      3     461
                                              9 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _LIN_startTimer                                       1     1      0      44
                                             10 BANK0      1     1      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_WriteTimer                                      1     1      0      22
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LIN_sendPacket                                       2     2      0      90
                                             11 BANK0      2     2      0
                       _EUSART_Write
                      _LIN_sendBreak
 ---------------------------------------------------------------------------------
 (3) _LIN_sendBreak                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_receivePacket                                    1     1      0     459
                                             17 BANK0      1     1      0
                        _EUSART_Read
                    _LIN_getChecksum
 ---------------------------------------------------------------------------------
 (3) _LIN_getChecksum                                      8     6      2     435
                                              9 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          2     2      0      24
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LIN_enableRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LIN_disableRx                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    1768
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0    1768
                                NULL *
                   _LIN_timerHandler *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _LIN_timerHandler                                     1     1      0    1768
                                             13 COMMON     1     1      0
                 _LIN_sendPeriodicTx
                    i1_LIN_stopTimer
 ---------------------------------------------------------------------------------
 (9) i1_LIN_stopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LIN_sendPeriodicTx                                   5     5      0    1768
                                              4 BANK0      5     5      0
                    _LIN_queuePacket
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _LIN_queuePacket                                     9     8      1    1260
                                              8 COMMON     5     4      1
                                              0 BANK0      4     4      0
                     _LIN_calcParity
                  i1_LIN_getChecksum
                           i1_memcpy
                           i1_memset
 ---------------------------------------------------------------------------------
 (11) i1_memset                                            7     3      4     148
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (11) i1_memcpy                                            8     5      3     195
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (11) i1_LIN_getChecksum                                   8     6      2     235
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (11) _LIN_calcParity                                      3     3      0     338
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LIN_handler
     NULL(Fake) *
     _EUSART_is_rx_ready *
     _LIN_disableRx *
     _LIN_enableRx *
     _LIN_receivePacket *
       _EUSART_Read
       _LIN_getChecksum
     _LIN_sendPacket *
       _EUSART_Write
       _LIN_sendBreak
     _LIN_startTimer *
       _TMR0_WriteTimer
     _memset *
     _processLIN *
       _LIN_getPacket
         _memcpy
         _memset
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _LIN_Master_Initialize
       _LIN_init
         _LIN_setTimerHandler
           _TMR0_SetInterruptHandler
         _LIN_startPeriod
         _LIN_stopTimer
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     NULL(Fake) *
     _LIN_timerHandler *
       _LIN_sendPeriodicTx
         _LIN_queuePacket
           _LIN_calcParity
           i1_LIN_getChecksum
           i1_memcpy
           i1_memset
         ___wmul
       i1_LIN_stopTimer
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      87       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1C      47       6       88.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3      32       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      87      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 11 16:35:26 2025

                ?_EUSART_SetRxInterruptHandler 0053                          __end_of_LIN_getPacket 0557  
                        ??_LIN_setTimerHandler 0055                          __end_of_LIN_disableRx 06AF  
                               _scheduleLength 0040                                             l73 05F3  
                                           l94 02A0                            ___wmul@multiplicand 0072  
                              _timer0ReloadVal 0030                                ?_LIN_calcParity 0070  
                                          l120 03B7                                            l113 03EB  
                                          l105 0306                                            l123 0556  
                                          l132 041C                                            l133 041F  
                                          l136 0645                                            l152 06BA  
                                          l161 06AE                                            l146 0666  
                                          l331 069F                                            l164 06C9  
                                          l500 01B3                                            l325 0699  
                                          l149 06B6                                            l158 06A9  
                                          l334 0687                                            l510 01D2  
                                          l503 01BF                                            l328 0693  
                                          l432 064C                                            l512 01D5  
                                          l504 01C1                                            l193 065D  
                                          l337 068D                                            l521 01F2  
                                          l274 066F                                            l186 0638  
                                          l530 0208                                            l522 01F4  
                                          l506 01C4                                            l435 0651  
                                          l515 01E1                                            l292 045A  
                                          l268 0349                                            l524 01F7  
                                          l516 01E3                                            l293 0464  
                                          l461 06A4                                            l429 061A  
                                          l509 01D0                                            l438 06B2  
                                          l518 01E6                                            l287 04A2  
                                          l471 0681                                            l455 0607  
                                          l527 0203                                            l296 047B  
                                          l368 05AA                                            l528 0205  
                                          l497 01AE                                            l498 01B0  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0053  
                                          wreg 0009                          __end_of_scheduleTable 0676  
                                 ?_EUSART_Read 0070                                           l2000 03B2  
                                         l2010 06A5                                           l2002 063B  
                                         l2012 0667                                           l2020 03CB  
                                         l2004 063D                                           l2100 059D  
                                         l2022 03CF                                           l2006 0641  
                                         l2110 05A8                                           l2102 05A1  
                                         l1143 04E3                                           l2032 03EA  
                                         l2024 03D1                                           l2016 03B8  
                                         l2008 0642                                           l1152 0590  
                                         l2112 0646                                           l2104 05A3  
                                         l2120 05F4                                           l2026 03D2  
                                         l2018 03C0                                           l1146 04EF  
                                         l2050 0652                                           l2114 0649  
                                         l2106 05A5                                           l2130 0600  
                                         l2122 05F9                                           l2028 03E8  
                                         l2060 0311                                           l2116 064A  
                                         l2108 05A6                                           l2124 05FC  
                                         l2220 0608                                           l2054 0658  
                                         l2310 028E                                           l2070 0324  
                                         l2062 031B                                           l2126 05FE  
                                         l2118 06AF                                           l2320 029C  
                                         l2312 028F                                           l2080 0340  
                                         l2072 0326                                           l2064 031E  
                                         l2056 0307                                           l2048 062B  
                                         l2128 05FF                                           l2400 01EE  
                                         l2330 02BA                                           l2322 02A4  
                                         l2314 0295                                           l2082 0341  
                                         l2074 032E                                           l2066 0320  
                                         l2058 0309                                           l2402 01F9  
                                         l2340 02D8                                           l2332 02BD  
                                         l2324 02A9                                           l2316 0296  
                                         l2084 0342                                           l2076 0336  
                                         l2068 0322                                           l2092 0591  
                                         l2404 01FF                                           l2342 02E0  
                                         l2334 02C3                                           l2326 02AF  
                                         l2318 0299                                           l2086 0347  
                                         l2078 033E                                           l2094 0596  
                                         l2406 020A                                           l2344 02E3  
                                         l2336 02C4                                           l2328 02B3  
                                         l2352 02EE                                           l2096 0599  
                                         l2360 0192                                           l2346 02E7  
                                         l2338 02D0                                           l2098 059B  
                                         l2370 019C                                           l2362 0195  
                                         l1900 049B                                           l2380 01A4  
                                         l2372 019E                                           l2364 0196  
                                         l1902 049E                                           l1910 0455  
                                         l1830 0578                                           l2438 02F8  
                                         l2390 01C6                                           l2382 01A6  
                                         l2374 019F                                           l2366 0197  
                                         l1904 04A0                                           l1920 0470  
                                         l1912 0455                                           l1840 04D1  
                                         l1832 057B                                           l1752 067C  
                                         l2392 01CC                                           l2384 01A9  
                                         l2376 01A1                                           l2368 019A  
                                         l1922 0476                                           l1914 045F  
                                         l1842 04D6                                           l1834 0580  
                                         l1930 053E                                           l2394 01D7  
                                         l2386 01B5                                           l2378 01A2  
                                         l1924 0477                                           l1916 0465  
                                         l1908 06C7                                           l1844 04DA  
                                         l1836 0584                                           l1932 0548  
                                         l1860 05E0                                           l2396 01DD  
                                         l2388 01BB                                           l1870 03F7  
                                         l1918 046C                                           l1926 0479  
                                         l1838 04CC                                           l1934 0554  
                                         l1790 06B3                                           l1862 05EA  
                                         l2398 01E8                                           l1872 0401  
                                         l1880 0416                                           l1928 0539  
                                         l1960 0682                                           l1792 065E  
                                         l1864 05F0                                           l1890 0482  
                                         l1882 041E                                           l1874 0405  
                                         l1866 03EE                                           l1938 06A2  
                                         l1962 0694                                           l1794 06B7  
                                         l1980 06AA                                           l1892 048E  
                                         l1876 040E                                           l1868 03F5  
                                         l1964 068E                                           l1894 0492  
                                         l1886 047C                                           l1878 0412  
                                         l1990 0394                                           l1982 0384  
                                         l1966 069A                                           l1958 0688  
                                         l1896 0498                                           l1888 047C  
                                         l1992 039A                                           l1984 0387  
                                         l1898 0499                                           l1994 039D  
                                         l1986 038B                                           l1996 03A5  
                                         l1988 038F                                           l1998 03AA  
                                         u1300 041C                                           u1301 041B  
                                         u1310 0482                                           u1230 0590  
                                         u1311 0481                                           u1231 058F  
                                         u1320 0498                                           u1400 039A  
                                         u1240 04EF                                           u1321 0497  
                                         u1401 0399                                           u1241 04EE  
                                         u1330 045A                                           u1410 03B2  
                                         u1331 0459                                           u1411 03B1  
                                         u1420 066E                                           u1340 045F  
                                         u1500 0651                                           u1421 066C  
                                         u1341 045E                                           u1501 0650  
                                         _LATA 010C                                           u1430 066F  
                                         u1350 0476                                           _LATB 010D  
                                         u1351 0475                                           _LATC 010E  
                                         u1440 03C0                                           u1441 03BF  
                                         _LATE 0110                                           u1290 040E  
                                         u1450 03E8                                           u1291 040D  
                                         u1451 03E7                                           u1800 02AF  
                                         u1801 02AE                                           u1810 02C3  
                                         u1811 02C2                                           u1820 02D8  
                                         u1821 02D7                                           u1830 02E0  
                                         u1831 02DF                                           u1840 01AE  
                                         u1841 01AD                                           u1770 0295  
                                         u1850 01BF                                           u1771 0294  
                                         u1851 01BE                                           u1780 02A4  
                                         u1860 01D0                                           u1781 02A3  
                                         u1861 01CF                                           u1790 02A9  
                                         u1870 01E1                                           u1791 02A8  
                                         u1871 01E0                                           u1880 01F2  
                                         u1881 01F1                                           u1890 0203  
                                         u1891 0202                                           i1l81 00D2  
                                         i1l84 010B                                           _PLLR 04D6  
                                         _TMR0 0015                                           _WPUB 020D  
                                         _WPUE 0210                                 _LIN_sendPacket 0384  
                        __end_of_LIN_sendBreak 06CA                                           _main 0192  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0038  
                                processLIN@cmd 0065                       LIN_receivePacket@rxIndex 0039  
                      __end_of_TMR0_Initialize 0608                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0652  
                                        ?_main 0070                                          i1l132 044F  
                                        i1l133 0452                                          i1l302 0536  
                                        i1l126 0191                                          i1l143 04C9  
                                        i1l400 0036                                          i1l313 05DD  
                                        i1l322 06C6                                          i1l316 06CC  
                                        i1l309 0383                                          i1l173 028D  
                                        i1l149 06BE                                          i1l319 06C2  
                                   i1memcpy@d1 0074                                          i1l392 0012  
                                        i1l474 06CB                                          i1l299 0534  
                                        i1l395 0026                                          i1l468 062A  
                              _TMR0_WriteTimer 06A0                                          i1l399 0036  
                                        i1l684 0561                                          i1l686 0575  
                                   i1memcpy@s1 0070                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISE 0090                                          u90_20 011B  
                                        u90_21 0119                                          u90_22 011C  
                                        u91_20 0122                                          u91_21 0120  
                                        u92_24 0123                                          u93_20 0128  
                                        u93_21 0126                                          u93_22 0129  
                                        u94_20 012F                                          u94_21 012D  
                                        u94_22 0130                                          u95_20 0136  
                                        u95_21 0134                                          u96_24 0137  
                                        u97_20 013C                                          u89_20 0114  
                                        u97_21 013A                                          u89_21 0112  
                                        _TXREG 019A                                          u97_22 013D  
                                        u89_22 0115                                          u98_20 0143  
                                        u98_21 0141                                          u98_22 0144  
                                        u99_20 014A                                          u99_21 0148  
                             __end_of_LIN_init 05F4                          __end_of_LIN_stopTimer 06B7  
                                        _TXSTA 019E                      ?_TMR0_SetInterruptHandler 0053  
                             __end_of_TMR0_ISR 062B                                 _WDT_Initialize 06AF  
                       __end_of_LIN_sendPacket 03B8                                          pclath 000A  
                               _LIN_startTimer 0639                                          status 0003  
                                        wtemp0 007E                               __end_ofi1_memcpy 0515  
                             __end_ofi1_memset 05C5                         ?_LIN_Master_Initialize 0070  
                             ?_LIN_getChecksum 0053                    LIN_queuePacket@tempSchedule 004C  
                              __initialization 003A                                   ?_LIN_handler 0070  
                                 __end_of_main 0213                                 ??_EUSART_Write 0053  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0055  
                                       ??_main 00D1                         __end_of_WDT_Initialize 06B3  
    __end_of_EUSART_DefaultFramingErrorHandler 06CD            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 06CC  
                   _EUSART_OverrunErrorHandler 0024                         __end_of_LIN_startTimer 0646  
                              ?_LIN_sendPacket 0070                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0670                                         _BORCON 0116  
                                       u100_24 014B                                         u101_20 0150  
                                       u101_21 014E                                         u101_22 0151  
                                       u110_20 017F                                         u102_20 0157  
                                       u110_21 017D                                         u102_21 0155  
                                       u110_22 0180                                         u102_22 0158  
                                       i1l1143 0508                                         i1l2200 0360  
                                       u111_20 0186                                         u103_20 015E  
                                       i1l1152 05C4                                         i1l2040 04B3  
                                       u111_21 0184                                         u103_21 015C  
                                       i1l2210 0380                                         i1l2202 0365  
                                       i1l1146 0514                                         i1l2042 04B6  
                                       i1l2204 036B                                         i1l2044 04BC  
                                       i1l2036 04A3                                         i1l2212 061B  
                                       i1l2206 0370                                         i1l2046 04C6  
                                       i1l2038 04A9                                         i1l2214 061C  
                                       i1l2230 0016                                         i1l2208 037A  
                                       u120_20 0073                                         i1l2216 061F  
                                       i1l2232 001B                                         i1l2224 0006  
                                       u120_21 0072                                         i1l2090 06C3  
                                       i1l2218 0625                                         i1l2234 0020  
                                       i1l2226 000A                                         i1l2180 0515  
                                       u112_24 0187                                         u104_24 015F  
                                       i1l2236 002B                                         i1l2228 000E  
                                       i1l2190 052F                                         i1l2182 051C  
                                       i1l2238 0030                                         i1l2088 06BF  
                                       i1l2192 034A                                         i1l2184 0523  
                                       u113_20 018F                                         u105_20 0164  
                                       u121_20 009A                                         i1l1800 005A  
                                       u113_21 018D                                         u105_21 0162  
                                       u121_21 0099                                         i1l2194 0350  
                                       i1l2186 0528                                         u105_22 0165  
                                       i1l1810 0073                                         i1l2196 0355  
                                       i1l2188 052E                                         i1l1820 00B8  
                                       i1l1812 007E                                         i1l1804 0065  
                                       i1l2198 035B                                         i1l1822 00D5  
                                       i1l1814 0089                                         i1l1806 0069  
                                       u106_20 016B                                         i1l1744 010D  
                                       i1l1760 0434                                         i1l1824 00D7  
                                       u122_20 00AA                                         i1l1816 009A  
                                       i1l1808 006D                                         u106_21 0169  
                                       u122_21 00A9                                         i1l1746 0187  
                                       u106_22 016C                                         i1l1770 0451  
                                       i1l1762 0438                                         i1l1754 0421  
                                       i1l1818 00AA                                         i1l1826 00E3  
                                       i1l1850 055D                                         i1l1748 0190  
                                       u114_24 0190                                         i1l1764 0441  
                                       i1l1756 0428                                         i1l1780 04FF  
                                       i1l1828 0108                                         i1l1852 0566  
                                       i1l1940 0213                                         i1l1766 0445  
                                       i1l1758 042A                                         i1l1774 04F1  
                                       i1l1782 05AC                                         i1l1854 056B  
                                       i1l1846 0557                                         i1l1950 025A  
                                       i1l1942 0215                                         u107_20 0172  
                                       u115_20 0441                                         i1l1768 0449  
                                       i1l1776 04F6                                         i1l1784 05AF  
                                       i1l1856 0571                                         i1l1848 0559  
                                       i1l1952 025B                                         i1l1944 022A  
                                       u107_21 0170                                         u115_21 0440  
                                       i1l1970 05CD                                         i1l1778 04FB  
                                       i1l1786 05B4                                         i1l1954 0270  
                                       i1l1946 023A                                         i1l1972 05D2  
                                       i1l1788 05B8                                         i1l1796 0054  
                                       i1l1956 0280                                         i1l1948 024F  
                                       i1l1974 05D8                                         i1l1798 0058  
                                       i1l1976 05D9                                         i1l1968 05C5  
                                       u116_20 044F                                         u116_21 044E  
                                       i1l1978 06BB                                         u108_24 0173  
                                       u109_20 0178                                         u117_20 0514  
                                       u125_20 055D                                         u109_21 0176  
                                       u117_21 0513                                         u125_21 055C  
                                       u109_22 0179                                         u118_20 05C4  
                                       u118_21 05C3                                         u126_25 0562  
                                       u119_20 0064                                         u119_21 0063  
                                       u127_25 0567                                         u160_20 0355  
                                       u128_20 0571                                         u136_20 023A  
                                       u160_21 0354                                         u128_21 0570  
                                       u136_21 0239                                         u161_20 0365  
                                       u137_20 025A                                         u161_21 0364  
                                       u137_21 0259                                         u162_20 037A  
                                       u138_20 0280                                         u146_20 04A9  
                                       u170_20 0030                                         u162_21 0379  
                                       u138_21 027F                                         u146_21 04A8  
                                       u170_21 002F                                         u139_20 05D8  
                                       u147_20 04B3                                         u163_20 0625  
                                       u139_21 05D7                                         u147_21 04B2  
                                       u163_21 0624                                         u148_20 04BC  
                                       u164_20 000A                                         u148_21 04BB  
                                       u164_21 0009                                         u149_20 04C6  
                                       u165_20 000E                                         u149_21 04C5  
                                       u165_21 000D                                         u158_20 051C  
                                       u166_20 0016                                         u158_21 051B  
                                       u166_21 0015                                         u159_20 052E  
                                       u167_20 001B                                         u159_21 052D  
                                       u167_21 001A                                         u168_20 0020  
                                       u168_21 001F                                         u169_20 002B  
                                       u169_21 002A                                         _OSCCON 0099  
                                  i1memcpy@tmp 0075                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                              _LIN_processData 002E                                         ___wmul 0557  
                              _LIN_queuePacket 0052                        __end_of_TMR0_WriteTimer 06A5  
                      i1LIN_getChecksum@length 0074                            _EUSART_Transmit_ISR 0515  
                                       _memcpy 04CA                               ?_TMR0_Initialize 0070  
                                       _memset 0576                             _LIN_enablePeriodTx 003D  
                              _LIN_startPeriod 06B7                                ?_WDT_Initialize 0070  
     TMR0_SetInterruptHandler@InterruptHandler 0053                                ?_LIN_startTimer 0070  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 0608  
                      __end_of__initialization 004E                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0688                   _EUSART_SetTxInterruptHandler 0682  
                                    ?_LIN_init 0055                                 __pcstackCOMMON 0070  
                                ?_LIN_enableRx 0070                               ??_LIN_calcParity 0070  
                              LIN_sendPacket@i 0056                                   __pidataBANK0 06CA  
                          ??_SYSTEM_Initialize 005A                              _LIN_receivePacket 03B8  
                                LIN_init@table 0055                                      ?_TMR0_ISR 0070  
                           ?_LIN_receivePacket 0070                                 _OPTION_REGbits 0095  
                                    ?i1_memcpy 0070                                      ?i1_memset 0070  
                         _eusartRxStatusBuffer 00A0                            ??_LIN_receivePacket 005B  
              ??_EUSART_SetOverrunErrorHandler 0055                      __end_of_SYSTEM_Initialize 061B  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 047C  
                  __end_of_LIN_setTimerHandler 0667                        __end_of_LIN_queuePacket 010C  
                         LIN_handler@LIN_state 003A                      __end_of_LIN_receivePacket 03EC  
                               ??_LIN_enableRx 0053                                     __pmaintext 0192  
                             _LIN_timerHandler 04A3                                     ??_LIN_init 0059  
                          LIN_getChecksum@data 0054                  ?_EUSART_SetTxInterruptHandler 0053  
             _EUSART_TxDefaultInterruptHandler 002A               __end_of_TMR0_SetInterruptHandler 0682  
                                      ?___wmul 0070                                     ??_TMR0_ISR 007E  
                                   __pintentry 0004                               ?_TMR0_WriteTimer 0070  
                      __end_of_LIN_startPeriod 06BB                                        ?_memcpy 0053  
                                      _BAUDCON 019F                                        ?_memset 0053  
                 ??_EUSART_DefaultErrorHandler 0071                          LIN_getChecksum@length 0057  
                             _LIN_timerRunning 003E                                  _eusartRxCount 0032  
                                   ??i1_memcpy 0073                                     ??i1_memset 0074  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0055  
                      ??_LIN_Master_Initialize 005A                                   i1memset@dest 0075  
                      LIN_getChecksum@checksum 0059                           i1LIN_getChecksum@pid 0070  
                                _SW_STATE_Data 0042                      i1LIN_getChecksum@checksum 0076  
                                      __ptext1 0608                                        __ptext2 06AF  
                                      __ptext3 05F4                                        __ptext4 0591  
                                      __ptext5 0646                                        __ptext6 062B  
                                      __ptext7 05DE                                        __ptext8 06B3  
                                      __ptext9 06B7                          _OSCILLATOR_Initialize 0646  
                             ??_LIN_sendPacket 0055                       ??_PIN_MANAGER_Initialize 0053  
                                      clrloop0 0677                           end_of_initialization 004E  
        __end_of_EUSART_SetOverrunErrorHandler 0694                  _EUSART_SetOverrunErrorHandler 068E  
                                      memcpy@d 0058                                        memcpy@n 0054  
                                      memcpy@s 0059                                        memset@c 0053  
                                      memset@n 0055                                        memset@p 0058  
                            _EUSART_Initialize 0307                               ?_LIN_queuePacket 0078  
                           ?_EUSART_Initialize 0070                              i1_LIN_getChecksum 0420  
                                    _RCSTAbits 019D                              ??i1_LIN_stopTimer 0070  
                           _EUSART_is_rx_ready 0667                                  _LIN_getPacket 0537  
                           ?i1_LIN_getChecksum 0070                                  _LIN_disableRx 06AA  
                             ?_LIN_startPeriod 0070                            ??_EUSART_Initialize 0055  
                             ??_WDT_Initialize 0053                 ??_EUSART_SetTxInterruptHandler 0055  
                            LIN_getPacket@data 005C                       _TMR0_SetInterruptHandler 067C  
                                    _PORTAbits 000C                            ?_EUSART_is_rx_ready 0070  
                                    _PORTCbits 000E                                     _processLIN 0652  
                          ??i1_LIN_getChecksum 0072                            LIN_init@tableLength 0059  
                             ??_LIN_startTimer 0054                           __end_of_LIN_enableRx 06AA  
                                _scheduleTable 0670                   LIN_sendPeriodicTx@periodicTx 0051  
                    __end_of_EUSART_Initialize 034A                           ??_EUSART_is_rx_ready 0053  
                   __end_of_LIN_sendPeriodicTx 028E                                  _LIN_sendBreak 06C7  
                                    _TXSTAbits 019E                      __end_ofi1_LIN_getChecksum 0453  
                               ?_LIN_getPacket 0070                                 ?_LIN_disableRx 0070  
           __end_of_EUSART_DefaultErrorHandler 06C7                     _EUSART_DefaultErrorHandler 06C3  
                                    i1memcpy@d 0076                                      i1memcpy@n 0071  
                                    i1memcpy@s 0077                                 __end_of___wmul 0576  
                                    i1memset@c 0070                                      i1memset@n 0072  
                                    i1memset@p 0076                                   _EUSART_Write 0453  
                               __end_of_memcpy 04F0                         ?_OSCILLATOR_Initialize 0070  
              LIN_sendPeriodicTx@scheduleIndex 0038                                 __end_of_memset 0591  
                          start_initialization 003A                                  _LIN_stopTimer 06B3  
                     __end_of_LIN_timerHandler 04CA                                  ??_EUSART_Read 0053  
 EUSART_SetRxInterruptHandler@interruptHandler 0053   EUSART_SetTxInterruptHandler@interruptHandler 0053  
                        LIN_startTimer@timeout 0054                                 ?_LIN_sendBreak 0070  
                            LIN_calcParity@CMD 0071                 ?_EUSART_SetOverrunErrorHandler 0053  
                            LIN_calcParity@PID 0072                     _EUSART_FramingErrorHandler 0026  
                                     ??___wmul 0074                         _EUSART_SetErrorHandler 069A  
                                  __pdataBANK0 0066                                       ??_memcpy 0056  
                                     ??_memset 0057                           processLIN@tempRxData 005D  
                                   memset@dest 0059                                    ?_processLIN 0070  
                          LIN_init@processData 0057                    __end_of_EUSART_Transmit_ISR 0537  
                               ?_LIN_stopTimer 0070                                      ___latbits 0002  
                                __pcstackBANK0 004A                                  __pcstackBANK1 00CF  
                            ??_LIN_getChecksum 0055                     __end_of_EUSART_Receive_ISR 0384  
                            _LIN_timerCallBack 003C               _EUSART_RxDefaultInterruptHandler 0028  
                          __end_of_EUSART_Read 04A3                  __end_of_LIN_Master_Initialize 0639  
                        _TMR0_InterruptHandler 0020                   __end_of_EUSART_RxDataHandler 05DE  
                              ??_LIN_getPacket 005B                         _PIN_MANAGER_Initialize 0591  
                                ??_LIN_handler 00CF                               LIN_getChecksum@i 0058  
                              ??_LIN_disableRx 0053                           EUSART_Read@readValue 0054  
                           LIN_getChecksum@pid 0053                                   _eusartRxHead 0034  
                                 _eusartTxHead 0037                                   _eusartRxTail 0033  
                                 _eusartTxTail 0036                   ??_INTERRUPT_InterruptManager 007E  
                      _eusartTxBufferRemaining 0035                                ??_LIN_sendBreak 0053  
                              i1_LIN_stopTimer 06BB                                 _eusartRxBuffer 00A8  
                            ??_TMR0_Initialize 0055                                 _eusartTxBuffer 00B0  
                               ___wmul@product 0074         EUSART_SetErrorHandler@interruptHandler 0053  
                                     _LATBbits 010D                                      clear_ram0 0676  
                                     _PIE1bits 0091                              _eusartRxLastError 0031  
                   ??_TMR0_SetInterruptHandler 0055                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0055                                       _LIN_init 05DE  
                                 _LIN_enableRx 06A5                                       _TMR0_ISR 061B  
    __end_of_EUSART_DefaultOverrunErrorHandler 06C3            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 06BF  
                             LIN_getPacket@cmd 005B                            __end_of_LIN_handler 0307  
                            ___wmul@multiplier 0070                                ??_LIN_stopTimer 0053  
                                     i1_memcpy 04F0                                       i1_memset 05AB  
                                 _LIN_rxPacket 00B8                                    _EUSART_Read 047C  
                           _LIN_periodCallBack 003B                                      memcpy@tmp 0057  
                        i1LIN_getChecksum@data 0071                        ??_OSCILLATOR_Initialize 0053  
                          _EUSART_ErrorHandler 0022                    ?_EUSART_DefaultErrorHandler 0070  
                           _LIN_sendPeriodicTx 0213                        __end_ofi1_LIN_stopTimer 06BF  
                          ?_LIN_sendPeriodicTx 0070                           _EUSART_RxDataHandler 05C5  
                                     __ptext10 065E                                       __ptext11 067C  
                                     __ptext20 0537                                       __ptext12 0307  
                                     __ptext21 0576                                       __ptext13 0682  
                                     __ptext30 047C                                       __ptext22 04CA  
                                     __ptext14 0688                                       __ptext31 06A5  
                                     __ptext23 0639                                       __ptext15 068E  
                                     __ptext40 0557                                       __ptext32 06AA  
                                     __ptext24 06A0                                       __ptext16 0694  
                                     __ptext41 0052                                       __ptext33 0667  
                                     __ptext25 0384                                       __ptext17 069A  
                                     __ptext50 06C3                                       __ptext42 05AB  
                                     __ptext26 06C7                                       __ptext18 028E  
                                     __ptext51 05C5                                       __ptext43 04F0  
                                     __ptext35 061B                                       __ptext27 0453  
                                     __ptext19 0652                                       __ptext44 0420  
                                     __ptext36 04A3                                       __ptext28 03B8  
                                     __ptext45 010C                                       __ptext37 06CB  
                                     __ptext29 03EC                                       __ptext46 0515  
                                     __ptext38 06BB                                       __ptext47 034A  
                                     __ptext39 0213                                       __ptext48 06BF  
                                     __ptext49 06CC                              ?_LIN_timerHandler 0070  
                      TMR0_WriteTimer@timerVal 0053                             ??_LIN_timerHandler 007D  
                            ??_TMR0_WriteTimer 0053                             i1LIN_getChecksum@i 0075  
         __end_of_TMR0_DefaultInterruptHandler 06CC                   _TMR0_DefaultInterruptHandler 06CB  
                                     _schedule 002C                        ?_EUSART_SetErrorHandler 0053  
                         ??_LIN_sendPeriodicTx 004E  EUSART_SetOverrunErrorHandler@interruptHandler 0053  
                                  _LIN_handler 028E                                       int$flags 007E  
                              _LIN_getChecksum 03EC             __end_of_INTERRUPT_InterruptManager 0038  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 069A  
                _EUSART_SetFramingErrorHandler 0694                                   ??_processLIN 005D  
                                  _LIN_txReady 0041                                    _LIN_timeout 0066  
                               _LIN_calcParity 010C                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       memcpy@d1 005A  
                                     memcpy@s1 0053                            LIN_queuePacket@data 0078  
                          _LIN_setTimerHandler 065E                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 06A0  
                           __end_of_processLIN 065E           __end_of_EUSART_SetRxInterruptHandler 068E  
                 _EUSART_SetRxInterruptHandler 0688                  ?_TMR0_DefaultInterruptHandler 0070  
                                   _LIN_packet 00C4                             _EUSART_Receive_ISR 034A  
                         ?_LIN_setTimerHandler 0070                                     _LIN_period 003F  
EUSART_SetFramingErrorHandler@interruptHandler 0053                         __end_of_LIN_calcParity 0192  
                                __pstringtext1 0670                             LIN_queuePacket@cmd 004A  
                                   _OPTION_REG 0095                            ?_EUSART_Receive_ISR 0070  
                              _TMR0_Initialize 05F4                              ??_LIN_queuePacket 0079  
                             ?i1_LIN_stopTimer 0070                             EUSART_Write@txData 0054  
               __end_of_PIN_MANAGER_Initialize 05AB                              ??_LIN_startPeriod 0053  
                             LIN_queuePacket@i 004B                           ??_EUSART_Receive_ISR 0071  
                      __end_of_LIN_getChecksum 0420                          _LIN_Master_Initialize 062B  
